{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Components/Tile/DialogTitleControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Utils/Language.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/ArrowDown.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","middle","_this2","_ref3","_callee4","response","result_blob","_context4","send","file_id","sent","concat","data","_x4","then","Blob","fs","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","_loop","beforeEntityText","offset","entityText","decodedUrl","startsWith","decodeURI","openChatCommand","searchText","hashtag","getChatId","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","background","palette","default","borderRadius","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","showOnline","pointer","BookmarkBorder_default","tileColor","abs","Components_Tile_ChatStatus","statusRoot","statusIcon","zIndex","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","img","createRef","blur","preview","isBlurred","fitSize","stickerStyle","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","ref","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","DialogTitleControl","react__WEBPACK_IMPORTED_MODULE_5___default","StickerStore","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","primary","main","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","hasFocus","_this$props$animation","mime_type","isGif","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DialogStatusControl","updateSubtitle","find","subtitle","isAccent","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","_this$state2","statusAccentSubtitle","statusSubtitle","secondary","dark","ChatControl","onTileSelect","showStatus","Components_Tile_DialogStatusControl","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","getCyrillicInput","getLatinInput","cyrillicInput","input","output","latinInput","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","C_Projects_web_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","formatText","parseEntities","parseMarkdown","textEntity","match","TLD","emailRegExp","fullRegExp","RegExp","matchIndex","raw","rawOffset","test","protocol","tld","indexOf","balanced","urlLength","urlOpenBrackets","urlCloseBrackets","checkBrackets","noTrim","markdownEntities","`","**","__","markdownRegExp","newText","language","splice","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","t1","performance","emojiRegex","exec","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","TopChat","shortTitle","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","loadContent","concatSearchResults","results","chat_ids","j","sort","b","orderCompare","order","sessionId","savedMessages","promises","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","chats","toUpperCase","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_chat_id","offset_message_id","topPromise","recentlyFoundPromise","savedMessagesPromise","_ref4","category","force","slicedToArray","handleRecentlyFound","_callee3","_context3","offset_order","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","offsetHeight","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ForwardTargetChat","forward-target-chat-selected","border","markSelected","markUnselected","boxShadow","paper","ForwardDialog","getChatsPromise","getPublicMessageLink","chatIds","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","UserControl","Components_Tile_UserStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","y","Components_Tile_UserControl","handleSelectUser","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","reload","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","headerMaster","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","onScrollChange","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","maxHeight","Dialogs","onClientUpdateSearchHashtag","searchChatId","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogsHeader","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","media","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onUpdateChatPinnedMessage","pinned_message_id","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ArrowDown","setStatus","shouldBe","class","xmlns","y2","x2","y1","x1","strokeLinecap","strokeWidth","stroke","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadLast","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","_callee5","_context5","arrowDown","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee6","_context6","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","Components_ColumnMiddle_ArrowDown","arrow-down","&:active","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"6LAYMA,GAAc,EAk6BdC,EAAQ,gBA/5BV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAkBJI,SAnBc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAmBH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAEE,eAFFF,EAAAG,GAAA,EAUE,6BAVFH,EAAAG,GAAA,yBAGCnB,EAAKoB,IAAIN,EAAOO,MAEhBrB,EAAKsB,aAAaR,GAElBd,EAAKuB,KAAKT,EAAO,SAAUA,GAP5BE,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,EAWOlB,EAAKyB,2BAA2BX,GAXvC,sBAAAE,EAAAQ,OAAA,qCAAAR,EAAAU,SAAAb,MAnBG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAuCd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCAIL,IAAK,wBAIL,IAAK,2BACDd,EAAKuB,KAAKT,EAAO,SAAUA,KAlDzBd,EA0Dd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5DvC9B,EA+DdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjE1C9B,EAoEdyB,2BApEc,eAAAW,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoEe,SAAAyB,EAAMvB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACpBJ,EADoB,CAAAwB,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAEpBV,EAAOyB,oBAFa,CAAAD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAImB,0CAAxCV,EAAOyB,oBAAoB,SAJN,CAAAD,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAKflB,EAAKwC,SALU,wBAAAF,EAAAZ,SAAAW,MApEf,gBAAAI,GAAA,OAAAL,EAAAR,MAAAzB,KAAA0B,YAAA,GAAA7B,EA6EdsB,aAAe,SAAAR,GACX,GAAKA,EAAL,CADqB,IAGbO,EAASP,EAATO,KACHA,IAELrB,EAAK0C,gBAAgBrB,GACrBrB,EAAK2C,cAActB,MApFTrB,EAuFd0C,gBAAkB,SAAArB,GAAQ,IACduB,EAA4BvB,EAA5BuB,IAAKC,EAAuBxB,EAAvBwB,GAAIC,EAAmBzB,EAAnByB,QAASC,EAAU1B,EAAV0B,MAG1B,UAFO1B,EAAKuB,IAEP5C,EAAKgD,UAAUC,IAAIJ,IACnBE,EAAMG,2BACNrD,GAAgBiD,GAAYF,GAAjC,CAEA,IAAMO,EAAQnD,EAAKgD,UAAUI,IAAIP,GACjC,GAAKM,EAAL,CAEAnD,EAAKgD,UAAUK,OAAOR,GAEtB,IAAM/C,EAAQE,EAAKsD,WAEnBH,EAAMI,QAAQ,SAAAC,GACV,OAAQA,EAAK,UACT,IAAK,OACDxD,EAAKyD,WAAW3D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,IAAK,UACD5C,EAAK0D,cAAc5D,EAAO0D,EAAMnC,EAAMuB,GACtC,MAEJ,IAAK,UACD5C,EAAK2D,cAAc7D,EAAO0D,EAAMnC,EAAMuB,EAAK,MAC3C,MAEJ,IAAK,OACD5C,EAAK4D,WAAW9D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,QACIiB,QAAQC,MAAM,wCAAyCN,SAzHzDxD,EA+Hd2C,cAAgB,SAAAtB,GAAQ,IACZwB,EAAexB,EAAfwB,GAAIkB,EAAW1C,EAAX0C,cACL1C,EAAKuB,IAEP5C,EAAKgE,QAAQf,IAAIJ,KAClBkB,EAAOE,wBAEXjE,EAAKgE,QAAQX,OAAOR,KAtIV7C,EAyIdyD,WAAa,SAAC3D,EAAOoE,EAAM7C,EAAMuB,GACxBsB,GAELlE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKoE,oBAAoBF,EAAKrB,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeJ,MAjJ3ClE,EAqJd4D,WAAa,SAAC9D,EAAOyE,EAAMlD,EAAMuB,GACxB2B,GAELvE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKwE,oBAAoBD,EAAK1B,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeC,MA7J3CvE,EAiKd0D,cAAgB,SAAC5D,EAAO2E,EAASpD,EAAMuB,GACnC,GAAK6B,EAAL,CAD2C,IAGnCC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAClD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERnF,EAAKoF,WAAWtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GACxC,MAEJ,IAAK,kBAAmB,IACZY,EAAaX,EAAbW,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAC9C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAGlDI,GACA7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAG1CQ,GACAjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAGhDM,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1Cc,GACAvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAG9CgB,GACAzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAG1CkB,GACA3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,GAGnDiB,GACA1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GAGvD,MAEJ,IAAK,eAAgB,IAETY,EADUX,EAAVqB,MACAV,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAER1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GACnD,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WAER3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,MAtRjDzE,EA8RdoF,WAAa,SAACtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GAClC,GAAKU,EAAL,CAD8C,IAGtCR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACfA,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1CE,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,KAvS5CzE,EA2SdgF,YAAc,SAAClF,EAAOiF,EAAO1D,EAAMuB,EAAKoD,GACpC,GAAIjB,EACA,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAMmB,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAYrB,EAAMmB,MAAMD,GAC9B,GAAIG,EAAW,CACX,IAAMC,EAASD,EAAUrB,MACzB,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsG,gBAAgBN,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,KAErD,UAzTNhG,EAgUd8E,YAAc,SAAChF,EAAO+E,EAAOxD,EAAMuB,EAAKoD,GACpC,GAAInB,EAAM2B,sBAAuB,CAC7B,IAAMH,EAASxB,EAAM2B,sBAAsBzB,MACvCsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyG,yBAAyBT,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAInB,EAAMA,MAAO,CACb,IAAMwB,EAASxB,EAAMA,MACjBwB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2G,gBAAgBX,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAtVnDhG,EA4VdkF,eAAiB,SAACpF,EAAOmF,EAAU5D,EAAMuB,EAAKoD,GAC1C,GAAIf,EAAS2B,UAAW,KACLP,EAAWpB,EAAS2B,UAA3B7B,MACJsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6G,4BAA4Bb,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACjE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIf,EAASA,SAAU,KACDoB,EAAWpB,EAArBA,SACJoB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8G,mBAAmBd,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAlXnDhG,EAwXdsF,eAAiB,SAACxF,EAAOuF,EAAUhE,EAAMuB,EAAKoD,GAC1C,IAAMe,EAAaC,YAAc3B,GACjC,GAAI0B,EAAY,CACZ,IAAMV,EAASrG,EAAKiH,gBAAgBF,GAChCV,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKkH,mBAAmBlB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,OAlYxDhG,EAwYd2D,cAAgB,SAAC7D,EAAOyF,EAASlE,EAAMuB,EAAKoD,GACxC,GAAIT,EAAQqB,UAAW,CACnB,IAAMP,EAASd,EAAQqB,UAAU7B,MACjC,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKqH,2BAA2BF,EAAQC,EAAW/F,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,GAAOT,MAKzE,GAAIA,EAAQA,QAAS,CACjB,IAAMc,EAASd,EAAQA,QACvB,GAAIc,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsH,kBAAkBH,EAAQC,EAAW/F,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,GAAOT,QApa1DvF,EA0ad6F,gBAAkB,SAAC/F,EAAOyH,EAAWlG,EAAMuB,EAAKoD,GAC5C,GAAIuB,EAAUC,MAAO,CACjB,IAAMnB,EAASkB,EAAUC,MACrBnB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyH,oBAAoBzB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAnbnDhG,EAybd8F,gBAAkB,SAAChG,EAAO4H,EAAWrG,EAAMuB,EAAKoD,GAC5C,GAAI0B,EAAUd,UAAW,CACrB,IAAMP,EAASqB,EAAUd,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2H,6BAA6B3B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAI0B,EAAUjC,MAAO,CACjB,IAAMY,EAASqB,EAAUjC,MACrBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK4H,oBAAoB5B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA/cnDhG,EAqdd4F,YAAc,SAAC9F,EAAO2F,EAAOpE,EAAMuB,EAAKoD,GACpC,GAAIP,EAAMmB,UAAW,CACjB,IAAMP,EAASZ,EAAMmB,UAAU7B,MAC3BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6H,yBAAyB7B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIP,EAAMA,MAAO,CACb,IAAMY,EAASZ,EAAMA,MACjBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8H,gBAAgB9B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA3enDhG,EAifd4E,gBAAkB,SAAC9E,EAAO6E,EAAWtD,EAAMuB,EAAKoD,GAC5C,GAAIrB,EAAUiC,UAAW,CACrB,IAAMP,EAAS1B,EAAUiC,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK+H,6BAA6B/B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIrB,EAAUA,UAAW,CACrB,IAAM0B,EAAS1B,EAAUA,UACrB0B,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKgI,oBAAoBhC,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAvgBnDhG,EA0kBdiI,gBAAkB,SAACnI,EAAOuB,KA1kBZrB,EAguBdoD,IAAM,SAAA8E,GACF,OAAOlI,EAAKmD,MAAMC,IAAI8E,IAjuBZlI,EAouBdoB,IAAM,SAAAC,GACFrB,EAAKmD,MAAM/B,IAAIC,EAAKwB,GAAIxB,IAruBdrB,EAwuBdmI,QAAU,SAAAD,GACN,OAAOlI,EAAKoI,UAAUhF,IAAI8E,IAzuBhBlI,EA4uBdqI,QAAU,SAACH,EAAQI,GACftI,EAAKoI,UAAUhH,IAAI8G,EAAQI,IA7uBjBtI,EAgvBduI,WAAa,SAAAL,GACTlI,EAAKoI,UAAU/E,OAAO6E,IAjvBZlI,EAovBdiH,gBAAkB,SAAAF,GACd,IAAMmB,EAASlI,EAAKwI,cAAcpF,IAAI2D,GAEtC,OAAO/G,EAAKoD,IAAI8E,IAvvBNlI,EA0vBdyI,gBAAkB,SAAC1B,EAAY1F,GAC3BrB,EAAKwI,cAAcpH,IAAI2F,EAAY1F,EAAKwB,IAExC7C,EAAKoB,IAAIC,IA7vBCrB,EAgwBd0I,WAAa,SAAAJ,GACT,IAAKA,EACD,OAAO,KAGX,GAAItI,EAAK2I,KAAK1F,IAAIqF,GACd,OAAOtI,EAAK2I,KAAKvF,IAAIkF,GAGzB,IAAMM,EAAMC,IAAIC,gBAAgBR,GAGhC,OAFAtI,EAAK2I,KAAKvH,IAAIkH,EAAMM,GAEbA,GA5wBG5I,EA+wBd+I,cAAgB,SAAAT,GACRtI,EAAK2I,KAAK1F,IAAIqF,IACdtI,EAAK2I,KAAKtF,OAAOiF,IAjxBXtI,EAqxBdsG,gBAAkB,SAACa,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAzxBFlI,EA6xBdyG,yBAA2B,SAACU,EAAQC,EAAWc,GAC3ClG,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAlyBFlI,EAsyBd2G,gBAAkB,SAACQ,EAAQC,EAAWc,GAClClG,IAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA3yBFlI,EA+yBdyH,oBAAsB,SAACN,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAnzBFlI,EAuzBd2H,6BAA+B,SAACR,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA3zBFlI,EA+zBd4H,oBAAsB,SAACT,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAn0BFlI,EAu0Bd+H,6BAA+B,SAACZ,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA30BFlI,EA+0BdgI,oBAAsB,SAACb,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAn1BFlI,EAu1Bd8G,mBAAqB,SAACK,EAAQC,EAAWc,GACrClG,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA51BFlI,EAg2Bd6H,yBAA2B,SAACV,EAAQC,EAAWc,GAC3ClI,EAAKuB,KAAK,iCAAkC,CACxC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAp2BFlI,EAw2Bd8H,gBAAkB,SAACX,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA52BFlI,EAg3BdqH,2BAA6B,SAACF,EAAQC,EAAWc,GAC7ClI,EAAKuB,KAAK,mCAAoC,CAC1C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAp3BFlI,EAw3BdsH,kBAAoB,SAACH,EAAQC,EAAWc,GACpClI,EAAKuB,KAAK,0BAA2B,CACjC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA53BFlI,EAg4BdkH,mBAAqB,SAACC,EAAQC,EAAWc,GACrClI,EAAKuB,KAAK,2BAA4B,CAClC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAp4BFlI,EAw4Bd6G,4BAA8B,SAACM,EAAQC,EAAWc,GAC9ClI,EAAKuB,KAAK,oCAAqC,CAC3C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAz4BZlI,EAAKkJ,UAAY,GAGjBlJ,EAAKmJ,GAAK,KACVnJ,EAAK2I,KAAO,IAAIS,QAChBpJ,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKoI,UAAY,IAAIiB,IACrBrJ,EAAKwI,cAAgB,IAAIa,IAEzBrJ,EAAKgD,UAAY,IAAIqG,IACrBrJ,EAAKgE,QAAU,IAAIqF,IAEnBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAhBXvJ,8GA6gBDwJ,6EAWLrJ,KAAKgJ,0BACLtF,QAAQ4F,IAAI,yBACRD,GAAUA,kCAIdrJ,KAAKuJ,oCACL7F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,oCAItC3F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,GAElCrJ,KAAKuJ,cAAe,YACJvJ,KAAKyJ,SAASC,MAAM,SAAA/F,GAAK,OAAID,QAAQ4F,IAAI,2BAA4B3F,aAKrF,GALA3D,KAAKgJ,UACLhJ,KAAKuJ,cAAe,EAEpB7F,QAAQ4F,IAAI,2BAERtJ,KAAK+I,UAAU/C,OAAQ,CAEvB,IADAtC,QAAQ4F,IAAI,sCAAwCtJ,KAAK+I,UAAU/C,QAC1DF,EAAI,EAAGA,EAAI9F,KAAK+I,UAAU/C,OAAQF,IACvC9F,KAAK+I,UAAUjD,KAEnB9F,KAAK+I,UAAY,wIAKrB,OAAO,IAAIY,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAUC,OAAOC,UAAUC,KAAK,SACtCH,EAAQI,UAAY,kBAAMN,EAAQE,EAAQK,SAC1CL,EAAQM,QAAU,kBAAMP,EAAOC,EAAQnG,6CAM3C,OAAO3D,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,YAAYC,YAAY,6DAItE,IAAI5K,EAGJ,OAAOM,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,aAAaC,YAAY,sDAK9D3K,EAAOuB,EAAMuB,EAAK4G,EAAUkB,EAAeC,GAAQ,IAAAC,EAAAzK,KAC5D,GAAIN,EAEA,OADAwB,EAAOlB,KAAKiD,IAAI/B,EAAKwB,KAAOxB,IAChBA,EAAK0B,QAAU1B,EAAK0B,MAAMG,8BAClCwH,SAIJ,eAAAG,EAAA5K,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAC,SAAAkK,EAAMzJ,GAAN,IAAA0J,EAAAC,EAAA,OAAAtK,EAAAC,EAAAI,KAAA,SAAAkK,GAAA,cAAAA,EAAAhK,KAAAgK,EAAA/J,MAAA,cAAA+J,EAAA/J,KAAA,EAC0Bc,IAAgBkJ,KAAK,CACxCjC,QAAS,WACTkC,QAAS9J,EAAKwB,KAHrB,UACSkI,EADTE,EAAAG,KAMGvH,QAAQ4F,IAAR,2BAAA4B,OAAuChK,EAAKwB,IAAMxB,EAAM0J,IACpDJ,EAPP,CAAAM,EAAA/J,KAAA,gBAAA+J,EAAA/J,KAAA,EAQ+B,IAAI4I,QAAQ,SAACC,EAASC,GAC1CW,EAAOI,EAASO,KAAMvB,KATjC,OAQWiB,EARXC,EAAAG,KAWOR,EAAKvC,QAAQhH,EAAKwB,GAAImI,GAX7BC,EAAA/J,KAAA,iBAaO0J,EAAKvC,QAAQhH,EAAKwB,GAAIkI,EAASO,MAbtC,yBAAAL,EAAAvJ,SAAAoJ,MAAD,gBAAAS,GAAA,OAAAV,EAAAjJ,MAAAzB,KAAA0B,YAAA,GAeGR,GAAMmK,KAAKhC,EAAUkB,GAK5B,IAAI5H,EAAUzB,EAAKyB,QAMnB,GALKA,IAEDA,GADAzB,EAAOlB,KAAKiD,IAAI/B,EAAKwB,KAAOxB,GACbyB,SAGdA,GAAYF,GAKjB,GAAIA,EAAJ,CACI,IAAI0F,EAAO,IAAImD,KAAK,CAAC7I,IACjB8I,EAAKvL,KACLwK,GACA9G,QAAQ4F,IAAI,6BACZkB,EAAOrC,EAAM,SAAS0C,GAClB3J,EAAKiH,KAAO0C,EACZU,EAAGrD,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MACzBkB,QAGJnI,EAAKiH,KAAOA,EACZnI,KAAKkI,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MAC3BkB,UAKR,IAAInI,EAAKiH,KAAT,CASA,IAAM2B,EAAUnK,EAAMsD,IAAIN,GAC1BmH,EAAQI,UAAY,SAAAsB,GAChB,IAAMrD,EAAOqD,EAAMC,OAAOtB,OAE1B,GAAIhC,EAAM,CACN,IAAIoD,EAAKd,EACLD,GACA9G,QAAQ4F,IAAI,6BACZkB,EAAOrC,EAAM,SAAS0C,GAClB3J,EAAKiH,KAAO0C,EACZU,EAAGrD,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MACzBkB,QAGJnI,EAAKiH,KAAOA,EACZsC,EAAKvC,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MAC3BkB,UAGJkB,KAGRT,EAAQM,QAAU,WACdG,WAtDAA,0CA0DMxC,EAAQ2D,EAAU7F,GAC5B,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,IAAW,GACxC/E,EAAM2I,KAAK,SAAAC,GAAC,OAAIA,IAAM/F,MAE1B7C,EAAMwG,KAAK3D,GACX7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,GAE3BnB,IAAgBkJ,KAAK,CACjBjC,QAAS,eACTkC,QAASjD,EACT2D,SAAUA,iDAIE3D,EAAQlC,GACxB,GAAK7F,KAAK6C,UAAUC,IAAIiF,GAAxB,CAEA,GAAKlC,EAEE,CACH,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,GAAQ8D,OAAO,SAAAD,GAAC,OAAIA,IAAM/F,IAC3D7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,QAH3BhD,KAAK6C,UAAUK,OAAO6E,GAM1BlG,IAAgBkJ,KAAK,CACjBjC,QAAS,qBACTkC,QAASjD,EACT+D,iBAAiB,wCAId/D,EAAQlC,GACX7F,KAAK6D,QAAQf,IAAIiF,GACL/H,KAAK6D,QAAQZ,IAAI8E,GACvByB,KAAK3D,GAEX7F,KAAK6D,QAAQ5C,IAAI8G,EAAQ,CAAClC,IAG9BnC,QAAQ4F,IAAI,6BAA+BvB,4CAG9BA,EAAQlC,GACjB7F,KAAK6D,QAAQf,IAAIiF,KACjB/H,KAAK6D,QAAQX,OAAO6E,GACpBrE,QAAQ4F,IAAI,4BAA8BzD,EAAInD,IAC9Cb,IAAgBkJ,KAAK,CACjBjC,QAAS,iBACT1C,QAASP,EAAIO,QACb2F,YAAa,CAAClG,EAAInD,IAClBsJ,QAAQ,iDAqLAC,EAAQlE,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B6K,OAAQA,EACRlE,OAAQA,gDAIIf,EAAQe,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B4F,OAAQA,EACRe,OAAQA,WA35BImE,iBAi6BxBnC,OAAO7I,KAAOvB,EACCA,g7BC94Bf,SAASwM,EAAcC,GACnB,OAAKA,EAEDA,EAAO,KACP,GAAAlB,OAAUkB,EAAV,MAGAA,EAAO,QACP,GAAAlB,QAAWkB,EAAO,MAAMC,QAAQ,GAAhC,OAGAD,EAAO,WACP,GAAAlB,QAAWkB,EAAO,KAAO,MAAMC,QAAQ,GAAvC,OAGJ,GAAAnB,QAAWkB,EAAO,KAAO,KAAO,MAAMC,QAAQ,GAA9C,OAdW,MAiBf,SAASC,EAAYpL,GACjB,IAAKA,EAAM,OAAO,KAElB,IAAIkL,EAAOlL,EAAKkL,KAChB,OAAKA,EAEED,EAAcC,GAFH,KAyCtB,SAASG,EAASpE,EAAMqE,GACpB,GAA2C,qBAAhCzC,OAAO0C,UAAUC,WAKxB3C,OAAO0C,UAAUC,WAAWvE,EAAMqE,OAC/B,CACH,IAAIG,EAAU5C,OAAOrB,IAAIC,gBAAgBR,GACrCyE,EAAW9H,SAAS+H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpCnI,SAASqI,KAAKC,YAAYR,GAC1BA,EAASS,QACTvI,SAASqI,KAAKG,YAAYV,GAC1B7C,OAAOrB,IAAI6E,gBAAgBZ,aAIpBa,mFAAf,SAAA9M,EAA2Bf,EAAOqH,EAAQyG,GAA1C,IAAAtD,EAAArE,EAAA,OAAAvF,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSiG,EADT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESoM,EAFT,CAAA5M,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGSoM,EAAWzH,OAHpB,CAAAnF,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKyBc,IAAgBkJ,KAAK,CACtCjC,QAAS,cACT1C,QAASY,EACT+E,YAAa0B,IARrB,OAwBI,KAnBMtD,EALVtJ,EAAAoK,MAWWyC,SAAWvD,EAAOuD,SAASC,IAAI,SAACrJ,EAASwB,GAC5C,OACIxB,GAAW,CACPwE,QAAS,iBACT1C,QAASY,EACTtE,GAAI+K,EAAW3H,GACfvB,QAAS,QAKrBqJ,IAAaC,SAAS1D,EAAOuD,UAEpB5H,EAAI2H,EAAWzH,OAAS,EAAGF,GAAK,EAAGA,IACxC8H,IAAaxM,KAAK,mBAAoBwM,IAAa3K,IAAI+D,EAAQyG,EAAW3H,KAK9EgI,EAFQlO,IAAUuD,WAEOgH,EAAOuD,UA9BpC,yBAAA7M,EAAAU,SAAAb,6BAiCA,SAASoN,EAAkBnO,EAAO+N,GAC9B,IAAK,IAAI5H,EAAI4H,EAAS1H,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUoJ,EAAS5H,GACzB,GAAKxB,EAAL,CAF2C,IAMnCC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAGDwJ,EAA8BpO,EAFR4E,EAAdC,UAEwCF,GAChD,MAEJ,IAAK,eAGD0J,EAA0BrO,EAFR4E,EAAVG,MAEgCJ,GACxC,MAEJ,IAAK,yBAGD2J,EAAiBtO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,kBAGD4J,EAA6BvO,EAFR4E,EAAbO,SAEsCR,GAC9C,MAEJ,IAAK,cAGD6J,EAAyBxO,EAFR4E,EAATS,KAE8BV,GACtC,MAEJ,IAAK,eAGD2J,EAAiBtO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGD8J,EAA4BzO,EAFR4E,EAAZa,QAEoCd,GAC5C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAE3D,GAAIX,EAAO,CACPqJ,EAAiBtO,EAAOiF,EAAON,GAC/B,MAGJ,GAAIE,EAAW,CACXuJ,EAA8BpO,EAAO6E,EAAWF,GAChD,MAGJ,GAAII,EAAO,CACPsJ,EAA0BrO,EAAO+E,EAAOJ,GACxC,MAGJ,GAAIQ,EAAU,CACVoJ,EAA6BvO,EAAOmF,EAAUR,GAC9C,MAGJ,GAAIc,EAAS,CACTgJ,EAA4BzO,EAAOyF,EAASd,GAC5C,MAGJ,GAAIgB,EAAO,CACP+I,EAA0B1O,EAAO2F,EAAOhB,GACxC,MAGJ,GAAIiB,EAAY,CACZ+I,EAA8B3O,EAAO4F,EAAYjB,GACjD,MAGJ,MAEJ,IAAK,eAGD+J,EAA0B1O,EAFR4E,EAAVe,MAEgChB,GACxC,MAEJ,IAAK,mBAGDgK,EAA8B3O,EAFP4E,EAAfgB,WAEyCjB,MAQrE,SAASiK,EAAiB5O,EAAO+E,EAAOJ,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACjE,GAAKgD,GACAJ,EAAL,CAFiE,IAIpDpD,EAASwD,EAAhBA,MACN,GAAKxD,EAAL,CALiE,IAAAwN,EAOjExN,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyDgM,EAQzDhM,GAAI0J,EARqDsC,EAQrDtC,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4G,gBAAgBlC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS8L,GAAgBpC,GAAQA,EAAOuC,MAChC/O,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS0J,EAA0BrO,EAAO+E,EAAOJ,GAC7C,IAAKI,EAAO,OAAO,EACnB,IAAKJ,EAAS,OAAO,EAFiC,IAIvB2B,EAAcvB,EAArC2B,sBACR,IAAKJ,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0G,yBAAyBhC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASsK,EAAqBjP,EAAO6E,EAAWF,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACzE,GAAK8C,GACAF,EAAL,CAFyE,IAIxDpD,EAASsD,EAApBA,UACN,GAAKtD,EAAL,CALyE,IAAA2N,EAOzE3N,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEmM,EAQjEnM,GAAI0J,EAR6DyC,EAQ7DzC,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUiI,oBAAoBvD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS8L,GAAgBpC,GAAQA,EAAO0C,MAChClP,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASyJ,EAA8BpO,EAAO6E,EAAWF,GACrD,IAAKE,EAAW,OAAO,EACvB,IAAKF,EAAS,OAAO,EAFyC,IAI3C2B,EAAczB,EAAzBiC,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUgI,6BAA6BtD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASyK,EAAmBpP,EAAOqP,EAAS1K,GACxC,GAAK0K,GACA1K,EAAL,CAFiD,IAIzC2K,EAAYD,EAAZC,QACF7K,EAAO8K,IAAUjM,IAAIgM,GACtB7K,GAEL+K,GAAgBxP,EAAOyE,IAG3B,SAASgL,EAAoBzP,EAAOmF,EAAUR,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACvE,GAAKoD,GACAR,EAAL,CAFuE,IAIvDpD,EAAS4D,EAAnBA,SACN,GAAK5D,EAAL,CALuE,IAAAmO,EAOvEnO,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAR+D2M,EAQ/D3M,GAAI0J,EAR2DiD,EAQ3DjD,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+G,mBAAmBrC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,aACS8L,GAAgBpC,GAAQA,EAAOkD,MAChC1P,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS4J,EAA6BvO,EAAOmF,EAAUR,GACnD,IAAKQ,EAAU,OAAO,EACtB,IAAKR,EAAS,OAAO,EAFuC,IAIzC2B,EAAcnB,EAAzB2B,UACR,IAAKR,EAAW,OAAO,EALqC,IAO/C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR0C,IAWpDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8G,4BAA4BpC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACzE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASiL,EAAgB5P,EAAOqF,EAAMV,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GAC1DsD,IACAV,GAILsK,EAAqBjP,EAFCqF,EAAdR,UAE+BF,EAASkK,IAGpD,SAASL,EAAyBxO,EAAOqF,EAAMV,GAC3C,IAAKU,EAAM,OAAO,EAClB,IAAKV,EAAS,OAAO,EAF+B,IAI5CM,EAAqBI,EAArBJ,MACR,QAAImJ,EAA8BpO,EADLqF,EAAdR,UACqCF,KAIpD2J,EAAiBtO,EAAOiF,EAAON,IACxB,YAGIkL,mFAAf,SAAAtN,EAAmCvC,EAAOuF,EAAUZ,GAApD,IAAAsC,EAAA1F,EAAAwB,EAAA,OAAAnC,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACSmE,EADT,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAESiD,EAFT,CAAAnC,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAIUuF,EAAaC,YAAc3B,GAJrC,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAOQH,EAAOtB,IAAUkH,gBAAgBF,GAPzC,CAAAzE,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GASqBc,IAAgBkJ,KAAK,CAC9BjC,QAAS,sBACT5D,SAAUA,EACVuK,KAAMC,IACNC,MAAOC,IACPC,OAAQC,IACRC,MAAOC,IACP5J,QAAS9B,EAAQ8B,UAhB7B,QASQlF,EATRiB,EAAA8I,KAkBQrL,IAAU0I,gBAAgB1B,EAAY1F,GAEtCvB,EAAQC,IAAUuD,WApB1B,WAuBIjC,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAAOxB,EAAPwB,IAEK9C,IAAUoI,QAAQ9G,EAAKwB,IA1BxC,CAAAP,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA6BIzB,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUmH,mBAAmBzC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,KAlCzD,yBAAAnC,EAAAZ,SAAAW,6BAsCA,SAAS+N,EAAoBtQ,EAAOiF,EAAON,GACvC,GAAKM,GACAN,EAAL,CAFgD,IAIxCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYiK,YAAQnK,EAAOoK,KACjC,GAAKlK,EAAL,CARgD,IAUnC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAXgD,IAcxCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAAS2J,EAAiBtO,EAAOiF,EAAON,GACpC,GAAKM,GACAN,EAAL,CAF6C,IAIrCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYmK,YAAarK,GAC/B,GAAKE,EAAL,CAR6C,IAUhC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAX6C,IAcrCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAAS+L,EAA0B1Q,EAAOiF,EAAON,GAC7C,IAAKM,EAAO,OAAO,EACnB,IAAKN,EAAS,OAAO,EAErB,IAAM2B,EAAYqK,YAAsB1L,EAAMmB,OAC9C,IAAKE,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASiM,EAAmB5Q,EAAOyF,EAASd,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACrE,GAAK0D,EAAL,CADqE,IAGtDlE,EAASkE,EAAlBA,QACN,GAAKlE,EAAL,CAJqE,IAAAsP,EAMrEtP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAP6D8N,EAO7D9N,GAAI0J,EAPyDoE,EAOzDpE,KAGZ,IADaxM,IAAUoI,QAAQtF,GAC/B,CAEA,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAEzC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,WACItB,IAAUuH,kBAAkBH,EAAQC,EAAWvE,IAEnD,aACS8L,GAAgBpC,GAAQA,EAAOqE,MAChC7Q,IAAUsE,cAAcxB,EAAIyB,IAAeG,GAAWc,QAMtE,SAASgJ,EAA4BzO,EAAOyF,EAASd,GACjD,IAAKc,EAAS,OAAO,EADqC,IAGvCa,EAAcb,EAAzBqB,UACR,IAAKR,EAAW,OAAO,EAJmC,IAM7C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAPwC,IAUlDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,GADa9C,IAAUoI,QAAQtF,GACrB,OAAO,EAEjB,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAczC,OAZA9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,WACItB,IAAUsH,2BAA2BF,EAAQC,EAAWvE,IAE5D,WACI9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,GAAWc,MAI5D,EAGX,SAASsL,EAAiB/Q,EAAO2F,EAAOhB,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACjE,GAAK4D,GACAhB,EAAL,CAFiE,IAIpDpD,EAASoE,EAAhBA,MACN,GAAKpE,EAAL,CALiE,IAAAyP,EAOjEzP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyDiO,EAQzDjO,GAAI0J,EARqDuE,EAQrDvE,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+H,gBAAgBrD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS8L,GAAgBpC,GAAQA,EAAOwE,MAChChR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS+J,EAA0B1O,EAAO2F,EAAOhB,GAC7C,IAAKgB,EAAO,OAAO,EACnB,IAAKhB,EAAS,OAAO,EAFiC,IAInC2B,EAAcX,EAAzBmB,UACR,IAAKR,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8H,yBAAyBpD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASuM,EAAqBlR,EAAO4H,EAAWjD,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACzE,GAAK6F,GACAjD,EAAL,CAFyE,IAI5DpD,EAASqG,EAAhBjC,MACN,GAAKpE,EAAL,CALyE,IAAA4P,EAOzE5P,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEoO,EAQjEpO,GAAI0J,EAR6D0E,EAQ7D1E,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU6H,oBAAoBnD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS8L,GAAgBpC,GAAQA,EAAO2E,MAChCnR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASgK,EAA8B3O,EAAO4H,EAAWjD,GACrD,IAAKiD,EAAW,OAAO,EACvB,IAAKjD,EAAS,OAAO,EAFyC,IAI3C2B,EAAcsB,EAAzBd,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4H,6BAA6BlD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAAS0M,EAAqBrR,EAAOyH,EAAW9C,GAA6B,IAApBkK,IAAoB9M,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACzE,GAAK0F,GACA9C,EAAL,CAFyE,IAI5DpD,EAASkG,EAAhBC,MACN,GAAKnG,EAAL,CALyE,IAAA+P,EAOzE/P,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEuO,EAQjEvO,GAAI0J,EAR6D6E,EAQ7D7E,KAECxM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0H,oBAAoBhD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS8L,GAAgBpC,GAAQA,EAAO8E,MAChCtR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS6M,EAAoBxR,EAAO+N,GAKhC,IAJA,IAAM0D,EAAQ,IAAIlI,IACdlC,EAAS,EACPqK,EAAU,IAAInI,IAEXpD,EAAI4H,EAAS1H,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUoJ,EAAS5H,GACzB,GAAKxB,EAAL,CAF2C,IAMnC8B,EAA0D9B,EAA1D8B,QAAS7B,EAAiDD,EAAjDC,QAAS+M,EAAwChN,EAAxCgN,eAAgBC,EAAwBjN,EAAxBiN,oBAW1C,GATID,GACAF,EAAMnQ,IAAIqQ,EAAgBA,GAG1BC,IACAvK,EAASZ,EACTiL,EAAQpQ,IAAIsQ,EAAqBA,IAGjChN,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERoK,EAAqBjP,EAAO6E,EAAWF,GACvCyJ,EAA8BpO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER6J,EAAiB5O,EAAO+E,EAAOJ,GAC/B0J,EAA0BrO,EAAO+E,EAAOJ,GACxC,MAEJ,IAAK,yBAGD2J,EAAiBtO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGDyK,EAAmBpP,EAFC4E,EAAZyK,QAE2B1K,GACnC,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERsK,EAAoBzP,EAAOmF,EAAUR,GACrC4J,EAA6BvO,EAAOmF,EAAUR,GAC9C,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERuK,EAAgB5P,EAAOqF,EAAMV,GAC7B6J,EAAyBxO,EAAOqF,EAAMV,GACtC,MAEJ,IAAK,kBAGDkL,EAAoB7P,EAFC4E,EAAbW,SAE6BZ,GACrC,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EACD,MAHY,IAMRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WACnEgM,GAAY,EAEZhN,IACAoK,EAAqBjP,EAAO6E,EAAWF,GACvCkN,GAAazD,EAA8BpO,EAAO6E,EAAWF,IAG7DI,IACA6J,EAAiB5O,EAAO+E,EAAOJ,GAC/BkN,GAAaxD,EAA0BrO,EAAO+E,EAAOJ,IAGrDQ,IACAsK,EAAoBzP,EAAOmF,EAAUR,GACrCkN,GAAatD,EAA6BvO,EAAOmF,EAAUR,IAG3Dc,IACAmL,EAAmB5Q,EAAOyF,EAASd,GACnCkN,GAAapD,EAA4BzO,EAAOyF,EAASd,IAGzDgB,IAEAkM,GAAanD,EAA0B1O,EAAO2F,EAAOhB,IAGrDiB,IACAsL,EAAqBlR,EAAO4F,EAAYjB,GACxCkN,GAAalD,EAA8B3O,EAAO4F,EAAYjB,IAG9DkB,GACAwL,EAAqBrR,EAAO6F,EAAYlB,GAGxCkN,IACAvB,EAAoBtQ,EAAOiF,EAAON,GAClC2J,EAAiBtO,EAAOiF,EAAON,GAC/B+L,EAA0B1Q,EAAOiF,EAAON,IAE5C,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERqL,EAAoBtQ,EAAOiF,EAAON,GAClC2J,EAAiBtO,EAAOiF,EAAON,GAC/B+L,EAA0B1Q,EAAOiF,EAAON,GACxC,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERmL,EAAmB5Q,EAAOyF,EAASd,GACnC8J,EAA4BzO,EAAOyF,EAASd,GAC5C,MAEJ,IAAK,eAIDkL,EAAoB7P,EAHF4E,EAAVqB,MACAV,SAE6BZ,GACrC,MAEJ,IAAK,eAID+J,EAA0B1O,EAHR4E,EAAVe,MAGgChB,GACxC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAERsL,EAAqBlR,EAAO4F,EAAYjB,GACxCgK,EAA8B3O,EAAO4F,EAAYjB,GACjD,MAEJ,IAAK,mBAGD0M,EAAqBrR,EAFE4E,EAAfiB,WAEgClB,KAUxDmN,GAAiB9R,EAADG,OAAA4R,EAAA,EAAA5R,CAAYsR,EAAMO,SAClCnE,EAAY7N,EAAOqH,EAARlH,OAAA4R,EAAA,EAAA5R,CAAoBuR,EAAQM,SAG3C,SAASC,EAAe1Q,EAAM2Q,EAAUhM,EAAKwD,GACzC,GAAKnI,GACA2Q,EAEL,GAAI3Q,EAAKuB,KAz3Bb,SAAkB0I,EAAMqB,EAAUsF,GAC9B,IAAI3J,EAAO,IAAImD,KAAK,CAACH,GAAO,CAAE4G,KAAMD,GAAQ,6BAC5C,GAA2C,qBAAhC/H,OAAO0C,UAAUC,WAKxB3C,OAAO0C,UAAUC,WAAWvE,EAAMqE,OAC/B,CACH,IAAIG,EAAU5C,OAAOrB,IAAIC,gBAAgBR,GACrCyE,EAAW9H,SAAS+H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpCnI,SAASqI,KAAKC,YAAYR,GAC1BA,EAASS,QACTvI,SAASqI,KAAKG,YAAYV,GAC1B7C,OAAOrB,IAAI6E,gBAAgBZ,IAg2B3BqF,CAAS9Q,EAAKuB,IAAKoP,OADvB,CAKA,IAAI1J,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CA,EACAoE,EAASpE,EAAM0J,GAInB3E,EAAShM,EAAM2E,EAAK,WACZwD,GAAUA,KAEdlB,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,OAEtCoE,EAASpE,EAAM0J,MAK3B,SAAS3E,EAAShM,EAAM2E,EAAKwD,GACzB,GAAKnI,EAAL,CADmC,IAE3BwB,EAAcxB,EAAdwB,GAAIE,EAAU1B,EAAV0B,MAGZ,IADahD,IAAUoI,QAAQtF,GAK/B,GAAIE,EAAMG,yBAAV,CACI,IAAMpD,EAAQC,IAAUuD,WAExBvD,IAAUoE,aAAarE,EAAOuB,EAAM,KAAMmI,EAAU,WAC5CzG,EAAMqP,mBACNrS,IAAUsE,cAAchD,EAAKwB,GAAIyB,IAAe0B,UAMxDjD,EAAMqP,mBACNrS,IAAUsE,cAAcxB,EAAIyB,IAAe0B,IAInD,SAASqM,EAAoBlL,EAAQC,GACjC,IAAM3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAFgB,IAIpCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAUkJ,MAAOnL,EAAUiC,UAAUoJ,OAAQrL,EAAUiC,UAAU7B,OAEvF,MAEJ,IAAK,yBACD,OAAOuN,EAAanL,EAAQC,EAAWmL,KAE3C,IAAK,kBAAmB,IACZtN,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eACD,OAAOqN,EAAanL,EAAQC,EAAWmL,KAE3C,IAAK,cAAe,IACR/M,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUQ,EAAiBD,EAAjBC,MAAOV,EAAUS,EAAVT,MAEpC,GAAIJ,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAUkJ,MAAOnL,EAAUiC,UAAUoJ,OAAQrL,EAAUiC,UAAU7B,OAGvF,GAAIE,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIQ,GAASA,EAAMmB,UACf,MAAO,CAACnB,EAAMmB,UAAUkJ,MAAOrK,EAAMmB,UAAUoJ,OAAQvK,EAAMmB,UAAU7B,OAG3E,GAAIA,EACA,OAAOuN,EAAanL,EAAQC,EAAWmL,KAG/C,MAEJ,IAAK,eAAgB,IACT9M,EAAUf,EAAVe,MACR,GAAIA,EAAMmB,UACN,MAAO,CAACnB,EAAMmB,UAAUkJ,MAAOrK,EAAMmB,UAAUoJ,OAAQvK,EAAMmB,UAAU7B,OAE3E,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAASuN,EAAanL,EAAQC,EAAWmF,GACrC,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,MACzB,IAAM9H,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAHe,IAKnCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,EACA,MAAO,CAACA,EAAUmL,MAAOnL,EAAUqL,OAAQrL,EAAUA,WAEzD,MAEJ,IAAK,yBAA0B,IACnBI,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAYiK,YAAQtL,EAAMmB,MAAOqG,GACvC,GAAInG,EACA,MAAO,CAACA,EAAU0J,MAAO1J,EAAU4J,OAAQ5J,EAAUrB,OAG7D,MAEJ,IAAK,kBAAmB,IACZE,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eAAgB,IACTF,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAYiK,YAAQtL,EAAMmB,MAAOqG,GACvC,GAAInG,EACA,MAAO,CAACA,EAAU0J,MAAO1J,EAAU4J,OAAQ5J,EAAUrB,OAG7D,MAEJ,IAAK,cAAe,IACRS,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MACpC,GAAId,EACA,MAAO,CAACA,EAAUmL,MAAOnL,EAAUqL,OAAQrL,EAAUA,WAGzD,GAAIM,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIF,EAAO,CACP,IAAMqB,EAAYiK,YAAQtL,EAAMmB,MAAOqG,GACvC,GAAInG,EACA,MAAO,CAACA,EAAU0J,MAAO1J,EAAU4J,OAAQ5J,EAAUrB,OAEzD,MAGJ,GAAIU,EACA,MAAO,CAACA,EAAMqK,MAAOrK,EAAMuK,OAAQvK,EAAMA,OAGjD,MAEJ,IAAK,eAAgB,IACTA,EAAUf,EAAVe,MACR,GAAIA,EACA,MAAO,CAACA,EAAMqK,MAAOrK,EAAMuK,OAAQvK,EAAMA,OAQrD,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS+M,EAA6B3E,GAClC,GAAKA,GACAA,EAAS1H,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAI4H,EAAS1H,OAAQF,IAAK,CACtC,IAAIxB,EAAUoJ,EAAS5H,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTK,EAAUL,EAAVK,MACR,IAAKA,EAAO,MAgBZ,IAAMqB,EAAYiK,YAAQtL,EAAMmB,MAAOoK,KACvC,IAAKlK,EAAW,MAnBC,IAqBF/E,EAAS+E,EAAhBrB,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,OAEV9C,IAAU0S,oBAAoBpR,EAAKwB,IACnC,MAEJ,IAAK,eAAgB,IACT4C,EAAUf,EAAVe,MACR,IAAKA,EAAO,MAEZ,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAU0S,oBAAoBpR,EAAKwB,IATtB,IAYFxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAU0S,oBAAoBpR,EAAKwB,IACnC,MAEJ,IAAK,cAAe,IACR2C,EAAaf,EAAQC,QAArBc,SACR,GAAIA,EAAU,KACFC,EAAUD,EAAVC,MAER,GAAIA,EAAO,CACP,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAU0S,oBAAoBpR,EAAKwB,IANhC,IASQxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAU0S,oBAAoBpR,EAAKwB,QAW/D,SAAS6P,EAAuB7E,GAAgC,IAAtB8E,EAAsB9Q,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAC5D,GAAKgM,GACAA,EAAS1H,OAId,IAFA,IAAMrG,EAAQC,IAAUuD,WAEf2C,EAAI,EAAGA,EAAI4H,EAAS1H,OAAQF,IAAK,CACtC,IAAIxB,EAAUoJ,EAAS5H,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERoK,EAAqBjP,EAAO6E,EAAWF,EAASkO,GAChDzE,EAA8BpO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,yBAGD2L,EAAoBtQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,kBAGD8K,EAAoBzP,EAFC4E,EAAbO,SAE6BR,EAASkO,GAC9C,MAEJ,IAAK,eAGDvC,EAAoBtQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,cAAe,IACRe,EAAaf,EAAQC,QAArBc,SACR,IAAKA,EACD,MAHY,IAMRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAChCkM,GAAY,EAEZhN,IACAoK,EAAqBjP,EAAO6E,EAAWF,EAASkO,GAChDhB,GAAazD,EAA8BpO,EAAO6E,EAAWF,IAG7DQ,IACAsK,EAAoBzP,EAAOmF,EAAUR,EAASkO,GAC9ChB,GAAY,GAGZlM,IACAoL,EAAiB/Q,EAAO2F,EAAOhB,EAASkO,GACxChB,GAAanD,EAA0B1O,EAAO2F,EAAOhB,IAGrDkN,GACAvB,EAAoBtQ,EAAOiF,EAAON,GAGtC,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER+I,EAA0B1O,EAAO2F,EAAOhB,GACxCoM,EAAiB/Q,EAAO2F,EAAOhB,EAASkO,KAQ5D,SAASC,EAAgCC,EAAOC,GAC5C,GAAKA,EAAQ3M,OAAb,CAEA,IAAM0H,EAAW,GACbgF,EAAQ,GACRhF,EAASlE,KAAKmJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQ3M,OAAS,GACzB0H,EAASlE,KAAKmJ,EAAQD,EAAQ,IAGlCL,EAA6B,CAACM,EAAQD,KACtCL,EAA6B3E,IAGjC,SAASkF,EAA0BF,EAAOC,GACtC,GAAKA,EAAQ3M,OAAb,CAEA,IAAM0H,EAAW,GACbgF,EAAQ,GACRhF,EAASlE,KAAKmJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQ3M,OAAS,GACzB0H,EAASlE,KAAKmJ,EAAQD,EAAQ,IAGlCH,EAAuB,CAACI,EAAQD,KAAS,GACzCH,EAAuB7E,GAAU,IAGrC,SAASmF,EAAoBlT,EAAOuB,EAAM+K,GACtC,GAAK/K,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAMkD,EAAO8K,IAAUjM,IAAIgJ,GAC3B,GAAK7H,EAEQlD,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUyE,oBAAoB4H,EAAQvJ,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBnC,MAI9D,SAAS0O,GAAoBnT,EAAOuB,EAAM8F,GACtC,GAAK9F,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAM6C,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,EAEQ7C,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUqE,oBAAoB+C,EAAQtE,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBxC,MAI9D,SAASiP,GAA8BhM,EAAQiM,GAC3C,GAAKA,EAAL,CAEA,IAAMtT,EAAQC,IAAUuD,WAExB8P,EAAO7P,QAAQ,SAAAwB,GACX,OAAQA,EAAM,UACV,IAAK,YAAa,IAAAsO,EACStO,EAAfuO,EADMD,EACNC,MAAOC,EADDF,EACCE,IAEfN,GAAoBnT,EAAOwT,EAAOnM,GAClC8L,GAAoBnT,EAAOyT,EAAKpM,GAChC,MAEJ,IAAK,eACD,IAAMiF,EAASoH,YAAcrM,GADZsM,EAGM1O,EAAfuO,EAHSG,EAGTH,MAAOC,EAHEE,EAGFF,IAEfP,EAAoBlT,EAAOwT,EAAOlH,GAClC4G,EAAoBlT,EAAOyT,EAAKnH,GAChC,MAEJ,IAAK,mBAED,KADArH,EAAQ2O,YAAgB3O,IACZ,MAEZ,IAAMqH,EAASoH,YAAcrM,GAJRwM,EAME5O,EAAfuO,EANaK,EAMbL,MAAOC,EANMI,EAMNJ,IAEfP,EAAoBlT,EAAOwT,EAAOlH,GAClC4G,EAAoBlT,EAAOyT,EAAKnH,OAOhD,SAASwH,GAAiCzM,EAAQ0L,EAAOC,GACrD,GAAKA,EAAQ3M,OAAb,CAEA,IAAMhD,EAAQ,GACV0P,EAAQ,GACR1P,EAAMwG,KAAKmJ,EAAQD,EAAQ,IAE3BA,EAAQC,EAAQ3M,OAAS,GACzBhD,EAAMwG,KAAKmJ,EAAQD,EAAQ,IAE3BA,GAAS,GAAKA,EAAQC,EAAQ3M,QAC9BhD,EAAMwG,KAAKmJ,EAAQD,IAGvBM,GAA8BhM,EAAQhE,IAG1C,SAASmM,GAAgBxP,EAAOsM,GAC5B,IAAM7H,EAAO8K,IAAUjM,IAAIgJ,GAC3B,GAAK7H,EAAL,CAFoC,IAI5BsP,EAAkBtP,EAAlBsP,cACR,GAAKA,EAILb,EAAoBlT,EAFI+T,EAAhBP,MAEyBlH,IAGrC,SAASwF,GAAiB9R,EAAOgU,GACxBA,GAELA,EAAIvQ,QAAQ,SAAAV,GAAE,OAAIyM,GAAgBxP,EAAO+C,KAG7C,SAASkR,GAAgBjU,EAAOqH,GAC5B,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFoC,IAI5Ba,EAAUb,EAAVa,MACR,GAAKA,EAILkO,GAAoBnT,EAFIiF,EAAhBuO,MAEyBnM,IAGrC,SAAS6M,GAAiBlU,EAAOgU,GACxBA,GAELA,EAAIvQ,QAAQ,SAAAV,GAAE,OAAIkR,GAAgBjU,EAAO+C,KAG7C,SAASoR,GAAiBnU,EAAOqH,GAC7B,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFqC,IAI7BgQ,EAAkBhQ,EAAlBgQ,cACR,GAAKA,EAAL,CALqC,IAO7BxC,EAAwBwC,EAAxBxC,oBACHA,GAEL/D,EAAY7N,EAAOqH,EAAQ,CAACuK,MAGhC,SAASyC,GAAsBrU,EAAOsU,GAC7BA,GAGLC,GAAoBvU,EADCsU,EAAbE,UAIZ,SAASD,GAAoBvU,EAAOwU,GAC3BA,GAELA,EAAS/Q,QAAQ,SAAAgC,GACbgJ,EAA4BzO,EAAOyF,EAAS,QAIpD,SAASgP,GAAcC,GACnB,OAAOA,GAAuC,cAA3BA,EAASC,cAGhC,SAASC,GAAOrT,GACZ,IAAMiH,EAKV,SAAiBjH,GACb,OAAOA,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KAN3CH,CAAQ9G,GAErB,OAAOtB,IAAU2I,WAAWJ,IAAS,GAOzC,SAASqM,GAAkBtT,GACvB,OAAKA,GACAA,EAAK0B,OACL1B,EAAK0B,MAAM6R,sBAETtI,EAAcjL,EAAK0B,MAAM8R,iBAJd,IAOtB,SAASC,GAAgBzT,GACrB,OAAKA,GACAA,EAAK0C,QACL1C,EAAK0C,OAAOgR,oBAEVzI,EAAcjL,EAAK0C,OAAOiR,eAJf,IAOtB,SAASC,GAAajD,GAClB,IAAKA,EACD,MAAO,GAGX,IAAMkD,EAAQlD,EAASmD,MAAM,KAC7B,OAAqB,IAAjBD,EAAM/O,QAA8B,KAAb+O,EAAM,IAA8B,IAAjBA,EAAM/O,OACzC,GAEJ+O,EAAME,MAAMX,4KCj4CvB,SAASY,EAAoBlO,GACzB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,IAAIoD,EAAgBpC,IAAUqC,iBAAiBrR,EAAKrB,IACpD,IAAKyS,EAAe,OAAO,KAE3B,OAAQpR,EAAKgO,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,IAAMsD,EA9ClB,SAAoCC,GAChC,IAAKA,EAAoB,OAAO,KAEhC,GAAIA,EAAmBC,QAAQnJ,MAAQ,EAEnC,OADakJ,EAAmBC,QAAQC,SAASzU,OAAO0U,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAO,oBACX,IAAK,+BACD,MAAO,4BACX,IAAK,+BACD,MAAO,4BACX,IAAK,6BACD,MAAO,iBACX,IAAK,8BACD,MAAO,iBACX,IAAK,2BACD,MAAO,kBACX,IAAK,2BACD,MAAO,kBACX,IAAK,+BACD,MAAO,0BACX,IAAK,+BACD,MAAO,0BACX,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAO,SAInB,OAAO,KAcsBC,CAA2BR,GAChD,OAAOE,EAAeA,EAAe,MAAQ,KAEjD,IAAK,qBACL,IAAK,qBACD,IAAMA,EArIlB,SAAkCC,GAC9B,IAAKA,EAAoB,OAAO,KAEhC,IA4BQM,EA5BJxJ,EAAOkJ,EAAmBC,QAAQnJ,KACtC,GAAIA,EAAO,EACP,SAAAlB,OAAUkB,EAAV,sBACG,GAAIA,EAAO,EAAG,CACjB,IAAIwJ,EACAC,EAFaC,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAGjB,QAAAwH,EAAAC,EAAmBZ,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAnV,QAAAsV,MAAAP,GAAA,EAAsD,KAA7C7J,EAA6CgK,EAAAR,MAClD,GAAKG,GAEE,IAAKC,EAAY,CACpBA,EAAa3G,IAAUjM,IAAIgJ,GAC3B,YAHA2J,EAAY1G,IAAUjM,IAAIgJ,IALjB,MAAAqK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAYjB,OAAKJ,GAAcC,GAInBD,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,YACpEZ,EAAaA,EAAWW,WAAaX,EAAWW,WAAaX,EAAWY,YAEnEb,GAAcC,EAInB,GAAA3K,OAAU0K,EAAV,SAAA1K,OAA2B2K,EAA3B,eAHI,GAAA3K,OAAUkB,EAAV,uBAPA,GAAAlB,OAAUkB,EAAV,sBAaJ,GAAIkJ,EAAmBC,QAAQnJ,MAAQ,EAAG,KAAAsK,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IACtC,QAAAoI,EAAAC,EAAmBxB,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAM,GAAAG,EAAAC,EAAA/V,QAAAsV,MAAAK,GAAA,EAAsD,KAA7CzK,EAA6C4K,EAAApB,MAClD,IAAKG,EAAW,CACZA,EAAY1G,IAAUjM,IAAIgJ,GAC1B,QAJ8B,MAAAqK,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAQtC,IAAKhB,EACD,2BAKJ,KAFAA,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,aAGhE,2BAIJ,OADanB,EAAmBC,QAAQC,SAASzU,OAAO0U,MAAMC,OAC/C,UACX,IAAK,2BACD,SAAAxK,OAAU0K,EAAV,yBACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,iCACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,iCACJ,IAAK,6BACD,SAAA1K,OAAU0K,EAAV,sBACJ,IAAK,8BACD,SAAA1K,OAAU0K,EAAV,sBACJ,IAAK,2BACD,SAAA1K,OAAU0K,EAAV,uBACJ,IAAK,2BACD,SAAA1K,OAAU0K,EAAV,uBACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,+BACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,+BACJ,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,SAAA1K,OAAU0K,EAAV,eAKhB,OAAO,KAsDsBmB,CAAyB5B,GAC9C,OAAOE,EAAeA,EAAe,MAAQ,KAIrD,OAAO,KAGX,SAAS2B,EAAyB1S,GAC9B,IAAKA,EAAS,OAAO,KACrB,GAAI2S,YAAiB3S,GAAU,OAAO,KACtC,IAAKA,EAAQgN,eAAgB,OAAO,KAEpC,IAAMlN,EAAO8K,IAAUjM,IAAIqB,EAAQgN,gBACnC,OAAKlN,EAEE8S,YAAgB9S,GAFL,KAKtB,SAAS+S,EAAqB7S,GAC1B,IAAKA,EAAS,OAAO,KACrB,GAAI2S,YAAiB3S,GAAU,OAAO,KAEtC,IAAMP,EAAOgP,IAAU9P,IAAIqB,EAAQ8B,SACnC,OAAIrC,GAA+B,uBAAvBA,EAAKgO,KAAK,UAA4D,uBAAvBhO,EAAKgO,KAAK,SAC1D,KAGJqF,YAAiB9S,EAAQgN,gBAGpC,SAAS+F,EAAyBtT,GAC9B,OAAKA,EAEEoT,EAAqBpT,EAAKuT,cAFf,KAKtB,SAASC,EAAsBxT,GAAsB,IAAhByT,EAAgB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAZ,SAAA+V,GAAG,OAAIA,GAC5C,IAAK1T,EAAM,OAAO,KAD+B,IAGzCuT,EAAiBvT,EAAjBuT,aACR,OAAKA,EAEEI,YAAWJ,EAAcE,GAFN,KAK9B,SAASG,EAAyB5T,GAC9B,QAAKA,MACAA,EAAKuT,eAEHvT,EAAKuT,aAAaM,aAAe7T,EAAKuT,aAAa5U,GAAKqB,EAAK8T,8BAGxE,SAASC,EAAmB/T,GACxB,OAAKA,GACAA,EAAKgU,aAEHhU,EAAKgU,aAHM,KAMtB,SAASC,EAA0BjU,GAC/B,OAAKA,GACAA,EAAKkU,qBAEHlU,EAAKkU,qBAHM,KAMtB,SAASC,EAAYnU,GACjB,OAGJ,SAAwBA,GACpB,IAAKA,EAAM,OAAO,EAElB,IAAIA,EAAKoU,qBA0BL,OAAKpU,EAAKqU,sBAEHrU,EAAKqU,sBAAsBC,SAFM,EAzBxC,OAAQtU,EAAKgO,MACT,IAAK,kBACL,IAAK,iBACD,IAAMuG,EAAuBC,IAAiBC,wBAC1C,yCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,EAEX,IAAK,qBACL,IAAK,qBACD,IAAMC,EAAuBC,IAAiBC,wBAC1C,uCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,GA5BZI,CAAe1U,GAAQ,EAsClC,SAAS2U,EAAepU,GACpB,IAAMqU,EAAO,IAAIC,KAAoB,IAAftU,EAAQqU,MAExBE,EAAW,IAAID,KAErB,GADAC,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAOE,EACP,OAAOE,IAAWJ,EAAM,QAG5B,IAAMK,EAAM,IAAIJ,KACVK,EAAMD,EAAIE,SACVC,EAAYH,EAAII,UAAYH,GAAe,IAARA,GAAa,EAAI,GAE1D,OAAIN,EADW,IAAIC,KAAKI,EAAIK,QAAQF,IAEzBJ,IAAWJ,EAAM,OAGrBI,IAAWJ,EAAM,aAG5B,SAASW,EAAmBvV,GACxB,OAAKA,GACAA,EAAKuT,cACLvT,EAAKuT,aAAaqB,KACnBY,GAAcxV,EAAKrB,IAAY,KAE5BgW,EAAe3U,EAAKuT,cALT,KAQtB,SAASkC,EAA6BxS,GAClC,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAFwB,IAIlCgO,EAAShO,EAATgO,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAM0H,EAAaC,IAAgBzW,IAAI8O,EAAK4H,gBAC5C,GAAIF,EACA,OCrShB,SAA6BA,EAAYzS,GACrC,IAAKyS,EAAY,OAAO,KADqB,IAGrCG,EAAgCH,EAAhCG,OAAsBC,EAAUJ,EAAxBK,aAEhB,GAAIF,IAA+B,2BAApBA,EAAO,UAA6D,yBAApBA,EAAO,UAClE,MAAO,wBAGX,IAAKC,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqBhT,GACnD,OAAI+S,EAAc,EACd,GAAA7O,OAAU2O,EAAV,cAAA3O,OAA4B6O,EAA5B,WAGJ,GAAA7O,OAAU2O,EAAV,YDoRmBI,CAAoBR,EAAYzS,GAG3C,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAM5C,EAAO8K,IAAUjM,IAAI8O,EAAK9C,SAChC,GAAI7K,EACA,OAAO8V,YAAc9V,GAGzB,MAEJ,IAAK,qBACD,IAAM+V,EAAaC,IAAgBnX,IAAI8O,EAAKsI,eAC5C,GAAIF,EACA,OErThB,SAA6BA,EAAYnT,GACrC,IAAKmT,EAAY,OAAO,KADqB,IAGvCP,EAA4CO,EAA5CP,OAAQU,EAAoCH,EAApCG,WAA0BT,EAAUM,EAAxBL,aAE1B,GAAIF,GAA8B,2BAApBA,EAAO,SACjB,OAAOU,EAAa,0BAA4B,wBAGpD,IAAKT,EAAO,CACR,IAAMU,EAAWH,IAAgBI,YAAYL,EAAWzX,IACpD6X,IACAV,EAAQU,EAAST,cAIzB,IAAKD,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqBhT,GACnD,OAAI+S,EAAc,EACd,GAAA7O,OAAU2O,EAAV,cAAA3O,OAA4B6O,EAA5B,WAGJ,GAAA7O,OAAU2O,EAAV,YF6RmBY,CAAoBN,EAAYnT,GAOnD,OAAO,KAGX,SAAS0T,EAAgB1T,GAAmC,IAA3B2T,EAA2BjZ,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GACxD,GAAIkZ,EAAS5T,IAAW2T,EACpB,OAAO,KAGX,IAAME,EAAmB3F,EAAoBlO,GAC7C,OAAI6T,GAIGrB,EAA6BxS,GAGxC,SAAS8T,EAAe/W,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAIgX,EAAQhX,EAAKgX,OAAS,kBAC1B,GAAqB,IAAjBA,EAAM/U,OAAc,OAAO,KAE/B,IAAIgV,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQhV,OAAS,EACrBgV,EAGJjX,EAAKgX,MAAMG,OAAO,GAG7B,SAASC,EAAkCnU,GACvC,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAM3N,EAAO8K,IAAUjM,IAAIc,EAAKgO,KAAK9C,SACrC,GAAI7K,EACA,OAAOgX,YAAahX,GAGxB,MAEJ,IAAK,qBACD,OAAO,EAIf,OAAO,EAGX,SAASiX,EAAqBrU,GAE1B,OADqBkO,EAAoBlO,IAGlCmU,EAAkCnU,GAG7C,SAASsU,EAAgBtU,GACrB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAM3N,EAAO8K,IAAUjM,IAAIc,EAAKgO,KAAK9C,SACrC,GAAI7K,EACA,OAAOA,EAAKmX,SAGhB,MAEJ,IAAK,qBACD,IAAMpB,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,GAAIF,EACA,OAAOA,EAAWoB,SAM9B,OAAO,KAGX,SAASC,EAAmBxU,GACxB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAM3N,EAAO8K,IAAUjM,IAAIc,EAAKgO,KAAK9C,SACrC,GAAI7K,EACA,OAAOA,EAAKqX,aAGhB,MAEJ,IAAK,qBACD,OAAO,KAIf,OAAO,KAGX,SAASC,EAAW1U,GAChB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMwI,EAAWrL,IAAUsL,YAAYzW,EAAKgO,KAAK9C,SACjD,GAAIsL,EACA,OAAOA,EAASoB,IAGpB,MAEJ,IAAK,qBACD,IAAMpB,EAAWH,IAAgBI,YAAYzW,EAAKgO,KAAKsI,eACvD,GAAIE,EACA,OAAOA,EAASqB,YAO5B,OAAO,KAGX,SAASC,EAAc7U,GACnB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS+J,EAAY9U,GACjB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASgK,EAAc/U,GACnB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eAEjD,OAAOF,GAAcA,EAAWG,WAEpC,IAAK,qBACL,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS0B,EAAahV,GAClB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOO,EAAWP,OAAOqC,UAKzC,IAAK,qBACD,IAAMxC,EAAaC,IAAgBzW,IAAIc,EAAKgO,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOH,EAAWG,OAAOqC,UAIrC,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASC,EAAalV,GAAmD,IAA3C2T,EAA2CjZ,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAAhB8V,EAAgB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAZ,SAAA+V,GAAG,OAAIA,GAC1D1T,EAAOgP,IAAU9P,IAAI+D,GAC3B,OAAKjD,EAED6W,EAAS5T,IAAW2T,EACbnD,EAAE,iBAGNzT,EAAKgX,OAASvD,EAAE,cANL,KAStB,SAASoD,EAAS5T,GACd,IAEMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAHW,EAKtB,OAAQA,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,OAAO7C,IAAUiN,YAAcpY,EAAKgO,KAAK9C,QAIjD,OAhBsB,EAmB1B,SAASmN,EAAoBpV,GACzB,IAAMqV,EAAgB,GAEhBtY,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAOsY,EAElB,OAAQtY,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,IAAgBc,YAAYzW,EAAKgO,KAAK4H,gBACvD,GAAIY,EACA,OAAOA,EAAS+B,SAAWD,EAcvC,OAAOA,EAGX,SAASE,EAAgBvV,GACrB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAKgO,KAEV,OAAQhO,EAAKgO,KAAK,UACd,IAAK,kBAOL,IAAK,iBACDlQ,IAAgBkJ,KAAK,CACjBjC,QAAS,kBACTmG,QAASlL,EAAKgO,KAAK9C,UAEvB,MAEJ,IAAK,qBACDpN,IAAgBkJ,KAAK,CACjBjC,QAAS,wBACT6Q,eAAgB5V,EAAKgO,KAAK4H,iBAE9B,MAEJ,IAAK,qBACD9X,IAAgBkJ,KAAK,CACjBjC,QAAS,wBACTuR,cAAetW,EAAKgO,KAAKsI,iBAOzC,SAASmC,EAAgBxV,EAAQyV,GAC7B,IAAM1Y,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInCgO,EAAShO,EAATgO,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK4H,iBAAmB8C,EAGrF,SAASC,EAAa1V,GAClB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFQ,IAIlBgO,EAAShO,EAATgO,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,SAGxB,SAAS4K,EAAgB3V,GACrB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrBgO,EAAShO,EAATgO,KAER,OAAIA,GAA0B,uBAAlBA,EAAK,SACNA,EAAKsI,cAGT,EAGX,SAASuC,EAAgB5V,EAAQ6V,GAC7B,IAAM9Y,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInCgO,EAAShO,EAATgO,KAER,OAAO2K,EAAa1V,IAAW+K,EAAKsI,gBAAkBwC,EAc1D,SAASxJ,EAAcrM,GACnB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInBgO,EAAShO,EAATgO,KAER,OAAOA,GAA2B,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,SAAgD,EAAfA,EAAK9C,QAGtG,SAAS6N,EAAiB9V,GACtB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,GAAI8X,EAAc7U,GAAS,CACvB,IAAM5C,EAAO8K,IAAUjM,IAAIoQ,EAAcrM,IACzC,GAAI5C,EACA,OAAOA,EAAKsP,cAIpB,OAAO3P,EAAKa,MAGhB,SAASmY,EAAa/V,GAClB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBzW,IAAIc,EAAKgO,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAOoD,wBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAM7C,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAOoD,yBAW1C,OAAO,EAGX,SAASC,EAAkBjW,GAAmC,IAA3B2T,EAA2BjZ,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAC1D,GAAIkZ,EAAS5T,IAAW2T,EACpB,MAAO,iBAGX,IAAM5W,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBAGL,IAAK,qBACD,OAAOhO,EAAKgX,MAEhB,IAAK,kBACL,IAAK,iBACD,OAAO3D,YAAiBrT,EAAKgO,KAAK9C,SAI1C,OAAO,KAGX,SAASiO,EAAyBlW,GAC9B,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBzW,IAAIc,EAAKgO,KAAK4H,gBACjD,OAAIF,EACOA,EAAWK,aAGf,EAEX,IAAK,qBACD,IAAMK,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,OAAIF,EACOA,EAAWL,aAGf,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASqD,EAAgBnW,GACrB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAKgO,KAAM,OAAO,EAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,OAAIF,IACQiD,QAAQjD,EAAWoB,UAKnC,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS8B,EAAcrW,GACnB,OAAQ4T,EAAS5T,GAGrB,SAASsW,EAActW,GACnB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInBgO,EAAShO,EAATgO,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBnX,IAAI8O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASO,GAAiBvW,GACtB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFY,IAItBgO,EAAShO,EAATgO,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBnX,IAAI8O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASQ,GAAaxW,GAClB,OAAO,EAGX,SAASyW,GAAgBzW,GACrB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrBgO,EAAShO,EAATgO,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBzW,IAAI8O,EAAK4H,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAO8D,kBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMvD,EAAaC,IAAgBnX,IAAI8O,EAAKsI,eAC5C,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAO8D,mBAW1C,OAAO,EAGX,SAASnE,GAAcvS,GACnB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAG3B,OAFc2W,GAAa3W,IAEW,IAAtBjD,EAAKgU,cAAoD,IAA9BhU,EAAKkU,qBAGpD,SAAS0F,GAAa3W,GAClB,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAE3B,GAAIjD,EAAM,KACEgQ,EAAkBhQ,EAAlBgQ,cACR,GAAIA,EAAe,KACP6J,EAAuB7J,EAAvB6J,mBACR,GAAIA,EACA,OAAOA,EAAmBC,MAKtC,OAAO,KAGX,SAASC,GAA6B9W,GAClC,IAAI+W,EAAmB,EACjBha,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAIjD,EAAM,KACEgQ,EAAkBhQ,EAAlBgQ,cACJA,IACAgK,EAAmBhK,EAAcxC,qBAKzC,OADA7N,QAAQ4F,IAAI,eAAgByU,GACrBA,EAtoCXC,EAAAC,EAAAC,EAAA,sBAAA3E,KAAAyE,EAAAC,EAAAC,EAAA,sBAAAP,KAAAK,EAAAC,EAAAC,EAAA,sBAAAJ,KAAAE,EAAAC,EAAAC,EAAA,sBAAAhJ,IAAA8I,EAAAC,EAAAC,EAAA,sBAAAvG,IAAAqG,EAAAC,EAAAC,EAAA,sBAAApG,IAAAkG,EAAAC,EAAAC,EAAA,sBAAAlG,IAAAgG,EAAAC,EAAAC,EAAA,sBAAAxD,IAAAsD,EAAAC,EAAAC,EAAA,sBAAA1E,IAAAwE,EAAAC,EAAAC,EAAA,sBAAA7G,IAAA2G,EAAAC,EAAAC,EAAA,sBAAA/G,IAAA6G,EAAAC,EAAAC,EAAA,sBAAAlH,IAAAgH,EAAAC,EAAAC,EAAA,sBAAA3G,IAAAyG,EAAAC,EAAAC,EAAA,sBAAA5E,IAAA0E,EAAAC,EAAAC,EAAA,sBAAAxF,IAAAsF,EAAAC,EAAAC,EAAA,sBAAApD,IAAAkD,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA2C,EAAAC,EAAAC,EAAA,sBAAA/C,IAAA6C,EAAAC,EAAAC,EAAA,sBAAAhG,IAAA8F,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA0C,EAAAC,EAAAC,EAAA,sBAAA1C,IAAAwC,EAAAC,EAAAC,EAAA,sBAAAxC,IAAAsC,EAAAC,EAAAC,EAAA,sBAAArC,IAAAmC,EAAAC,EAAAC,EAAA,sBAAApC,IAAAkC,EAAAC,EAAAC,EAAA,sBAAAnC,IAAAiC,EAAAC,EAAAC,EAAA,sBAAAlC,IAAAgC,EAAAC,EAAAC,EAAA,sBAAAhC,IAAA8B,EAAAC,EAAAC,EAAA,sBAAA9B,IAAA4B,EAAAC,EAAAC,EAAA,sBAAA3B,IAAAyB,EAAAC,EAAAC,EAAA,sBAAA1B,IAAAwB,EAAAC,EAAAC,EAAA,sBAAAtB,IAAAoB,EAAAC,EAAAC,EAAA,sBAAAxB,IAAAsB,EAAAC,EAAAC,EAAA,sBAAAvB,IAAAqB,EAAAC,EAAAC,EAAA,sBAAA7K,IAAA2K,EAAAC,EAAAC,EAAA,sBAAApB,IAAAkB,EAAAC,EAAAC,EAAA,sBAAAjB,IAAAe,EAAAC,EAAAC,EAAA,sBAAAhB,IAAAc,EAAAC,EAAAC,EAAA,sBAAAtD,IAAAoD,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAnB,IAAAiB,EAAAC,EAAAC,EAAA,sBAAAT,KAAAO,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAX,KAAAS,EAAAC,EAAAC,EAAA,sBAAAV,gGGgPM7d,EAAQ,gBArOV,SAAAiO,IAAc,IAAA/N,EAAA,OAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA4N,IACV/N,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAA8N,GAAAzN,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,mBAAoBT,GAC9B,MACJ,IAAK,uBACDd,EAAKuB,KAAK,uBAAwBT,GAClC,MACJ,IAAK,sBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO2d,YAC5Bha,IACAA,EAAQia,aAAe5d,EAAO4d,aAC9Bja,EAAQka,UAAY7d,EAAO6d,WAGnC3e,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,qBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO2d,YAC5Bha,GAAW3D,EAAO8d,MAAQna,EAAQma,QAClCna,EAAQma,MAAQ9d,EAAO8d,OAG/B5e,EAAKuB,KAAK,qBAAsBT,GAChC,MAEJ,IAAK,uBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO2d,YAC5Bha,IACA3D,EAAO+d,YAAcpa,EAAQC,QAC7BD,EAAQC,QAAU5D,EAAOge,aAGjC9e,EAAKuB,KAAK,uBAAwBT,GAClC,MAEJ,IAAK,6BAA8B,IACvByF,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WAEXha,EAAUzE,EAAKoD,IAAImD,EAASkY,GAClC,GAAIha,EAEA,OADoBA,EAAZC,QACQ,UACZ,IAAK,mBACDD,EAAQC,QAAQqa,aAAc,EAC9B,MAEJ,IAAK,mBACDta,EAAQC,QAAQsa,WAAY,EAMxChf,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,6BACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOme,gBAC5Bxa,IACAA,EAAQya,cAAgBpe,EAAO2D,QAAQya,eAEvCpe,EAAOme,iBAAmBne,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAIxBzE,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,0BACGA,EAAO2D,QAAQya,gBACfpe,EAAO2D,QAAQya,cAAcC,WAAare,EAAOqe,WACjDre,EAAO2D,QAAQya,cAAcE,cAAgBte,EAAOse,eAGxD,IAAMlb,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOme,gBAC5Bxa,IACAA,EAAQya,cAAgBpe,EAAO2D,QAAQya,cACnCza,EAAQya,gBACRza,EAAQya,cAAcC,WAAare,EAAOqe,WAC1C1a,EAAQya,cAAcE,cAAgBte,EAAOse,gBAGjDte,EAAOme,iBAAmBne,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAGxBzE,EAAKuB,KAAK,0BAA2BT,KA/GnCd,EAuHd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,8BACGA,EAAOue,SACPrf,EAAKsf,cAAcle,IAAnB,UAAAiK,OAAiCvK,EAAOqG,OAAxC,eAAAkE,OAA4DvK,EAAOsG,WAAa,CAC5ED,OAAQrG,EAAOqG,OACfC,UAAWtG,EAAOsG,YAGtBpH,EAAKsf,cAAcjc,OAAnB,UAAAgI,OAAoCvK,EAAOqG,OAA3C,eAAAkE,OAA+DvK,EAAOsG,YAG1EpH,EAAKuB,KAAK,8BAA+BT,GACzC,MAEJ,IAAK,6BACDd,EAAKsf,cAAcC,QAEnBvf,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,qBACGd,EAAKsf,cAAc/S,KAAO,IAC1BvM,EAAKsf,cAAcC,QAEnBvf,EAAKuB,KAAK,6BAA8B,CAAE0H,QAAS,gCAGvD,MAEJ,IAAK,oBACDjJ,EAAKuB,KAAK,oBAAqBT,GAC/B,MAEJ,IAAK,6BACDd,EAAKuB,KAAK,6BAA8BT,KA9JtCd,EAoKd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAtKvC9B,EAyKdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAxKpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKsf,cAAgB,IAAIjW,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,oEA8KTmH,EAAQC,GAAW,IAAAwD,EAAAzK,KACpB6B,IAAgBkJ,KAAK,CACjBjC,QAAS,aACT1C,QAASY,EACTsX,WAAYrX,IAEXoE,KAAK,SAAA/G,GACFmG,EAAKxJ,IAAIqD,GACTmG,EAAKrJ,KAAK,mBAAoBkD,KAEjCoF,MAAM,SAAA/F,GACH,IAAM0b,EAAiB,CACnBvW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbkG,EAAKxJ,IAAIoe,GACT5U,EAAKrJ,KAAK,mBAAoBie,iCAItCrY,EAAQC,GACR,IAAIlD,EAAO/D,KAAKgD,MAAMC,IAAI+D,GAC1B,IAAKjD,EAED,OAAO,KAGX,IAAIO,EAAUP,EAAKd,IAAIgE,GACvB,OAAK3C,GAEM,iCAMXA,GACA,IAAIP,EAAO/D,KAAKgD,MAAMC,IAAIqB,EAAQ8B,SAC7BrC,IACDA,EAAO,IAAImF,IACXlJ,KAAKgD,MAAM/B,IAAIqD,EAAQ8B,QAASrC,IAGpCA,EAAK9C,IAAIqD,EAAQ5B,GAAI4B,oCAGhBoJ,GACL,IAAK,IAAI5H,EAAI,EAAGA,EAAI4H,EAAS1H,OAAQF,IACjC9F,KAAKiB,IAAIyM,EAAS5H,WAjOHoG,iBAuO3BnC,OAAOzF,QAAU3E,EACFA,iMC1LA2f,2LAxCF,IAAAC,EAC0Bvf,KAAKwf,MAA5BxQ,EADHuQ,EACGvQ,QAASyQ,EADZF,EACYE,UACjB,IAAKzQ,EAAS,OAAO,KAFhB,IAIGC,EAAiDD,EAAjDC,QAASuH,EAAwCxH,EAAxCwH,WAAYkJ,EAA4B1Q,EAA5B0Q,UAAWjE,EAAiBzM,EAAjByM,aAElCrX,EAAO8K,IAAUjM,IAAIgM,IAAY,CACnCnG,QAAS,OACTiJ,KAAM,CAAEjJ,QAAS,mBACjBpG,GAAIuM,EACJuH,WAAYA,EACZkJ,UAAWA,GAGTC,EAAWzI,YAAgB9S,GAC3Bwb,EAASC,YAAkBpE,GAEjC,OACIqE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,WACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAACmT,EAAA,EAAD,CAAiB/T,OAAQgD,EAAS7K,KAAMA,KAE5C0b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACV9Q,EAAU,EAAI6Q,EAAAtf,EAAAqM,cAAA,KAAGoT,QAASR,GAAYE,GAAgBG,EAAAtf,EAAAqM,cAAA,YAAO8S,IAElEG,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBAAiBH,YA3B9BM,IAAMC,0GCUtBC,qNACF1I,WAAa,WAAM,IAAA6H,EACmD1f,EAAK2f,MAA/DxY,EADOuY,EACPvY,OAAQC,EADDsY,EACCtY,UAAWjC,EADZua,EACYva,KAAMoH,EADlBmT,EACkBnT,KAAMiU,EADxBd,EACwBc,YAAaZ,EADrCF,EACqCE,UACpD,IAAKza,EAAM,OAAO,KAFH,IAIPJ,EAAqBI,EAArBJ,MAAOJ,EAAcQ,EAAdR,UAEf,GAAIA,IACqB+P,YAAO/P,EAAUA,YAClBA,EAAUiC,WAC1B,OAAOqZ,EAAAtf,EAAAqM,cAACyT,EAAA,EAAD,CAAWtZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAWib,UAAWA,IAIjG,GAAI7a,EAAO,CACP,IAAIkI,EAAQ,CACR6C,MAAO,EACPE,OAAQ,GAEN5J,EAAYiK,YAAQtL,EAAMmB,MAAOqG,GACvC,GAAInG,EAAW,CACX,IAAMsa,EAAeC,YAAWva,EAAWoa,GACvCE,IACAzT,EAAM6C,MAAQ4Q,EAAa5Q,MAC3B7C,EAAM+C,OAAS0Q,EAAa1Q,QAIpC,OAAOiQ,EAAAtf,EAAAqM,cAAC4T,EAAA,EAAD,CAAOzZ,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAOkI,MAAOA,EAAO2S,UAAWA,IAG/F,OAAO,8EAGF,IAAAiB,EACqB1gB,KAAKwf,MAAvBmB,EADHD,EACGC,QAAS3b,EADZ0b,EACY1b,KACjB,IAAKA,EAAM,OAAO,KAFb,IAIG+V,EAA6B/V,EAA7B+V,MAAO8C,EAAsB7Y,EAAtB6Y,KAAMjC,EAAgB5W,EAAhB4W,YACfgF,EAAgBC,GAAiBhD,GAEvC,OACIiC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,QACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,cAAeH,EAAQI,yBAClDjB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACVhF,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,aAAcH,EAAQK,kBAAmBjG,GAC7E6F,GAAiBd,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,aAAaa,GAC7ChF,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBAAoBnE,GAClD5b,KAAK0X,sBAhDPwI,IAAMC,YAiEzBC,EAAKa,aAAe,CAChB7U,KAAMgG,IACNiO,YAAaa,KAGFC,UA1EA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,GACbwhB,YAAaF,KAyELD,CAAmBf,qBC3BnBmB,qNA5CXC,2BAA6B,SAAA7gB,GAAU,IAC3BoH,EAAWpH,EAAXoH,OAGFnB,EAAaC,GAFEhH,EAAK2f,MAAlBta,UAGFhE,EAAOtB,IAAUkH,gBAAgBF,GAClC1F,GAEDA,EAAKwB,KAAOqF,GACZlI,EAAK4hB,kGAhBT7hB,IAAU8hB,GAAG,2BAA4B1hB,KAAKwhB,2EAI9C5hB,IAAUoC,eAAe,2BAA4BhC,KAAKwhB,6DAgBrD,IACGtc,EAAalF,KAAKwf,MAAlBta,SACR,IAAKA,EAAU,OAAO,KAEtB,IAAM0B,EAAaC,GAAc3B,GAC3BhE,EAAOtB,IAAUkH,gBAAgBF,GACjC+a,EAAMpN,YAAOrT,GAEX0gB,EAAwB1c,EAAxB0c,UAAWC,EAAa3c,EAAb2c,SACb3b,EAAM,8BAAAgF,OAAiC2W,EAAjC,KAAA3W,OAA6C0W,GAEzD,OACI9B,EAAAtf,EAAAqM,cAAA,KAAGG,KAAM9G,EAAQuF,OAAO,SAASqW,IAAI,uBACjChC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBAAiBgC,WAAW,EAAOC,IAAK9b,EAAQyb,IAAKA,IACpE7B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACXD,EAAAtf,EAAAqM,cAACoV,EAAAzhB,EAAD,CAAU0hB,SAAS,QAAQC,MAAM,sBAtClCjC,IAAMC,sSCgBvBiC,4LACO,IAAA7C,EACsDvf,KAAKwf,MAAxDmB,EADHpB,EACGoB,QAAS0B,EADZ9C,EACY8C,OAAQC,EADpB/C,EACoB+C,YAAaC,EADjChD,EACiCgD,OAAQC,EADzCjD,EACyCiD,SAE9C,OACI1C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,aAAc,CAAE2B,oBAAqBF,KAC5DzC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CAAEgC,KAAMhC,EAAQiC,WACzBT,MAAM,UACNU,QAASR,GAAUC,EACnBE,SAAUA,EACVM,YAAahD,EAAAtf,EAAAqM,cAACkW,GAAAviB,EAAD,CAAwBmgB,QAAS,CAAEgC,KAAML,EAAc3B,EAAQqC,KAAO,UAEtFV,GAAexC,EAAAtf,EAAAqM,cAACoW,GAAAziB,EAAD,CAAkB4L,KAAM,GAAI8W,UAAW,IAAKvC,QAAS,CAAEgC,KAAMhC,EAAQwC,wBAb7EjD,IAAMC,YAyBfgB,OAxCA,CACXgC,aAAc,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,QAEnBX,UAAW,CACPY,QAAS,GAEbR,KAAM,CACFb,MAAO,gBA6BAhB,CAAmBiB,ICsEnBqB,uBAhHX,SAAAA,EAAYjE,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAyjB,IACf5jB,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA2jB,GAAAtjB,KAAAH,KAAMwf,KA0DVqE,gBAAkB,WACdhkB,EAAKikB,gBAELjkB,EAAKkkB,OAASC,sBAAsBnkB,EAAKokB,mBA9D1BpkB,EAiEnBikB,cAAgB,WACPjkB,EAAKkkB,SAEVG,qBAAqBrkB,EAAKkkB,QAC1BlkB,EAAKkkB,OAAS,OArEClkB,EAwEnBokB,iBAAmB,WAAM,IAAAE,EACWtkB,EAAKukB,MAA7BC,EADaF,EACbE,UAAWC,EADEH,EACFG,KAAMC,EADJJ,EACII,GAEnBC,EAAa5L,KAAKI,MAAQqL,EAEhC,GAAIG,GAAcC,IACd5kB,EAAK6kB,SAAS,CAAEC,SAAUJ,IAC1B1kB,EAAKikB,oBACF,CACH,IAAMa,EAAWL,EAAOM,KAAKC,OAAQN,EAAKD,GAAQE,EAAcC,KAChE5kB,EAAK6kB,SAAS,CAAEC,aAChB9kB,EAAKkkB,OAASC,sBAAsBnkB,EAAKokB,oBAhF7CpkB,EAAKkkB,OAAS,KAHC,IAKPtO,EAAU+J,EAAV/J,MALO,OAOf5V,EAAKukB,MAAQ,CACTE,KAAM7O,EACN8O,GAAI9O,EACJkP,SAAUlP,EAEVqP,eAAgBrP,GAZL5V,qFAgBGklB,EAAWC,EAAWC,GAAa,IAAA1F,EAC3Bvf,KAAKwf,MAAvB0F,EAD6C3F,EAC7C2F,OAAQzP,EADqC8J,EACrC9J,MACRkP,EAAa3kB,KAAKokB,MAAlBO,SAER,OAAIO,IAAWH,EAAUG,SAIrBzP,IAAUsP,EAAUtP,OAIpBkP,IAAaK,EAAUL,qDAqBZQ,EAAWC,EAAWC,GACjCF,EAAU1P,QAAUzV,KAAKwf,MAAM/J,OAC/BzV,KAAK6jB,iEAKT7jB,KAAK8jB,iDA+BA,IAAApD,EAC+B1gB,KAAKwf,MAAjC6C,EADH3B,EACG2B,OAAQ6C,EADXxE,EACWwE,OAAQjF,EADnBS,EACmBT,QAChB0E,EAAa3kB,KAAKokB,MAAlBO,SAER,OACI7E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,kBAAmB,CAAEwE,4BAA6BjD,MACvE6C,GAAU7C,EACRvC,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,yBAAyBE,QAASA,GAC1C0E,EAAW,KAGhB7E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGZ,EAAW,yDA/DEnF,EAAO4E,GACnC,OAAI5E,EAAM/J,QAAU2O,EAAMU,eACf,CACHT,UAAWzL,KAAKI,MAChBsL,KAAMF,EAAMO,SACZJ,GAAI/E,EAAM/J,MAEVqP,eAAgBtF,EAAM/J,OAIvB,YA/CcyK,IAAMC,YCqB7BqF,sNACFC,eAAiB,SAAC5L,GAA0B,IAAnBrC,EAAmB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAf,SAAA+V,GAAG,OAAIA,GAEhC,OAD0B5X,EAAK2f,MAAvBkG,cACkB,KAErB7L,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,WAAWlD,iBAMpCqR,YAAc,SAAAna,GAAS,IAAA+T,EACe1f,EAAK2f,MAA/BkG,EADWnG,EACXmG,cAAeE,EADJrG,EACIqG,OAClBF,IAELla,EAAMqa,kBAEND,QAGJE,aAAe,SAAAta,GAAS,IACZua,EAAalmB,EAAK2f,MAAlBuG,SAERva,EAAMqa,kBAENE,6EAGK,IAAArF,EAC0E1gB,KAAKwf,MAA5EmB,EADHD,EACGC,QAASqF,EADZtF,EACYsF,OAAQxD,EADpB9B,EACoB8B,SAAUkD,EAD9BhF,EAC8BgF,cAAeR,EAD7CxE,EAC6CwE,OAAQe,EADrDvF,EACqDuF,cAAezO,EADpEkJ,EACoElJ,EACzE,IAAKwO,EAAQ,OAAO,KAFf,IAIGnI,EAAmEmI,EAAnEnI,KAAMqI,EAA6DF,EAA7DE,YAAaC,EAAgDH,EAAhDG,gBAAiBC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,gBAEnD5Q,EAAQ,IAKZ,OAJIyQ,IACAzQ,EAASyQ,EAAcD,EAAiB,KAIxCnG,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,cAAcE,QAASjgB,KAAK2lB,aACvC7F,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IACP,sBACA4E,EAAgB,yBAA2B,yBAE/C5F,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,2BAA2BhF,MAAO/a,KAAKylB,eAAeS,EAAa1O,IAC9EsI,EAAAtf,EAAAqM,cAACyZ,GAAD,CACI7Q,MAAO0Q,EACP9D,OAAQ+D,EACRlB,OAAQA,EACRjF,QAASjgB,KAAK8lB,eAElBhG,EAAAtf,EAAAqM,cAAC0Z,GAAD,CACIhE,QAASmD,EACTrD,OAAQ+D,EACR9D,YAAa+D,EACb7D,SAAUA,IAEd1C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBAAoBlC,KAG3CiC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,4BAADhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAiC6gB,EAAQ8F,YAAcf,MACjF5F,EAAAtf,EAAAqM,cAAC6Z,GAAAlmB,EAAD,CACImgB,QAAS,CAAEgC,KAAMhC,EAAQwC,aAAcwD,IAAKhG,EAAQiG,aACpDzE,MAAM,UACN0E,QAAQ,cACRpR,MAAOiQ,EAAgB,EAAId,KAAKkC,IAAI,IAAKrR,aAnEpCyK,IAAMC,YAwFhB4G,GALCC,aACZ7F,IAnGW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChBqjB,aAAc,CACV8D,gBAAiB,cACjBC,OAAQ,eACR9D,SAAU,WACVE,KAAM,EACN6D,MAAO,EACPC,OAAQ,GAEZR,YAAa,CACTS,WAAY,yBAEbC,YAAYlG,KAuFI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQvB,0BClGjBiC,sNACFrD,MAAQ,CACJsD,QAAQ,EACRC,aAAa,EACbrE,KAAM,EACND,IAAK,KAGTuE,yBAA2B,SAAC/N,GAA0B,IAAnBrC,EAAmB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAf,SAAA+V,GAAG,OAAIA,GAC1C,OAAKoC,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,cAMzBqQ,WAAa,SAAAnV,GAAS,IAAA6M,EACY1f,EAAK2f,OC/BpC,SAAuBxY,EAAQC,EAAW6gB,GAC7CjmB,KAAgBkJ,KAAK,CACjBjC,QAAS,gBACT1C,QAASY,EACTsX,WAAYrX,EACZ8gB,WAAYD,ID4BZE,CAHkBzI,EACVvY,OADUuY,EACFtY,UAEiB,CAACyL,OAGtCuV,aAAe,SAAAzc,GACPA,GACAA,EAAMqa,kBAFU,IAAAnF,EAKgB7gB,EAAK2f,MAAjCxY,EALY0Z,EAKZ1Z,OAAQC,EALIyZ,EAKJzZ,UAAWihB,EALPxH,EAKOwH,KACHroB,EAAKukB,MAArBuD,aAGJ9nB,EAAKsoB,yBAGaD,EAAdE,WCvCT,SAA0BphB,EAAQC,GACrCpF,KAAgBkJ,KAAK,CACjBjC,QAAS,gBACT1C,QAASY,EACTsX,WAAYrX,EACZ8gB,WAAY,KDqCZM,CAAiBrhB,EAAQC,MAG7BqhB,eAAiB,SAAA9c,GACbA,EAAMqa,kBADgB,IAAA0C,EAGQ1oB,EAAK2f,MAA3BxY,EAHcuhB,EAGdvhB,OAAQC,EAHMshB,EAGNthB,UACGpH,EAAKukB,MAAhBsD,QAGJ7nB,EAAK6kB,SAAS,CAAEgD,QAAQ,IC3C7B,SAAkB1gB,EAAQC,GAC7BpF,KAAgBkJ,KAAK,CACjBjC,QAAS,WACT1C,QAASY,EACTsX,WAAYrX,EACZsX,aAAc,ODyCdiK,CAASxhB,EAAQC,MAGrBwhB,aAAe,SAAAjd,GACQ3L,EAAKukB,MAAhBsD,QAGR7nB,EAAK6kB,SAAS,CACVgD,QAAQ,EACRC,aAAa,OAIrBe,kBAAoB,SAAAld,GACZA,GACAA,EAAMqa,kBAGVhmB,EAAK6kB,SAAS,CAAEgD,QAAQ,OAG5BiB,kBAAoB,SAAAnd,GACC3L,EAAK2f,MAAd0I,KACAE,YAGJ5c,IACAA,EAAMod,iBACNpd,EAAMqa,mBAGchmB,EAAKukB,MAArBuD,YAGJ9nB,EAAK6kB,SAAS,CAAEiD,aAAa,IAE7B9nB,EAAK6kB,SAAS,CACViD,aAAa,EACbrE,KAAM9X,EAAMqd,QACZxF,IAAK7X,EAAMsd,cAKvBX,uBAAyB,SAAA3c,GACjBA,GACAA,EAAMqa,kBAGVhmB,EAAK6kB,SAAS,CAAEiD,aAAa,6EAGxB,IAAAld,EAAAzK,KAAA+oB,EACkC/oB,KAAKwf,MAApCxY,EADH+hB,EACG/hB,OAAQC,EADX8hB,EACW9hB,UAAWihB,EADtBa,EACsBb,KAAM1Q,EAD5BuR,EAC4BvR,EAD5B2M,EAEsCnkB,KAAKokB,MAAxCd,EAFHa,EAEGb,KAAMD,EAFTc,EAESd,IAAKsE,EAFdxD,EAEcwD,YAAaD,EAF3BvD,EAE2BuD,OACxBsB,EAAoDd,EAApDc,SAAUC,EAA0Cf,EAA1Ce,QAASC,EAAiChB,EAAjCgB,kBAAmBd,EAAcF,EAAdE,UAExC9jB,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAM6kB,GAAaf,GAAaa,EAAQtd,KAAK,SAAAC,GAAC,OAAIA,EAAEwa,WAAaxa,EAAEya,kBAC7D+C,EAAc9kB,GAAWA,EAAQ+kB,cACjC3D,GAAiB0C,GAAaa,EAAQK,MAAM,SAAA1d,GAAC,OAAKA,EAAEwa,YACpDH,EAAgBrB,KAAKkC,IAALrlB,MAAAmjB,KAAI9kB,OAAAypB,EAAA,EAAAzpB,CAAQmpB,EAAQtb,IAAI,SAAA/B,GAAC,OAAIA,EAAEsa,gBAErD,OACIpG,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,OAAOyJ,cAAexpB,KAAK2oB,mBACtC7I,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACXD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,uBAAuBiJ,GACvClJ,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,YAAwBvI,EAAZ4Q,EAAc,eAAoB,mBAElEtI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACVkJ,EAAQtb,IAAI,SAAC/B,EAAG8G,GAAJ,OACToN,EAAAtf,EAAAqM,cAAC4c,GAAD,CACIhS,IAAK/E,EACLsT,OAAQpa,EACR8Z,cAAeA,EACfR,OAAQkD,EACRnC,cAAeA,EACfL,OAAQ,kBAAMnb,EAAKod,WAAWnV,IAC9BqT,SAAUtb,EAAKwd,kBAI3BnI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BAA6B/f,KAAK4nB,yBAAyBsB,EAAmB1R,IAC7FsI,EAAAtf,EAAAqM,cAAC6c,EAAAlpB,EAAD,CACIyJ,KAAM0d,IAAgBwB,GAAaC,GACnCO,QAAS3pB,KAAKmoB,uBACdyB,gBAAgB,iBAChBC,eAAgB,CAAExG,MAAKC,QACvBwG,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBlK,EAAAtf,EAAAqM,cAACqd,EAAA1pB,EAAD,CAAUyf,QAAS,SAAAkK,GAAC,OAAIA,EAAEtE,oBACrBsD,GAAarJ,EAAAtf,EAAAqM,cAACud,EAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKioB,cAAezQ,EAAE,WACtD4R,GAAetJ,EAAAtf,EAAAqM,cAACud,EAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKyoB,cAAejR,EAAE,eAGjEsI,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAMyd,EACNiC,QAAS3pB,KAAK0oB,kBACd6B,kBAAgB,qBAChBzK,EAAAtf,EAAAqM,cAAC2d,GAAAhqB,EAAD,CAAakC,GAAG,qBAAqB8U,EAAE,uBACvCsI,EAAAtf,EAAAqM,cAAC4d,EAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC6d,GAAAlqB,EAAD,KAAoBgX,EAAE,uBAE1BsI,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAK0oB,kBAAmBvG,MAAM,WAC1C3K,EAAE,WAEPsI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKsoB,eAAgBnG,MAAM,WACvC3K,EAAE,mBAtKZ0I,IAAMC,YAsLVqH,iBAAkBC,cElKlBoD,4LA/BF,IAAAtL,EAC2Cvf,KAAKwf,MAA7CxY,EADHuY,EACGvY,OAAQC,EADXsY,EACWtY,UAAWrB,EADtB2Z,EACsB3Z,MAAO6Z,EAD7BF,EAC6BE,UAClC,IAAK7Z,EAAO,OAAO,KAFd,IAIGmV,EAA6BnV,EAA7BmV,MAAO+P,EAAsBllB,EAAtBklB,QAAS5lB,EAAaU,EAAbV,SACxB,IAAKA,EAAU,OAAO,KALjB,IAOG0c,EAAwB1c,EAAxB0c,UAAWC,EAAa3c,EAAb2c,SACb3b,EAAM,8BAAAgF,OAAiC2W,EAAjC,KAAA3W,OAA6C0W,GAEzD,OACI9B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,SACXD,EAAAtf,EAAAqM,cAACke,EAAD,CAAU/jB,OAAQA,EAAQC,UAAWA,EAAW/B,SAAUA,EAAUua,UAAWA,IAC/EK,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACXD,EAAAtf,EAAAqM,cAAA,KAAGG,KAAM9G,EAAQuF,OAAO,SAASqW,IAAI,uBACjChC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,eAAehF,IAElC+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkB+K,YAlBjC5K,IAAMC,8GCwD1B,SAAS6K,GAAS1mB,GACd,IAAKA,EAAS,OAAO,KADE,IAGfgN,EAA4BhN,EAA5BgN,eAAgBlL,EAAY9B,EAAZ8B,QAExB,GAAIkL,EAAgB,CAChB,IAAMlN,EAAO8K,IAAUjM,IAAIqO,GAC3B,GAAIlN,EACA,OAAO8S,YAAgB9S,GAI/B,GAAIgC,EAAS,CACT,IAAMrC,EAAOgP,KAAU9P,IAAImD,GAC3B,GAAIrC,EACA,OAAOA,EAAKgX,MAIpB,OAAO,KAGX,SAASkQ,GAAUpN,EAAMqN,EAAOC,GAM5B,OALID,EAAQ,IAAGA,EAAQ,GACnBA,EAAQrN,EAAK7X,OAAS,IAAGklB,EAAQrN,EAAK7X,OAAS,GAC/CmlB,EAAMD,IAAOC,EAAMD,GACnBC,EAAMtN,EAAK7X,SAAQmlB,EAAMtN,EAAK7X,QAE3B6X,EAAKoN,UAAUC,EAAOC,GAGjC,SAAStF,GAAgBra,GACrBA,EAAMqa,kBAGV,SAAShF,GAAiBhD,GACtB,GAAsB,kBAAlBA,EAAK,SAA8B,OAAO,KAC9C,IAAKA,EAAKA,KAAM,OAAO,KACvB,IAAKA,EAAKuN,SAAU,OAAOvN,EAAKA,KAIhC,IAFA,IAAI1T,EAAS,GACTuI,EAAQ,EANgB2Y,EAAA,SAOnBvlB,GACL,IAAIwlB,EAAmBL,GAAUpN,EAAKA,KAAMnL,EAAOmL,EAAKuN,SAAStlB,GAAGylB,QAChED,GACAnhB,EAAOX,KAAK8hB,GAGhB,IAAIE,EAAaP,GACbpN,EAAKA,KACLA,EAAKuN,SAAStlB,GAAGylB,OACjB1N,EAAKuN,SAAStlB,GAAGylB,OAAS1N,EAAKuN,SAAStlB,GAAGE,QAE/C,OAAQ6X,EAAKuN,SAAStlB,GAAGiM,KAAK,UAC1B,IAAK,oBACD,IACI0Z,EADAhjB,EAAM+iB,EAAWE,WAAW,QAAUF,EAAa,UAAYA,EAEnE,IACIC,EAAaE,UAAUH,GACzB,MAAO7nB,GACLD,QAAQC,MAAM,QAAU6nB,EAAa,KAAO7nB,GAC5C8nB,EAAaD,EAGjBrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KACI4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OACtBtL,QAAS4F,GACT7Y,KAAMvE,EACNsS,MAAOtS,EACPgD,OAAO,SACPqW,IAAI,uBACH2J,IAGT,MAEJ,IAAK,wBACD,IAAIhjB,EAAMoV,EAAKuN,SAAStlB,GAAGiM,KAAKtJ,IAAIijB,WAAW,QACzC7N,EAAKuN,SAAStlB,GAAGiM,KAAKtJ,IACtB,UAAYoV,EAAKuN,SAAStlB,GAAGiM,KAAKtJ,IACxC0B,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KACI4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OACtBtL,QAAS4F,GACT7Y,KAAMvE,EACNsS,MAAOtS,EACPgD,OAAO,SACPqW,IAAI,uBACH0J,IAGT,MAEJ,IAAK,qBACDrhB,EAAOX,KAAKsW,EAAAtf,EAAAqM,cAAA,UAAQ4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,QAASC,IACnD,MACJ,IAAK,uBACDrhB,EAAOX,KAAKsW,EAAAtf,EAAAqM,cAAA,MAAI4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,QAASC,IAC/C,MACJ,IAAK,qBACDrhB,EAAOX,KAAKsW,EAAAtf,EAAAqM,cAAA,QAAM4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,QAASC,IACjD,MACJ,IAAK,oBACDrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,OAAK4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,QACvBzL,EAAAtf,EAAAqM,cAAA,YAAO2e,KAGf,MACJ,IAAK,wBACL,IAAK,4BAgBDrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KAAG4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OAAQtL,QAhBrC,SAAqBzU,GAGjB,GAFAqa,GAAgBra,GAEZqS,EAAKuN,SAAStlB,GAAGiM,KAAK9C,QACtB2c,aAAgB/N,EAAKuN,SAAStlB,GAAGiM,KAAK9C,QAAS,MAAM,OAClD,CACH,IAAI4c,GAA+B,KAAjBL,EAAW,GAAY,IAAM,IAAMA,EACrD3pB,KAAgBkJ,KAAK,CACjBjC,QAAS,mBACTyS,SAAUsQ,IACXxgB,KAAK,SAASlB,GACTA,GAAQyhB,aAAgBzhB,EAAOzH,GAAI,MAAM,QAMhD8oB,IAGT,MACJ,IAAK,wBACD,IAAIM,EAAUN,EAAWxlB,OAAS,GAAuB,MAAlBwlB,EAAW,GAAaP,GAAUO,EAAY,GAAKA,EAQ1FrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KAAG4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OAAQtL,QARrC,SAAuBkK,GACnBtE,GAAgBsE,GAChB,IAAMnjB,EAASuR,KAAiBwT,YACnBhZ,KAAU9P,IAAI+D,IAE3BuR,KAAiBnX,KAAK,4BAA6B,CAAE4F,OAAQA,EAAQ6W,KAAM,IAAMiO,MAI5EN,IAGT,MACJ,IAAK,6BACDrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KACI4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OACtBtL,QAAS4F,GACT7Y,KAAI,UAAA9B,OAAYsgB,GAChB/f,OAAO,SACPqW,IAAI,uBACH0J,IAGT,MACJ,IAAK,2BACD,IAAIQ,EAAUR,EAAWxlB,OAAS,GAAuB,MAAlBwlB,EAAW,GAAaP,GAAUO,EAAY,GAAKA,EAC1FrhB,EAAOX,KACHsW,EAAAtf,EAAAqM,cAAA,KACI4K,IAAKoG,EAAKuN,SAAStlB,GAAGylB,OACtBtL,QAAS4F,GACT7Y,KAAI,4BAAA9B,OAA8B8gB,EAA9B,UACHR,IAGT,MACJ,QACIrhB,EAAOX,KAAKgiB,GAIpB9Y,GAAS4Y,EAAiBtlB,OAASwlB,EAAWxlB,QAtIzCF,EAAI,EAAGA,EAAI+X,EAAKuN,SAASplB,OAAQF,IAAKulB,EAAtCvlB,GAyIT,GAAI4M,EAAQmL,EAAKA,KAAK7X,OAAQ,CAC1B,IAAIimB,EAAkBpO,EAAKA,KAAKoN,UAAUvY,GACtCuZ,GACA9hB,EAAOX,KAAKyiB,GAIpB,OAAO9hB,EAGX,SAAS+hB,GAAQ5nB,GACb,IAAKA,EAAS,OAAO,KAErB,IAAIuZ,EAAO,GAEHtZ,EAAYD,EAAZC,QAER,GACIA,GACqB,gBAArBA,EAAQ,UACRA,EAAQsZ,MACkB,kBAA1BtZ,EAAQsZ,KAAK,UACbtZ,EAAQsZ,KAAKA,KAEbA,EAAOgD,GAAiBtc,EAAQsZ,WAGhC,GAAItZ,GAAWA,EAAQ4nB,SAAwC,kBAA7B5nB,EAAQ4nB,QAAQ,UAAgC5nB,EAAQ4nB,QAAQtO,KAAM,CACpGA,EAAKrU,KAAK,MACV,IAAIoX,EAAgBC,GAAiBtc,EAAQ4nB,SACzCvL,IACA/C,EAAOA,EAAK3S,OAAO0V,IAK/B,OAAO/C,EAGX,SAASuO,GAAW9nB,GAChB,OAAKA,GACAA,EAAQC,QAEND,EAAQC,QAAQc,SAHF,KAMzB,SAAS+T,GAAQ9U,GACb,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQqU,KAAM,OAAO,KAE1B,IAAIA,EAAO,IAAIC,KAAoB,IAAftU,EAAQqU,MAE5B,OAAOI,IAAWJ,EAAM,QAG5B,SAAS0T,GAAY/nB,GACjB,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQqU,KAAM,OAAO,KAE1B,IAAMA,EAAO,IAAIC,KAAoB,IAAftU,EAAQqU,MAC9B,OAAOI,IAAWJ,EAAM,qBAG5B,SAAS2T,GAAShoB,EAASmb,GACvB,IAAKnb,EAAS,OAAO,KADa,IAG1B8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOub,EAAAtf,EAAAqM,cAACyT,EAAA,EAAD,CAAWtZ,OAAQZ,EAASa,UAAWvE,EAAI8B,UAAWD,EAAQC,UAAWib,UAAWA,IAC/F,IAAK,eACD,OAAOK,EAAAtf,EAAAqM,cAAC0f,EAAA,EAAD,CAAOvlB,OAAQZ,EAASa,UAAWvE,EAAIgC,MAAOH,EAAQG,MAAO+a,UAAWA,IACnF,IAAK,iBACD,OAAOK,EAAAtf,EAAAqM,cAAC2f,EAAD,CAASxlB,OAAQZ,EAASa,UAAWvE,EAAIsM,QAASzK,EAAQyK,QAASyQ,UAAWA,IACzF,IAAK,kBACD,OAAOK,EAAAtf,EAAAqM,cAAC4f,EAAA,EAAD,CAAUzlB,OAAQZ,EAASa,UAAWvE,EAAIoC,SAAUP,EAAQO,SAAU2a,UAAWA,IAC5F,IAAK,cACD,OAAOK,EAAAtf,EAAAqM,cAAC6f,EAAD,CAAM1lB,OAAQZ,EAASa,UAAWvE,EAAIsC,KAAMT,EAAQS,KAAMya,UAAWA,IAChF,IAAK,kBACD,OAAOK,EAAAtf,EAAAqM,cAACke,EAAD,CAAU/jB,OAAQZ,EAASa,UAAWvE,EAAIwC,SAAUX,EAAQW,SAAUua,UAAWA,IAC5F,IAAK,eACD,OAAOK,EAAAtf,EAAAqM,cAAC4T,EAAA,EAAD,CAAOzZ,OAAQZ,EAASa,UAAWvE,EAAIkC,MAAOL,EAAQK,MAAO6a,UAAWA,IACnF,IAAK,cACD,OAAOK,EAAAtf,EAAAqM,cAAC8f,GAAD,CAAM3lB,OAAQZ,EAASa,UAAWvE,EAAIwlB,KAAM3jB,EAAQ2jB,KAAMzI,UAAWA,IAChF,IAAK,iBACD,OAAOK,EAAAtf,EAAAqM,cAAC+f,GAAA,EAAD,CAAS5lB,OAAQZ,EAASa,UAAWvE,EAAI0C,QAASb,EAAQa,QAASqa,UAAWA,IACzF,IAAK,cACD,OAAO,KACX,IAAK,eACD,OAAOK,EAAAtf,EAAAqM,cAACggB,GAAD,CAAO7lB,OAAQZ,EAASa,UAAWvE,EAAIkD,MAAOrB,EAAQqB,MAAO6Z,UAAWA,IACnF,IAAK,eACD,OAAOK,EAAAtf,EAAAqM,cAACigB,GAAA,EAAD,CAAO9lB,OAAQZ,EAASa,UAAWvE,EAAI4C,MAAOf,EAAQe,MAAOma,UAAWA,IACnF,IAAK,mBACD,OAAOK,EAAAtf,EAAAqM,cAACkgB,GAAA,EAAD,CAAW/lB,OAAQZ,EAASa,UAAWvE,EAAI6E,UAAWhD,EAAQgB,WAAYka,UAAWA,IAChG,IAAK,mBACD,OAAOK,EAAAtf,EAAAqM,cAACmgB,GAAA,EAAD,CAAWhmB,OAAQZ,EAASa,UAAWvE,EAAI0E,UAAW7C,EAAQiB,WAAYia,UAAWA,IAChG,QACI,MAAO,IAAMlb,EAAQ,SAAW,KAI5C,SAAS0oB,GAAsBC,GAC3B,IAAKA,EAAa,OAAO,EADe,IAGhCC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,OAAO,EAEpB,OAAQA,EAAO,UACX,IAAK,2BACD,OAAO,EAEX,IAAK,iCACD,OAAO,EAEX,IAAK,8BACD,OAAO,EAIf,OAAO,EAGX,SAASC,GAAgBF,GAA6B,IAAhB1V,EAAgB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAZ,SAAA+V,GAAG,OAAIA,GAC7C,IAAKyV,EAAa,MAAO,GADyB,IAG1CC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,MAAO,GAEpB,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrB7b,EAAmB6b,EAAnB7b,eAEFlN,EAAO8K,IAAUjM,IAAIqO,GAC3B,OAAO4F,YAAgB9S,GAE3B,IAAK,iCAGD,OAFwB+oB,EAAhBE,YAIZ,IAAK,8BAA+B,IACxBjnB,EAA8B+mB,EAA9B/mB,QAASknB,EAAqBH,EAArBG,iBAEjB,OAAOpR,aAAa9V,GAAS,EAAOoR,IAAM8V,EAAgB,KAAApiB,OAAQoiB,EAAR,KAA8B,IAIhG,MAAO,GAGX,SAASC,GAAUjpB,GACf,IAAKA,EAAS,OAAO,EACrB,IAAKA,EAAQ8B,QAAS,OAAO,EAC7B,IAAK9B,EAAQsT,YAAa,OAAO,EAEjC,IAAI7T,EAAOgP,KAAU9P,IAAIqB,EAAQ8B,SACjC,QAAKrC,GAEEA,EAAK8T,4BAA8BvT,EAAQ5B,GAGtD,SAAS8qB,GAAgBlpB,GACrB,OAAKA,EAEEA,EAAQgN,eAFM,KAKzB,SAASmc,GAAetjB,EAAQwI,GAC5B,GAA+B,IAA3BxI,EAAOuD,SAAS1H,QACG,IAAnB2M,EAAQ3M,OAAZ,CAEA,IAAM2H,EAAMgF,EAAQ+a,OAAO,SAASC,EAAaC,GAE7C,OADAD,EAAY1sB,IAAI2sB,EAAQlrB,GAAIkrB,EAAQlrB,IAC7BirB,GACR,IAAIzkB,KAEPiB,EAAOuD,SAAWvD,EAAOuD,SAAS7B,OAAO,SAAAD,GAAC,OAAK+B,EAAI7K,IAAI8I,EAAElJ,OAG7D,SAASgV,GAAWpT,GAAyB,IAAhBkT,EAAgB9V,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAZ,SAAA+V,GAAG,OAAIA,GACpC,IAAKnT,EAAS,OAAO,KADoB,IAGjCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,IAAI4nB,EAAU,GAKd,GAJI5nB,EAAQ4nB,SAAW5nB,EAAQ4nB,QAAQtO,OACnCsO,EAAO,KAAAjhB,OAAQ3G,EAAQ4nB,QAAQtO,OAG/BvZ,EAAQupB,IAAM,EACd,OAAOC,aAAyBxpB,GAGpC,OAAQC,EAAQ,UACZ,IAAK,mBACD,OAAOiT,EAAE,aAAe2U,EAE5B,IAAK,eACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,8BACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,cACD,OAAOkT,EAAE,QAAU2U,EAEvB,IAAK,wBAGL,IAAK,yBAGL,IAAK,yBAGL,IAAK,0BAGL,IAAK,yBAGL,IAAK,wBAGL,IAAK,oBAGL,IAAK,yBAGL,IAAK,uBACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,iBACD,OAAOkT,EAAE,iBAAmB2U,EAEhC,IAAK,2BAGL,IAAK,6BACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,kBACD,OAAOkT,EAAE,kBAAoB2U,EAEjC,IAAK,sBACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,sBACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,cACD,OAAO3U,EAAE,cAAgB2U,EAE7B,IAAK,mBAGL,IAAK,iBACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,kBACD,OAAOkT,EAAE,kBAAoB2U,EAEjC,IAAK,8BAGL,IAAK,0BAGL,IAAK,2BAGL,IAAK,8BACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,eACD,OAAOkT,EAAE,eAAiB2U,EAE9B,IAAK,cAGD,MAAO,iBAFU5nB,EAAT2jB,KAEac,UAAYxR,EAAE,SAAW2U,EAElD,IAAK,oBAGL,IAAK,yBACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QACJ2oB,EAAQ,GAKZ,OAJI3oB,GAAWA,EAAQ2oB,QACnBA,EAAQ3oB,EAAQ2oB,OAGbvW,EAAE,kBAAoBuW,EAAK,IAAA7iB,OAAO6iB,GAAU,IAAM5B,EAE7D,IAAK,8BACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,cACD,OAAOC,EAAQsZ,KAAKA,KAAOsO,EAE/B,IAAK,qBACD,OAAO2B,aAAyBxpB,GAEpC,IAAK,eACD,OAAOkT,EAAE,kBAAoB2U,EAEjC,IAAK,eACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,mBACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,mBACD,OAAO3U,EAAE,eAAiB2U,EAE9B,IAAK,0BACD,OAAO2B,aAAyBxpB,GAEpC,QACI,OAAOkT,EAAE,0BAKrB,SAASwW,GAAezpB,GACpB,QAAKA,GAEuB,iBAArBA,EAAQ,SAGnB,SAASsC,GAAc3B,GACnB,IAAKA,EAAU,OAAO,KADO,IAGrB0c,EAAwB1c,EAAxB0c,UAAWC,EAAa3c,EAAb2c,SACnB,aAAA3W,OAAc2W,EAAd,KAAA3W,OAA0B0W,EAA1B,UAAA1W,OAA4C0E,IAA5C,KAAA1E,OAA8D4E,IAA9D,WAAA5E,OAAuF8E,IAAvF,UAAA9E,OAA8GwE,KAGlH,SAASue,GAAejnB,EAAQC,GAC5B,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFkB,IAI/BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO+X,QAAQ/X,EAASC,OAE5B,QACI,OAAO,GAKnB,SAAS4oB,GAAgBlnB,EAAQC,GAC7B,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,kBAAmB,IACZO,EAAaP,EAAbO,SACR,IAAKA,EAAU,OAAO,EAFF,IAIZqpB,EAAcrpB,EAAdqpB,UAER,OAAOA,GAAaA,EAAU7Z,cAAc8Z,SAAS,SAEzD,IAAK,cAAe,IACR/oB,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,EAFN,IAIRP,EAAaO,EAAbP,SACR,IAAKA,EAAU,OAAO,EALN,IAORqpB,EAAcrpB,EAAdqpB,UAER,OAAOA,GAAaA,EAAU7Z,cAAc8Z,SAAS,SAEzD,QACI,OAAO,GAKnB,SAASC,GAAmBrnB,EAAQC,GAChC,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFsB,IAInCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO+X,QAAQ/X,EAASb,WAE5B,QACI,OAAO,GAKnB,SAAS8pB,GAAgBtnB,EAAQC,GAC7B,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOA,EAAQqa,YAEnB,IAAK,mBACD,OAAOra,EAAQsa,UAEnB,QACI,OAAO,GAKnB,SAAS0P,GAAcjqB,GACnB,IAAKA,EAAS,OAAO,KADO,IAGpBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTG,EAAUH,EAAVG,MACR,GAAIA,EACA,OAAO8pB,aAAc9pB,GAEzB,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAUW,EAAVX,MACR,GAAIA,EACA,OAAO8pB,aAAc9pB,GAEzB,OAKZ,OAjqBJ,SAAmBJ,GACf,IAAKA,EAAS,OAAO,KADG,IAGhBmqB,EAAiBnqB,EAAjBmqB,aAER,GAAIA,EACA,OAAQA,EAAa,UACjB,IAAK,2BACD,GAAIA,EAAand,eAAiB,EAAG,CACjC,IAAMlN,EAAO8K,IAAUjM,IAAIwrB,EAAand,gBACxC,GAAIlN,EACA,OAAO8S,YAAgB9S,GAG/B,MAEJ,IAAK,uBACD,IAAML,EAAOgP,KAAU9P,IAAIwrB,EAAaroB,SACxC,GAAIrC,EACA,OAAOA,EAAKgX,MAO5B,OAAOiQ,GAAS1mB,GAuoBToqB,CAAUpqB,GAGrB,SAASqqB,GAAS3nB,EAAQC,GACtB,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFY,IAIzBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAEA,GADkBA,EAAVX,MAEJ,OAAO,EAQvB,OAAO,EAGX,SAASkqB,GAAa5nB,EAAQC,GAC1B,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFgB,IAI7BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBAED,GADuBA,EAAfgB,WAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAEA,GADuBA,EAAfE,WAEJ,OAAO,EAQvB,OAAO,EAGX,SAASspB,GAAwB7nB,EAAQC,GACrC,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAF2B,IAIxCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,MAAO,CACHoE,QAAS,6BAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfiB,WAEJ,MAAO,CACHsD,QAAS,iCAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfgB,WAEJ,OAAO,KAMX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAC3B,GAAIb,EACA,OAAO,KAOX,GAAIc,EACA,OAAO,KAOX,GAAID,EACA,OAAO,KAMX,OAKZ,OAAO,KAGX,SAASupB,GAActqB,EAAWF,EAASyqB,GACvC,GAAKvqB,GACAF,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEAxB,EAASsD,EAApBA,UACDtD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAOxCzC,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,IAGfb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhB6V,KAAiB0W,sBAAsB,CACnCjoB,OAAQZ,EACRa,UAAWvE,OAInB,SAASwsB,GAAUxqB,EAAOJ,EAASyqB,GAC/B,GAAKrqB,GACAJ,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASwD,EAAhBA,MACDxD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAGpC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAU4G,gBAAgBJ,EAAS1D,EAAIxB,EAAKwB,MAG9Eb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAsDnB,SAASysB,GAAarqB,EAAUR,EAASyqB,GACrC,GAAKjqB,GACAR,EAAL,CAFiD,IAIzC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEDxB,EAAS4D,EAAnBA,SACD5D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAIxCzC,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGZwrB,GAAgB9nB,EAAS1D,IACzBb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhB6V,KAAiB0W,sBAAsB,CACnCjoB,OAAQZ,EACRa,UAAWvE,KAGfkP,YAAe1Q,EAAM4D,EAASqpB,UAAW7pB,MAwCjD,SAAS8qB,GAAUxqB,EAAON,EAASyqB,GAC/B,GAAKnqB,GACAN,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYmK,YAAaxL,EAAMmB,OACrC,GAAKE,EAAL,CAP2C,IAS9B/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAIxC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhB6V,KAAiB0W,sBAAsB,CACnCjoB,OAAQZ,EACRa,UAAWvE,iBAIJ2sB,uFAAf,SAAA3uB,EAA2B0E,EAASd,EAASyqB,GAA7C,IAAA3oB,EAAA1D,EAAA4sB,EAAArb,EAAA,OAAAsb,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSqE,EADT,CAAAvE,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESiD,EAFT,CAAAzD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIY+E,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGR4sB,EAAWlqB,EAAXkqB,OAZZ,CAAAzuB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,GAe6Bc,KAAgBkJ,KAAK,CAC1CjC,QAAS,gBACTwmB,WAjBR,WAeUrb,EAfVpT,EAAAoK,KAAA,CAAApK,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAsBIQ,KAAgBgH,aAAa,CACzBC,QAAS,yBACTmL,eAxBR,yBAAApT,EAAAU,SAAAb,6BA4BA,SAAS8uB,GAAUlqB,EAAOhB,EAASyqB,GAC/B,GAAKzpB,GACAhB,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASoE,EAAhBA,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAIxCzC,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhB6V,KAAiB0W,sBAAsB,CACnCjoB,OAAQZ,EACRa,UAAWvE,OAInB,SAAS+sB,GAAcloB,EAAWjD,EAASyqB,GACvC,GAAKxnB,GACAjD,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASqG,EAAhBjC,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAIxC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAU6H,oBAAoBrB,EAAS1D,EAAIxB,EAAKwB,MAE9Eb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAASgtB,GAActoB,EAAW9C,EAASyqB,GACvC,GAAK3nB,GACA9C,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASkG,EAAhBC,MACDnG,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAGpC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAU0H,oBAAoBlB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAAS+c,GAAUzY,EAAQC,GAA8B,IAAnB8nB,IAAmBrtB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GAC/C4C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACJA,GACAsqB,GAActqB,EAAWF,EAASyqB,GAGtC,MAEJ,IAAK,eAAgB,IACTrqB,EAAUH,EAAVG,MACJA,GACAwqB,GAAUxqB,EAAOJ,EAASyqB,GAG9B,MAEJ,IAAK,yBAA0B,IACnBnqB,EAAUL,EAAVK,MACJA,GAvThB,SAAuBA,EAAON,EAASyqB,GACnC,GAAKnqB,GACAN,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYmK,YAAaxL,EAAMmB,OACrC,GAAKE,EAAL,CAP+C,IASlC/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBACzB7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEhCyqB,GAAc7tB,EAAK0C,OAAOgR,oBACjChV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,IAIxC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhB6V,KAAiB0W,sBAAsB,CACnCjoB,OAAQZ,EACRa,UAAWvE,QAyRHitB,CAAc/qB,EAAON,EAASyqB,GAGlC,MAEJ,IAAK,iBAAkB,IACX/f,EAAYzK,EAAZyK,QACJA,GA5RhB,SAAqBA,EAAS1K,EAASyqB,GACnC,GAAK/f,GACA1K,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhBktB,aAAS5gB,EAAQ/C,SAiRL4jB,CAAY7gB,EAAS1K,GAGzB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SACJA,GACAqqB,GAAarqB,EAAUR,EAASyqB,GAGpC,MAEJ,IAAK,cAAe,IACR/pB,EAAST,EAATS,KACJA,GArPhB,SAAkBA,EAAMV,EAASyqB,GAC7B,GAAK/pB,GACAV,EAAL,CAFyC,IAIjC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAET8B,EAAcQ,EAAdR,UACR,GAAIA,EAAW,KACMtD,EAASsD,EAApBA,UACN,IAAKtD,EAAM,OAGX,GADAA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7B6tB,GAAc7tB,EAAK0B,MAAM6R,sBAEzB,YADA7U,IAAU0S,oBAAoBpR,EAAKwB,GAAI4B,GAEpC,GAAIyqB,GAAc7tB,EAAK0C,OAAOgR,oBAEjC,YADAhV,IAAUovB,iBAAiB9tB,EAAKwB,GAAI4B,GAIxC4I,YAAShM,EAAMoD,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBkJ,KAAK,CACjBjC,QAAS,qBACT1C,QAASA,EACTkY,WAAY5b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,KAsNHotB,CAAS9qB,EAAMV,EAASyqB,GAG5B,MAEJ,IAAK,eAAgB,IACTnqB,EAAUL,EAAVK,MACJA,GACAwqB,GAAUxqB,EAAON,EAASyqB,GAG9B,MAEJ,IAAK,iBAAkB,IACX3pB,EAAYb,EAAZa,QACJA,GACAiqB,GAAYjqB,EAASd,EAASyqB,GAGlC,MAEJ,IAAK,cAAe,IACR1pB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACAsqB,GAActqB,EAAWF,EAASyqB,GAGlCrqB,GACAwqB,GAAUxqB,EAAOJ,EAASyqB,GAG1BjqB,GACAqqB,GAAarqB,EAAUR,EAASyqB,GAGhC3pB,GACAiqB,GAAYjqB,EAASd,EAASyqB,GAG9BzpB,GACAkqB,GAAUlqB,EAAOhB,EAASyqB,GAG1BxpB,GACAkqB,GAAclqB,EAAYjB,EAASyqB,GAGnCvpB,GACAkqB,GAAclqB,EAAYlB,EAASyqB,GAGnCnqB,GACAwqB,GAAUxqB,EAAON,EAASyqB,GAIlC,MAEJ,IAAK,eAAgB,IACTzpB,EAAUf,EAAVe,MACJA,GACAkqB,GAAUlqB,EAAOhB,EAASyqB,GAG9B,MAEJ,IAAK,mBAAoB,IACbxpB,EAAehB,EAAfgB,WACJA,GACAkqB,GAAclqB,EAAYjB,EAASyqB,GAGvC,MAEJ,IAAK,mBAAoB,IACbvpB,EAAejB,EAAfiB,WACJA,GACAkqB,GAAclqB,EAAYlB,EAASyqB,KAQnD,SAASgB,GAAiBzrB,GACtB,OAAOA,GAAgC,mBAArBA,EAAQ,SAG9B,SAAS0rB,GAAkBhpB,EAAQC,GAC/B,IAAM3C,EAAUsJ,KAAa3K,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAF0C,IAIlCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,OAAKA,GAEiBA,EAAdiC,WAFe,KAK3B,IAAK,eAAgB,IACT/B,EAAUH,EAAVG,MACR,OAAKA,GAE6BA,EAA1B2B,uBAFW,KAKvB,IAAK,yBAA0B,IACnBzB,EAAUL,EAAVK,MACR,OAAKA,EAEEwL,YAAaxL,EAAMmB,OAFP,KAIvB,IAAK,kBAAmB,IACZjB,EAAaP,EAAbO,SACR,OAAKA,GAEiBA,EAAd2B,WAFc,KAK1B,IAAK,cAAe,IACRzB,EAAST,EAATS,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACnB,GAAIJ,EAAW,KACHiC,EAAcjC,EAAdiC,UACR,GAAIA,EACA,OAAOA,EAIf,OAAI7B,EACOwL,YAAaxL,EAAMmB,OAGvB,KAEX,IAAK,eAAgB,IACTnB,EAAUL,EAAVK,MACR,OAAKA,EAEEwL,YAAaxL,EAAMmB,OAFP,KAIvB,IAAK,iBAAkB,IACXX,EAAYb,EAAZa,QACR,OAAKA,GAEiBA,EAAdqB,WAFa,KAKzB,IAAK,cAAe,IACRpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIX,EACA,OAAOwL,YAAaxL,EAAMmB,OAE9B,GAAIvB,EAEA,OADsBA,EAAdiC,WACY,KAExB,GAAI/B,EAEA,OADkCA,EAA1B2B,uBACwB,KAEpC,GAAIvB,EAEA,OADsBA,EAAd2B,WACY,KAExB,GAAIrB,EAEA,OADsBA,EAAdqB,WACY,KAExB,GAAInB,EAEA,OADsBA,EAAdmB,WACY,KAExB,GAAIlB,EAEA,OADsBA,EAAdkB,WACY,KAI5B,MAEJ,IAAK,eAAgB,IACTnB,EAAUf,EAAVe,MACR,OAAKA,GAEiBA,EAAdmB,WAFW,KAKvB,IAAK,mBAAoB,IACblB,EAAehB,EAAfgB,WACR,OAAKA,GAEiBA,EAAdkB,WAFgB,KAOhC,OAAO,+hCC76CLwpB,EAAanwB,OAAOowB,OAAO,CAC7BC,KAAM,OACNC,OAAQ,SACRC,WAAY,eA0VV1wB,EAAQ,gBApVV,SAAA2wB,IAAc,IAAAzwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAswB,IACVzwB,EAAAC,OAAAywB,EAAA,EAAAzwB,CAAAE,KAAAF,OAAA0wB,EAAA,EAAA1wB,CAAAwwB,GAAAnwB,KAAAH,QAyBJ4B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5BvC9B,EA+BdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjC1C9B,EAoCdO,SApCc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoCH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,mCAAAR,EAAAU,SAAAb,MApCG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA2Cd4wB,MAAQ,WACJ5uB,IAAgBgH,aAAa,CACzBC,QAAS,4BA7CHjJ,EAiDd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,yBACDd,EAAK6wB,SAAW,KAChB7wB,EAAKyE,QAAU,KACfzE,EAAK8wB,KAAO,KACZ9wB,EAAK+wB,YAAc,KAEnB/wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEV3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAEdzE,EAAKyE,QAAUA,EAEfzE,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKgxB,YAAY7pB,EAAQC,GACzB,MAEJ,IAAK,0BAA2B,IACpB6pB,EAAWnwB,EAAXmwB,OAERjxB,EAAKixB,OAASA,GAEE,IAAIC,KACZ9vB,IAAI,SAAU6vB,GAEtBjxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBqwB,EAAWrwB,EAAXqwB,OAERnxB,EAAKmxB,OAASA,EAEdnxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BAA4B,IACrBswB,EAAYtwB,EAAZswB,QAERpxB,EAAKoxB,QAAUA,EAEfpxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,gCAAiC,IAC1BuwB,EAAiBvwB,EAAjBuwB,aAERrxB,EAAKqxB,aAAeA,GAEJ,IAAIH,KACZ9vB,IAAI,eAAgBiwB,GAE5BrxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKsxB,SAAU,EAEftxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,kCACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,yBACDd,EAAKsxB,SAAU,EAEftxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKuxB,iBAAgB,GACrB,MAEJ,IAAK,wBACDvxB,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKwxB,kBACL,MAEJ,IAAK,0BACDxxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,uBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAEvBA,EAAO2wB,UACHzxB,EAAKuxB,iBAAgB,IAKzBvxB,EAAK4wB,QAET,MAEJ,IAAK,wBAAyB,IAClBc,EAAqC5wB,EAArC4wB,SAAUC,EAA2B7wB,EAA3B6wB,YAAaC,EAAc9wB,EAAd8wB,UAE/B5xB,EAAK8wB,KAAO,CACRa,YAAaA,EACbD,SAAUA,EACVE,UAAWA,GAGf5xB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,iCACDd,EAAK+wB,YAAcjwB,EAAO+wB,OAE1B7xB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,8BAIL,IAAK,+BAIL,IAAK,+BAIL,IAAK,mCAIL,IAAK,gCAIL,IAAK,4BAIL,IAAK,gCACDd,EAAKuB,KAAKT,EAAO,SAAUA,KA3MzBd,EAmNdwxB,gBAAkB,WACd,GAAKxxB,EAAK6wB,UACL7wB,EAAKyE,QAAV,CAFoB,IAAAqtB,EAII9xB,EAAKyE,QAArB8B,EAJYurB,EAIZvrB,QAAS1D,EAJGivB,EAIHjvB,GACTgL,EAAa7N,EAAK6wB,SAAlBhjB,SACR,GAAKA,EAAL,CAEA,IAAMgF,EAAQhF,EAASkkB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExF,UAAYA,GAAWwF,EAAElJ,KAAOA,IACxE,IAAe,IAAXgQ,GAEAA,EAAQ,EAAIhF,EAAS1H,OAAQ,CAC7B,IAAM1B,EAAUoJ,EAASgF,EAAQ,GAEjC+M,YAAUnb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,OAjOjC7C,EAqOduxB,gBAAkB,SAAAS,GACd,IAAKhyB,EAAK6wB,SAAU,OAAO,EAC3B,IAAK7wB,EAAKyE,QAAS,OAAO,EAFQ,IAAAwtB,EAIVjyB,EAAKyE,QAArB8B,EAJ0B0rB,EAI1B1rB,QAAS1D,EAJiBovB,EAIjBpvB,GACTgL,EAAa7N,EAAK6wB,SAAlBhjB,SACR,IAAKA,EAAU,OAAO,EAEtB,IAAMgF,EAAQhF,EAASkkB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExF,UAAYA,GAAWwF,EAAElJ,KAAOA,IACxE,IAAe,IAAXgQ,EAAc,OAAO,EAEzB,IAAIqf,GAAa,EACjB,GAAKF,EAGD,OAAQhyB,EAAKmxB,QACT,KAAKf,EAAWE,KAER4B,EADAlyB,EAAKoxB,QACOe,YAAa,EAAGtkB,EAAS1H,QAEzB0M,EAAQ,EAExB,MAEJ,KAAKud,EAAWI,WACZ0B,EAAYrf,EACZ,MAEJ,KAAKud,EAAWG,OAER2B,EADAlyB,EAAKoxB,QACOe,YAAa,EAAGtkB,EAAS1H,QAEzB0M,EAAQ,GAAK,EAAIA,EAAQ,EAAIhF,EAAS1H,OAAS,OAnBvE+rB,EAAYrf,EAAQ,EA0BxB,GAAIqf,GAAa,EAAG,CAChB,IAAMztB,EAAUoJ,EAASqkB,GAGzB,OADAtS,YAAUnb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,IAChC,EAGX,OAAO,GAnRG7C,EAsRdgxB,YAtRc,eAAA5uB,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAsRA,SAAAyB,EAAO8E,EAAQC,GAAf,IAAAgrB,EAAAC,EAAAC,EAAAtmB,EAAA1B,EAAAioB,EAAA1kB,EAAA,OAAAnN,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAkxB,EAAAnyB,OAAAuyB,EAAA,EAAAvyB,QAAAuyB,EAAA,EAAAvyB,CAAAD,MACQqyB,EADRD,EACFvB,UADE,CAAAvuB,EAAApB,KAAA,aAIE2M,EAAawkB,EAAbxkB,YACiF,IAAzEA,EAASkkB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExF,UAAYY,GAAU4E,EAAElJ,KAAOuE,IALnE,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAUVQ,IAAgBgH,aAAa,CACzBC,QAAS,mCACT9B,OAAQA,EACRC,UAAWA,IAGT4E,EAASgjB,YAAwB7nB,EAAQC,GAhBrC,CAAA9E,EAAApB,KAAA,gBAkBNlB,EAAK6wB,SAAW,CACZ1pB,OAAQA,EACRC,UAAWA,EACXqrB,WAAY,EACZ5kB,SAAU,CAACE,IAAa3K,IAAI+D,EAAQC,KAGxCpF,IAAgBgH,aAAa,CACzBC,QAAS,4BACT4nB,SAAU7wB,EAAK6wB,WA3BbvuB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAiCWc,IAAgBkJ,KAAK,CACtCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO,GACPjhB,eAAgB,EAChBkhB,gBAAiBvrB,EACjBskB,QAAS,GACTkH,MAAO,IACP5mB,OAAQA,IAzCF,QAiCJ1B,EAjCIhI,EAAA8I,KA4CV2C,IAAaC,SAAS1D,EAAOuD,UAErB0kB,EAA0BjoB,EAA1BioB,YAAa1kB,EAAavD,EAAbuD,SAErB7N,EAAK6wB,SAAW,CACZ1pB,OAAQA,EACRC,UAAWA,EACXqrB,WAAYF,EACZ1kB,SAAUA,GAGd7L,IAAgBgH,aAAa,CACzBC,QAAS,4BACT4nB,SAAU7wB,EAAK6wB,WAzDT,yBAAAvuB,EAAAZ,SAAAW,MAtRA,gBAAAI,EAAAowB,GAAA,OAAAzwB,EAAAR,MAAAzB,KAAA0B,YAAA,GAGV,IAAMixB,EAAU,IAAI5B,IAChBG,EAAeyB,EAAQ1vB,IAAI,gBAC3B6tB,EAAS6B,EAAQ1vB,IAAI,UALf,OAMViuB,EACIA,GAAgB0B,OAAO1B,IAAiB,GAAK0B,OAAO1B,IAAiB,EAC/D0B,OAAO1B,GACP2B,IACV/B,EAASA,GAAU8B,OAAO9B,IAAW,GAAK8B,OAAO9B,IAAW,EAAI8B,OAAO9B,GAAUgC,IAEjFjzB,EAAKqxB,aAAeA,EACpBrxB,EAAKixB,OAASA,EACdjxB,EAAKmxB,OAASf,EAAWE,KACzBtwB,EAAKoxB,SAAU,EAEfpxB,EAAK6wB,SAAW,KAChB7wB,EAAKyE,QAAU,KACfzE,EAAK8wB,KAAO,KACZ9wB,EAAK+wB,YAAc,KAEnB/wB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAvBXvJ,6BADQqM,iBAsV1BnC,OAAOgpB,OAASpzB,EACDA,wCC9Wfqe,EAAAC,EAAAC,EAAA,sBAAA0R,IAAA5R,EAAAC,EAAAC,EAAA,sBAAA8U,IAAAhV,EAAAC,EAAAC,EAAA,sBAAA+U,IAAAjV,EAAAC,EAAAC,EAAA,sBAAAgV,IAAA,IAAAC,EAAAnV,EAAA,GASO,SAAS4R,EAAS3jB,GAAuB,IAAfmnB,EAAe1xB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAC5CG,IAAgBgH,aAAa,CACzBC,QAAS,uBACTmD,SACAmnB,UAID,SAASJ,EAAShsB,GAAyC,IAAjCC,EAAiCvF,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAArB,KAAM0xB,EAAe1xB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAC9DG,IAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,SACAC,YACAmsB,UAID,SAASH,EAAiBjsB,EAAQC,GACrCpF,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,SACAC,cAID,SAASisB,EAAclsB,EAAQC,EAAWiY,GAC7Crd,IAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,SACAC,YACAiY,gDCvCRlB,EAAAC,EAAAC,EAAA,sBAAAhE,IAAA8D,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA4C,EAAAC,EAAAC,EAAA,sBAAAhH,IAAA8G,EAAAC,EAAAC,EAAA,sBAAAmV,IAAArV,EAAAC,EAAAC,EAAA,sBAAAoV,IAAAtV,EAAAC,EAAAC,EAAA,sBAAAqV,IAAAvV,EAAAC,EAAAC,EAAA,sBAAA3K,IAAAyK,EAAAC,EAAAC,EAAA,sBAAAsV,IAAAxV,EAAAC,EAAAC,EAAA,sBAAA9G,IAAA,IAAAqc,EAAAzV,EAAA,KAAA0V,EAAA1V,EAAA2V,EAAAF,GAAAG,EAAA5V,EAAA,IAAA6V,EAAA7V,EAAA,IAAA8V,EAAA9V,EAAA,IAYA,SAAS9D,EAAc9V,GACnB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKwV,OAAQ,OAAO,KAEzB,GAAIxV,EAAK1B,KAAOqxB,IACZ,MAAO,wBAGX,GAAI3vB,EAAK2N,MAA+B,gBAAvB3N,EAAK2N,KAAK,SACvB,MAAO,MAGX,OAAQ3N,EAAKwV,OAAO,UAChB,IAAK,kBACD,MAAO,4BAEX,IAAK,sBACD,MAAO,2BAEX,IAAK,qBACD,MAAO,0BAEX,IAAK,oBAAqB,IAChBoa,EAAe5vB,EAAKwV,OAApBoa,WACN,IAAKA,EAAY,MAAO,UAExB,IAAMhb,EAAM,IAAIJ,KACVqb,EAAY,IAAIrb,KAAkB,IAAbob,GAC3B,GAAIC,EAAYjb,EACZ,MAAO,qBAGX,IAAIkb,EAAO,IAAItb,KAAKI,EAAMib,GAG1B,GAAIC,EAAKC,UAAY,IAAO,GACxB,MAAO,qBAIX,GAAID,EAAKC,UAAY,IAAO,KAAS,CACjC,IAAMC,EAAUxP,KAAKC,MAAMqP,EAAKC,UAAY,IAAO,IACnD,mBAAAjpB,OAAgC,IAAZkpB,EAAgB,WAAaA,EAAU,WAA3D,QAIJ,IAAMC,EAAQ,IAAIzb,KAElB,GADAyb,EAAMvb,SAAS,EAAG,EAAG,EAAG,GACpBmb,EAAYI,EAAO,CAEnB,GAAIH,EAAKC,UAAY,IAAO,MAAa,CACrC,IAAMG,EAAQ1P,KAAKC,MAAMqP,EAAKC,UAAY,IAAO,GAAK,IACtD,mBAAAjpB,OAA8B,IAAVopB,EAAc,SAAWA,EAAQ,SAArD,QAIJ,4BAAAppB,OAA6B6N,IAAWkb,EAAW,SAIvD,IAAIM,EAAY,IAAI3b,KAGpB,OAFA2b,EAAUlb,QAAQL,EAAII,UAAY,GAClCib,EAAMvb,SAAS,EAAG,EAAG,EAAG,GACpBmb,EAAYM,EACZ,0BAAArpB,OAAiC6N,IAAWkb,EAAW,SAG3D,aAAA/oB,OAAoB6N,IAAWkb,EAAW,eAE9C,IAAK,mBACD,MAAO,SAEX,IAAK,qBACD,MAAO,qBAIf,OAAO,KAGX,SAAS7Y,EAAahX,GAClB,IAAKA,EAAM,OAAO,EADM,IAGhB1B,EAAqB0B,EAArB1B,GAAIkX,EAAiBxV,EAAjBwV,OAAQ7H,EAAS3N,EAAT2N,KACpB,QAAK6H,MACA7H,IACDrP,IAAOqxB,MAEgB,qBAApBna,EAAO,UAAqD,gBAAlB7H,EAAK,YAG1D,SAASmF,EAAgB9S,GACrB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAK2N,KAAM,OAAO,KAEvB,OAAQ3N,EAAK2N,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAI3N,EAAKoS,YAAcpS,EAAKsb,UAAW,SAAAxU,OAAU9G,EAAKoS,WAAf,KAAAtL,OAA6B9G,EAAKsb,WACzE,GAAItb,EAAKoS,WAAY,OAAOpS,EAAKoS,WACjC,GAAIpS,EAAKsb,UAAW,OAAOtb,EAAKsb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAAStI,EAAiBnL,GACtB,IAAM7H,EAAO8K,IAAUjM,IAAIgJ,GAC3B,IAAK7H,EAAM,OAAO,KAClB,IAAKA,EAAK2N,KAAM,OAAO,KAEvB,OAAQ3N,EAAK2N,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAI3N,EAAKoS,WAAY,OAAOpS,EAAKoS,WACjC,GAAIpS,EAAKsb,UAAW,OAAOtb,EAAKsb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAAS2T,EAAcpnB,GACnB,IAAMsO,EAAWrL,IAAUsL,YAAYvO,GACvC,QAAIsO,GACOA,EAASia,WAMxB,SAASlB,EAAelvB,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAI2W,EAAQ7D,EAAgB9S,GACxB4W,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQhV,OAAS,EACrBgV,EAGJ5W,EAAKoS,WAAapS,EAAKoS,WAAW0E,OAAO,GAAK9W,EAAKsb,UAAYtb,EAAKsb,UAAUxE,OAAO,GAAK,GAGrG,SAASqY,EAAmBnvB,GACxB,IAAKA,EAAM,OAAO,EAClB,IAAKA,EAAKwV,OAAQ,OAAO,EACzB,GAA2B,gBAAvBxV,EAAK2N,KAAK,SAA4B,OAAO,EAEjD,OAAQ3N,EAAKwV,OAAO,UAChB,IAAK,kBACD,OAAO,EAEX,IAAK,sBACD,OAAO,GAEX,IAAK,qBACD,OAAO,IAEX,IAAK,oBACD,OAAOxV,EAAKwV,OAAOoa,WAEvB,IAAK,mBACD,OAAO5vB,EAAKwV,OAAO6a,QAEvB,IAAK,qBACD,OAAO,KAKnB,SAASlhB,EAAgBmhB,GACrB,IAAKA,EAAkB,OAAO,KADS,IAG/BhyB,EAAcgyB,EAAdhyB,GAAIqD,EAAU2uB,EAAV3uB,MACZ,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAM2uB,EAAiBzkB,YAAQnK,EAAO6uB,KAChCC,EAAe3kB,YAAQnK,EAAO+uB,KAEpC,MAAO,CACHhsB,QAAS,eACTpG,GAAIA,EACJyQ,MAAOwhB,EAAe/vB,MACtBwO,IAAKyhB,EAAajwB,OAI1B,SAAS4uB,EAAwBkB,GAC7B,IAAKA,EAAkB,OAAO,KADiB,IAGvCK,EAAeL,EAAfK,WACR,IAAKA,EAAY,OAAO,KAExB,IAAMpc,EAAO,IAAIC,KAAkB,IAAbmc,GACtB,OAAOhc,IAAWJ,EAAM,uMCpLtBqc,sBACF,SAAAA,EAAYxV,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAg1B,IACfn1B,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAk1B,GAAA70B,KAAAH,KAAMwf,KAmBVyV,mBAAqB,SAAAt0B,GAAU,IACnBsL,EAAWpM,EAAKukB,MAAhBnY,OAER,GADoBtL,EAAZsO,UACQhD,EAAhB,CAEA,IAAM7H,EAAO8K,IAAUjM,IAAIgJ,GACtB7H,GAELvE,EAAK6kB,SAAS,CACVwQ,OAAQ9Z,YAAahX,OA1BzB,IAAM6H,EAASoH,YAAcmM,EAAMxY,QAC7B5C,EAAO8K,IAAUjM,IAAIgJ,GAJZ,OAMfpM,EAAKukB,MAAQ,CACTnY,OAAQA,EACRipB,OAAQ9Z,YAAahX,IARVvE,mFAafqP,IAAUwS,GAAG,mBAAoB1hB,KAAKi1B,mEAItC/lB,IAAUlN,eAAe,mBAAoBhC,KAAKi1B,qDAgB7C,IAAA1V,EAC4Cvf,KAAKwf,MAA9CmB,EADHpB,EACGoB,QAASvU,EADZmT,EACYnT,KAAM+oB,EADlB5V,EACkB4V,WAAYpV,EAD9BR,EAC8BQ,UAEnC,OADmB/f,KAAKokB,MAAhB8Q,OAIJpV,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWf,EAAWY,EAAQgC,MAAO7V,MAAO,CAAE6C,MAAOvD,EAAMyD,OAAQzD,IAC/E0T,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWY,EAAQqC,KAAMlW,MAAO,CAAE0W,QAAS2R,IAC5CrV,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWY,EAAQyU,kBALhB,YArCHlV,IAAMC,YAuD/B6U,EAAW/T,aAAe,CACtB7U,KAAM,GACN+oB,WAAY,GAGDhU,UAhFA,SAAAC,GAAK,MAAK,CACrBuB,KAAM,CACF0S,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,UAC/EC,aAAc,MACdC,SAAU,UAEdzS,KAAM,CACFqS,WAAY,cACZ1lB,MAAO,OACPE,OAAQ,OACR6lB,UAAW,cAEfN,cAAe,CACXzlB,MAAO,OACPE,OAAQ,OACR2lB,aAAc,MACdH,WAAY,aAgELlU,CAAmB6T,8BCnE5BW,qNA2BFC,uBAAyB,SAAAj1B,GACrBd,EAAK4hB,iBAGToU,uBAAyB,SAAAl1B,GACFd,EAAK2f,MAAhBxY,SAEOrG,EAAOqG,QAClBnH,EAAK4hB,iBAIbqU,kBAAoB,SAAAn1B,GAAU,IAClBqG,EAAWnH,EAAK2f,MAAhBxY,OAGR,GAFoBrG,EAAZyF,UAEQY,EAAhB,CAEA,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxByQ,YAAgBjU,EAAOoE,QAHvBlE,EAAK4hB,kBAObsU,kBAAoB,SAAAp1B,GAAU,IAClBqG,EAAWnH,EAAK2f,MAAhBxY,OAER,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxByQ,YAAgBjU,EAAOoE,QAHvBlE,EAAK4hB,kBAObuU,aAAe,SAAAxqB,GAAS,IAAA+T,EACS1f,EAAK2f,MAA1BxY,EADYuY,EACZvY,OAAQivB,EADI1W,EACJ0W,SACXA,IAELzqB,EAAMqa,kBACNoQ,EAASjvB,0FAzES+d,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,QAIhC+d,EAAU3D,QAAUphB,KAAKwf,MAAM4B,kDAQnCrO,IAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtDh2B,IAAU8hB,GAAG,uBAAwB1hB,KAAK61B,wBAC1C9iB,IAAU2O,GAAG,kBAAmB1hB,KAAK81B,mBACrC/iB,IAAU2O,GAAG,kBAAmB1hB,KAAK+1B,kEAIrChjB,IAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClEh2B,IAAUoC,eAAe,uBAAwBhC,KAAK61B,wBACtD9iB,IAAU/Q,eAAe,kBAAmBhC,KAAK81B,mBACjD/iB,IAAU/Q,eAAe,kBAAmBhC,KAAK+1B,oDAqD5C,IAAArV,EACgE1gB,KAAKwf,MAAlEmB,EADHD,EACGC,QAAS3Z,EADZ0Z,EACY1Z,OAAQkvB,EADpBxV,EACoBwV,WAAYvb,EADhC+F,EACgC/F,kBAAmBsb,EADnDvV,EACmDuV,SAExD,GAAIrb,YAAS5T,IAAW2T,EAAmB,CACvC,IAAMoF,EAAYe,IAAW,aAAc,eAAgB,CAAEqV,QAASF,IACtE,OACInW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWA,EAAWE,QAASjgB,KAAKg2B,cACrClW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAACupB,EAAA51B,EAAD,QAMhB,IAAMuD,EAAOgP,IAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAfb,IAiBGa,EAAUb,EAAVa,MAEFoW,EAAUF,YAAe/W,GACzBoE,EAAOvD,GAASA,EAAMuO,MAAQvT,IAAUoI,QAAQpD,EAAMuO,MAAMzQ,IAAM,KAClEif,EAAM/hB,IAAU2I,WAAWJ,GAE3BkuB,EAAS,cAAAnrB,OAAkB0Z,KAAK0R,IAAItvB,GAAU,EAAK,GACnD+Y,EAAYe,IAAW,aAADhhB,OAAA0mB,EAAA,EAAA1mB,CAAA,GAAkBu2B,GAAaluB,GAAQ,CAAEguB,QAASF,IAE9E,OACInW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YAAYE,QAASjgB,KAAKg2B,cACpCrU,EACG7B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,KAE3DlC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWA,GACZD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,aAAa/E,IAGpCkb,GAAcra,YAAc7U,IACzB8Y,EAAAtf,EAAAqM,cAAC0pB,EAAD,CAAY5V,QAAS,CAAEgC,KAAMhC,EAAQ6V,WAAYxT,KAAMrC,EAAQ8V,YAAczvB,OAAQA,YAjH3EmZ,cAgI9BwV,EAAgB1U,aAAe,CAC3BtG,mBAAmB,EACnBub,YAAY,GAGD/U,QA/IA,CACXqV,WAAY,CACRpT,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACRsP,OAAQ,GAEZD,WAAY,IAwIkB,CAAElP,WAAW,GAAhCpG,CAAwCwU,8FC/FjDh2B,EAAQ,gBAxDV,SAAAya,IAAc,IAAAva,EAAA,OAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAoa,IACVva,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAAsa,GAAAja,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOwZ,YAEhBta,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MACJ,IAAK,2BACDd,EAAK82B,YAAYh2B,EAAO0Z,cAAe1Z,EAAOi2B,sBAE9C/2B,EAAKuB,KAAKT,EAAO,SAAUA,KApBzBd,EA2Bd8B,eAAiB,SAAAhB,KA3BHd,EA6Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA/BvC9B,EAkCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKg3B,cAAgB,IAAI3tB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAuCV6C,GACA,OAAO1C,KAAKgD,MAAMC,IAAIP,+BAGtByX,GACAna,KAAKgD,MAAM/B,IAAIkZ,EAAWzX,GAAIyX,uCAGtBzX,GACR,OAAO1C,KAAK62B,cAAc5zB,IAAIP,uCAGtBA,EAAI6X,GACZva,KAAK62B,cAAc51B,IAAIyB,EAAI6X,UArDLrO,iBA0D9BnC,OAAOoQ,WAAaxa,EACLA,4LC5Df,SAASm3B,EAAmBrwB,GACxB,QAAKA,GAEEme,KAAKkC,IAAIrgB,EAAUkJ,MAAOlJ,EAAUoJ,QAAUknB,IAGzD,SAASvI,EAAc9pB,GACnB,IAAKA,EAAO,OAAO,KADO,IAGlBypB,EAAgCzpB,EAAhCypB,UAAWpT,EAAqBrW,EAArBqW,MAAOic,EAActyB,EAAdsyB,UACpBC,EAAelc,EAAQA,EAAMmc,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,GAAAjsB,OACEisB,GAAoB,iBADtB,YAAAjsB,OAC4C+rB,GAAgB,iBAC7D9I,EAGV,SAASiJ,EAAYC,GACjB,OAAOA,EAAK3J,OAAO,SAACvZ,EAAUlT,GAAX,OAAmBkT,EAASjJ,OAAOjK,EAAIkT,WAAW,IAGzE,SAASmjB,EAA4BlyB,EAASiyB,EAAME,GAChD,IAAMptB,EAAS,GADiDqtB,EAyGpE,SAAqBpyB,EAASiyB,EAAME,GAChC,IAAME,EAAWJ,EAAKzF,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAO0C,EAAQkqB,SACtD,IAAkB,IAAdmI,EAAiB,MAAO,EAAE,GAAI,GAElC,IAAMC,EAAeL,EAAKI,GAAUtjB,SAASyd,UAAU,SAAAhmB,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO0C,EAAQA,QAAQ1C,KAC7F,IAAsB,IAAlBg1B,EAAqB,MAAO,EAAE,GAAI,GAGtC,IADA,IAAIC,EAAW,EACN7xB,EAAI,EAAGA,EAAI2xB,EAAU3xB,IAC1B6xB,GAAY/S,KAAKgT,KAAKP,EAAKvxB,GAAGqO,SAASnO,OAASuxB,GAGpD,MAAO,CAACI,EAAW/S,KAAKC,MAAM6S,EAAeH,GAAiBG,EAAeH,GAnHvDM,CAAYzyB,EAASiyB,EAAME,GAFeO,EAAAh4B,OAAAi4B,EAAA,EAAAj4B,CAAA03B,EAAA,GAEzDQ,EAFyDF,EAAA,GAEpDG,EAFoDH,EAAA,GAGhE,IAAa,IAATE,EAAY,MAAO,GACvB,IAAgB,IAAZC,EAAe,MAAO,GAE1B,IAAMC,EAAcF,EAAM,EACpBG,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBK,EAAcL,EAAM,EAEpBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EAExBO,EAAcL,EAAU,EACxBM,EAAiBP,EAAc,EACnC,IAAKM,EAAa,CACd,GAAIF,GAAc,EAAG,CACjB,IAAI5lB,EAAQgmB,EAAQP,EAASG,EAAYjB,EAAME,IAChC,IAAX7kB,IACA8lB,GAAc,EAEdC,GAA4B,KAD5B/lB,EAAQ+lB,GAAkB,EAAIC,EAAQR,EAAaI,EAAYjB,EAAME,MAG1D,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAIpB,IAAIA,EAAQ8lB,GAAe,EAAIE,EAAQP,EAASF,EAAQZ,EAAME,GAU9D,IATe,IAAX7kB,IACA8lB,GAAc,EAEdC,GAA4B,KAD5B/lB,EAAQ+lB,GAAkB,EAAIC,EAAQR,EAAaD,EAAQZ,EAAME,MAGtD,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAGZ6lB,EAAahB,EAAgB,CAC7B,IAAI7kB,EAAQ8lB,GAAe,EAAIE,EAAQP,EAASI,EAAYlB,EAAME,IACnD,IAAX7kB,IACAA,EAAQ+lB,GAAkB,EAAIC,EAAQR,EAAaK,EAAYlB,EAAME,KAE1D,IAAX7kB,GACAvI,EAAOX,KAAKkJ,IAKxB,GAAI4lB,GAAc,EAAG,CACjB,IAAM5lB,EAAQgmB,EAAQV,EAAKM,EAAYjB,EAAME,IAC9B,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAIpB,GAAI6lB,EAAahB,EAAgB,CAC7B,IAAM7kB,EAAQgmB,EAAQV,EAAKO,EAAYlB,EAAME,IAC9B,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAIpB,IAAIimB,EAAYtB,EAAK3J,OAAO,SAACiL,EAAW13B,GAAZ,OAAoB03B,EAAY/T,KAAKgT,KAAK32B,EAAIkT,SAASnO,OAASuxB,IAAiB,GACzGqB,EAAcR,GAAWO,EACzBE,EAAkBT,GAAWO,EACjC,IAAKC,EAAa,CACd,GAAIN,GAAc,EAAG,CACjB,IAAI5lB,EAAQgmB,EAAQN,EAASE,EAAYjB,EAAME,IAChC,IAAX7kB,IACAkmB,GAAc,EAEdC,GAA6B,KAD7BnmB,EAAQmmB,GAAmB,EAAIH,EAAQL,EAAaC,EAAYjB,EAAME,MAG3D,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAIpB,IAAIA,EAAQkmB,GAAe,EAAIF,EAAQN,EAASH,EAAQZ,EAAME,GAU9D,IATe,IAAX7kB,IACAkmB,GAAc,EAEdC,GAA6B,KAD7BnmB,EAAQmmB,GAAmB,EAAIH,EAAQL,EAAaJ,EAAQZ,EAAME,MAGvD,IAAX7kB,GACAvI,EAAOX,KAAKkJ,GAGZ6lB,EAAahB,EAAgB,CAC7B,IAAI7kB,EAAQkmB,GAAe,EAAIF,EAAQN,EAASG,EAAYlB,EAAME,IACnD,IAAX7kB,IACAA,EAAQmmB,GAAmB,EAAIH,EAAQL,EAAaE,EAAYlB,EAAME,KAE3D,IAAX7kB,GACAvI,EAAOX,KAAKkJ,IAKxB,IAAM1P,EAAQo0B,EAAYC,GAC1B,OAAOltB,EAAOwD,IAAI,SAAA/B,GAAC,OAAI5I,EAAM4I,KAkBjC,SAAS8sB,EAAQV,EAAKC,EAAQZ,EAAME,GAIhC,IAHA,IAAI7kB,GAAS,EACTimB,EAAY,EACZlB,GAAY,EACP3xB,EAAI,EAAGA,EAAIuxB,EAAKrxB,OAAQF,IAAK,CAGlC,IADA6yB,GADc/T,KAAKgT,KAAKP,EAAKvxB,GAAGqO,SAASnO,OAASuxB,IAElCS,EAAK,CACjBP,EAAW3xB,EACX,OAGR,IAAkB,IAAd2xB,EAAiB,OAAO/kB,EAI5B,IAFA,IAAIomB,EAASd,EACTe,EAAYd,EACPnyB,EAAI,EAAGA,EAAI2xB,EAAU3xB,IAAK,CAE/BgzB,GADclU,KAAKgT,KAAKP,EAAKvxB,GAAGqO,SAASnO,OAASuxB,GAMtD,IAFA7kB,EAAQ6kB,EAAiBuB,EAASC,IAErB1B,EAAKI,GAAUtjB,SAASnO,OAAQ,OAAQ,EAErD,IAAK,IAAIF,EAAI,EAAGA,EAAI2xB,EAAU3xB,IAC1B4M,GAAS2kB,EAAKvxB,GAAGqO,SAASnO,OAG9B,OAAO0M,4JCrKLsmB,UAAc,CAAEC,OAAQ,yBAExBC,cACF,SAAAA,EAAY1Z,GAAO,IAAA3f,EAAAC,OAAAq5B,EAAA,EAAAr5B,CAAAE,KAAAk5B,IACfr5B,EAAAC,OAAAywB,EAAA,EAAAzwB,CAAAE,KAAAF,OAAA0wB,EAAA,EAAA1wB,CAAAo5B,GAAA/4B,KAAAH,KAAMwf,KA8EVre,aAAe,SAAAR,GACX,IAAMy4B,EAAcv5B,EAAKukB,MAAMljB,KACzBm4B,EAAW14B,EAAOO,KAEpBk4B,GAAeA,EAAY12B,KAAO22B,EAAS32B,IAC3C7C,EAAK6kB,SAAS,CAAExjB,KAAMm4B,EAAUC,SAAUF,KApF/Bv5B,EAwFnB05B,cAAgB,SAACr4B,EAAMo4B,GACnB,IAAKz5B,EAAK2f,MAAMtS,SAAU,OAAO,EAEjC,IAAMssB,EAAYF,GAAYA,EAAS12B,OAAS02B,EAAS12B,MAAM6R,sBACzDglB,EAAWv4B,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAM6R,sBAElD,OAAO+kB,GAAaC,GA9FL55B,EAiGnB65B,YAAc,SAACx4B,EAAMo4B,GACjB,IAAKz5B,EAAK2f,MAAMma,OAAQ,OAAO,EAE/B,IAAMH,EAAYF,GAAYA,EAAS11B,QAAU01B,EAAS11B,OAAOgR,oBAC3D6kB,EAAWv4B,GAAQA,EAAK0C,QAAU1C,EAAK0C,OAAOgR,oBAEpD,OAAO4kB,GAAaC,GAvGL55B,EA0GnB+5B,kBAAoB,SAAC14B,EAAMo4B,GAAa,IAC5B12B,EAAkB1B,EAAlB0B,MAAOgB,EAAW1C,EAAX0C,OAEX41B,GAAY,EACZC,GAAW,EACXI,GAAc,EACdC,EAAe,EACf1tB,EAAO,EAqCX,OApCIvM,EAAK05B,cAAcr4B,EAAMo4B,IACzBE,EAAYF,GAAYA,EAAS12B,OAAS02B,EAAS12B,MAAM6R,sBACzDglB,EAAW72B,EAAM6R,sBACjBolB,EAAcj3B,EAAMG,yBACpB+2B,EAAel3B,EAAM8R,gBACrBtI,EAAOlL,EAAKkL,MAQLvM,EAAK65B,YAAYx4B,EAAMo4B,KAC9BE,EAAYF,GAAYA,EAAS11B,QAAU01B,EAAS11B,OAAOgR,oBAC3D6kB,EAAW71B,EAAOgR,oBAClBilB,EAAcj2B,EAAOE,uBACrBg2B,EAAel2B,EAAOiR,cACtBzI,EAAOlL,EAAKkL,MAkBT,CAACotB,EAAWC,EAAUI,EAAaC,EAAc1tB,IAnJxDvM,EAAKk6B,mBAAoB,EAHV,IAIP74B,EAASrB,EAAK2f,MAAdte,KAJO,OAKfrB,EAAKukB,MAAQ,CACT4V,cAAe94B,EACfo4B,SAAU,KACVp4B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GARrBrB,qFA2BGklB,EAAWC,GAAW,IAAAzF,EACSvf,KAAKwf,MAA9CtS,EADgCqS,EAChCrS,SAAUysB,EADsBpa,EACtBoa,OAAQ3W,EADczD,EACdyD,KAAMiX,EADQ1a,EACR0a,aAEhC,GAAIlV,EAAUkV,eAAiBA,EAC3B,OAAO,EAGX,GAAIlV,EAAU/B,OAASA,EACnB,OAAO,EAGX,GAAIhjB,KAAKu5B,cAAcvU,EAAU9jB,KAAM8jB,EAAUsU,YAAcpsB,EAC3D,OAAO,EAGX,GAAIlN,KAAK05B,YAAY1U,EAAU9jB,KAAM8jB,EAAUsU,YAAcK,EACzD,OAAO,EAGX,IAAMO,EAAYlV,EAAU9jB,KAAO8jB,EAAU9jB,KAAK0B,MAAQ,KACpDu3B,EAAanV,EAAU9jB,KAAO8jB,EAAU9jB,KAAKyB,QAAU,KACvDy3B,EAAYp6B,KAAKokB,MAAMkV,SAAWt5B,KAAKokB,MAAMkV,SAAS12B,MAAQ,KAC9Dy3B,EAAar6B,KAAKokB,MAAMkV,SAAWt5B,KAAKokB,MAAMkV,SAAS32B,QAAU,KACjE23B,EACFF,GAAaF,IAAcE,EAAUr3B,0BAA4Bm3B,EAAUn3B,yBACzEw3B,EAAgBJ,IAAeE,EAErC,OAAIrV,EAAU9jB,KAAKwB,KAAO1C,KAAKokB,MAAMljB,KAAKwB,KAAM43B,IAA0BC,KAItEvV,EAAU9jB,OAASlB,KAAKokB,MAAMljB,MAI9B8jB,EAAUsU,WAAat5B,KAAKokB,MAAMkV,sDAQtCt5B,KAAKw6B,OAAQ,EACb56B,IAAU8hB,GAAG,aAAc1hB,KAAKmB,6DAIhCnB,KAAKw6B,OAAQ,EACb56B,IAAUoC,eAAe,aAAchC,KAAKmB,+CA6EvC,IAAAsJ,EAAAzK,KAAA0gB,EAC4D1gB,KAAKwf,MAAhEya,EADDvZ,EACCuZ,aAAcQ,EADf/Z,EACe+Z,aAAc/D,EAD7BhW,EAC6BgW,OAAQ1T,EADrCtC,EACqCsC,KAAM0X,EAD3Cha,EAC2Cga,aAD3CvW,EAEsBnkB,KAAKokB,MAAxBljB,EAFHijB,EAEGjjB,KAAMo4B,EAFTnV,EAESmV,SACd,IAAKp4B,EAAM,OAAO,KAHb,IAAAy5B,EAK0D36B,KAAK45B,kBAAkB14B,EAAMo4B,GALvFsB,EAAA96B,OAAAi4B,EAAA,EAAAj4B,CAAA66B,EAAA,GAKEnB,EALFoB,EAAA,GAKanB,EALbmB,EAAA,GAKuBf,EALvBe,EAAA,GAKoCd,EALpCc,EAAA,GAKkDxuB,EALlDwuB,EAAA,GAODC,EAAapB,EACbqB,EAAW,EACXrB,IACAqB,EAAWhB,GAAgB1tB,EAAO,KAAQA,EAAO0tB,GAAgB1tB,EAAQ,IAAM,GAGpDotB,IAAcC,IAEzCz5B,KAAK+5B,mBAAoB,EAEzBe,EAAWjB,EAAc,IAAM,EAC/BgB,GAAa,EACbE,WAAW,WACPtwB,EAAKsvB,mBAAoB,EACpBtvB,EAAK+vB,OAGV/vB,EAAKia,SAAS,CAAE4U,SAAU,QAC3B0B,MAGP,IAAMluB,EAAQ,CACV4pB,OAAQA,EACRrB,WAAa4E,GAAwC,qBAAjBA,EAAsC,sBAAP,MAuBvE,OAnBI/4B,GACAA,EAAK0B,QACJ1B,EAAK0B,MAAMG,0BAA4B7B,EAAKyB,SAAWzB,EAAK0B,MAAMkB,0BAClE9D,KAAK+5B,oBACLN,EAiBGiB,EAEIO,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClCmuB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,sBAAsB2a,IAK1C,KAGPG,GAAc76B,KAAK+5B,kBAGfkB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClCmuB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,2BACXkb,EAAAz6B,EAAAqM,cAACquB,EAAA16B,EAAD,CACImgB,QAASqY,EACTnS,QAAQ,SACRpR,MAAOqlB,EACP1uB,KAAM,GACN8W,UAAW,KAGlBuX,GACGQ,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,sBACXkb,EAAAz6B,EAAAqM,cAACsuB,EAAA36B,EAAD,QAOhBwiB,EAGIiY,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClCmuB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,sBAAsBiD,IAK1C,wDA9OqBxD,EAAO4E,GAAO,IAClCljB,EAASse,EAATte,KACA84B,EAAkB5V,EAAlB4V,cAER,OAAI94B,GAAQ84B,GAAiB94B,EAAKwB,KAAOs3B,EAAct3B,GAC5C,CACHs3B,cAAe94B,EACfo4B,SAAU,KACVp4B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzBYgf,IAAMC,WA2QjC+Y,EAAajY,aAAe,CACxBwZ,cAAc,EACdvtB,UAAU,EACVysB,QAAQ,GAGGT,sKCjRTtM,sBACF,SAAAA,EAAYpN,GAAO,IAAA3f,EAAA,OAAAC,OAAAq5B,EAAA,EAAAr5B,CAAAE,KAAA4sB,IACf/sB,EAAAC,OAAAywB,EAAA,EAAAzwB,CAAAE,KAAAF,OAAA0wB,EAAA,EAAA1wB,CAAA8sB,GAAAzsB,KAAAH,KAAMwf,KAeV4b,0BAA4B,SAAAz6B,GAAU,IAC1ByE,EAAYvF,EAAK2f,MAAMpa,QAAvBA,QACA2C,EAAWpH,EAAXoH,OAEH3C,GAEDA,EAAQ1C,KAAOqF,GACflI,EAAK4hB,eAvBM5hB,EA2BnBw7B,mCAAqC,SAAA16B,GAAU,IACnC8F,EAAc5G,EAAK2f,MAAMpa,QAAzBqB,UACR,GAAKA,EAAL,CAF2C,IAInCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK4hB,gBA/BT5hB,EAAKy7B,IAAMpb,IAAMqb,YAHF17B,mFAOfD,IAAU8hB,GAAG,mCAAoC1hB,KAAKq7B,oCACtDz7B,IAAU8hB,GAAG,0BAA2B1hB,KAAKo7B,0EAI7Cx7B,IAAUoC,eAAe,mCAAoChC,KAAKq7B,oCAClEz7B,IAAUoC,eAAe,0BAA2BhC,KAAKo7B,4DAyBpD,IAAA7b,EACgFvf,KAAKwf,MAAlFO,EADHR,EACGQ,UAAWM,EADdd,EACcc,YAAamb,EAD3Bjc,EAC2Bic,KAAet1B,EAD1CqZ,EACiCna,QAAiB0H,EADlDyS,EACkDzS,MAAO2S,EADzDF,EACyDE,UAAWgc,EADpElc,EACoEkc,QACjEh1B,EAAsCP,EAAtCO,UAAWrB,EAA2Bc,EAA3Bd,QAASuK,EAAkBzJ,EAAlByJ,MAAOE,EAAW3J,EAAX2J,OAE7BoqB,EAAe1lB,YAAO9N,EAAYA,EAAU7B,MAAQ,MACpD+c,EAAMpN,YAAOnP,GACbs2B,EAAY5E,YAAmBrwB,GAE/Bk1B,EAAUnb,YAAW,CAAE7Q,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC7D,IAAKsb,EAAS,OAAO,KAErB,IAAMC,EAAY97B,OAAA+7B,EAAA,EAAA/7B,CAAA,CACd6P,MAAOgsB,EAAQhsB,MACfE,OAAQ8rB,EAAQ9rB,QACb/C,GASP,OACImuB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,UAAWf,GAAYjT,MAAO8uB,EAAc3b,QAASR,GAC3EkC,IAAQ8Z,EACLR,EAAAz6B,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKs7B,IAAKvb,UAAU,gBAAgBgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE9EiZ,EAAAz6B,EAAAqM,cAAA,OACIivB,IAAK97B,KAAKs7B,IACVvb,UAAWe,IAAW,gBAAiB,CAAEib,gBAAiBL,GAAaF,IACvEzZ,WAAW,EACXJ,IAAKsY,EACLjY,IAAI,aAxEN9B,IAAMC,YAyF5ByM,EAAQ3L,aAAe,CACnBja,OAAQ,EACRC,UAAW,EACXwY,UAAW,aACX+b,MAAM,EACNnb,YAAa2b,KAGFpP,iGC9CTjtB,EAAQ,gBAzDV,SAAA+Z,IAAc,IAAA7Z,EAAA,OAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA0Z,IACV7Z,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAA4Z,GAAAvZ,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOs7B,aAEhBp8B,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BACDd,EAAK82B,YAAYh2B,EAAOgZ,eAAgBhZ,EAAOu7B,uBAE/Cr8B,EAAKuB,KAAKT,EAAO,SAAUA,KArBzBd,EA4Bd8B,eAAiB,SAAAhB,KA5BHd,EA8Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAhCvC9B,EAmCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAlCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKg3B,cAAgB,IAAI3tB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAwCVs8B,GACA,OAAOn8B,KAAKgD,MAAMC,IAAIk5B,+BAGtBC,GACAp8B,KAAKgD,MAAM/B,IAAIm7B,EAAM15B,GAAI05B,uCAGjB15B,GACR,OAAO1C,KAAK62B,cAAc5zB,IAAIP,uCAGtBA,EAAI6X,GACZva,KAAK62B,cAAc51B,IAAIyB,EAAI6X,UAtDLrO,iBA2D9BnC,OAAOsyB,WAAa18B,EACLA,uKCrDTqgB,qNAuBFsc,uBAAyB,SAAA37B,GACFd,EAAK2f,MAAhBvT,SAEOtL,EAAOsL,QAClBpM,EAAK4hB,iBAIboU,uBAAyB,SAAAl1B,GAAU,IACvBsL,EAAWpM,EAAK2f,MAAhBvT,OAEFlI,EAAOgP,IAAU9P,IAAItC,EAAOqG,QAClC,GAAKjD,GACAA,EAAKgO,KAEV,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACGhO,EAAKgO,KAAK9C,UAAYhD,GAEtBpM,EAAK4hB,kBAMrBqU,kBAAoB,SAAAn1B,GAAU,IAClBsL,EAAWpM,EAAK2f,MAAhBvT,OAEFlI,EAAOgP,IAAU9P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAKgO,KAEV,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAIhO,EAAKgO,KAAK9C,UAAYhD,EACtB,GAAKtL,EAAOiE,MAGL,CACH,IAAMjF,EAAQC,IAAUuD,WACxByQ,YAAgBjU,EAAOoE,QAHvBlE,EAAK4hB,kBAUzBsU,kBAAoB,SAAAp1B,GAAU,IAClBsL,EAAWpM,EAAK2f,MAAhBvT,OAEFlI,EAAOgP,IAAU9P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAKgO,KAEV,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACGhO,EAAKgO,KAAK9C,UAAYhD,GAAWlI,EAAKa,OAEtC/E,EAAK4hB,kBAMrBuU,aAAe,SAAAxqB,GAAS,IAAA+T,EACS1f,EAAK2f,MAA1BvT,EADYsT,EACZtT,OAAQgqB,EADI1W,EACJ0W,SACXA,IAELzqB,EAAMqa,kBACNoQ,EAAShqB,0FA1GS8Y,EAAWC,GAC7B,OAAID,EAAU9Y,SAAWjM,KAAKwf,MAAMvT,mDAQpCrM,IAAU8hB,GAAG,uBAAwB1hB,KAAKs8B,wBAC1C18B,IAAU8hB,GAAG,uBAAwB1hB,KAAK61B,wBAC1C9iB,IAAU2O,GAAG,kBAAmB1hB,KAAK81B,mBACrC/iB,IAAU2O,GAAG,kBAAmB1hB,KAAK+1B,kEAIrCn2B,IAAUoC,eAAe,uBAAwBhC,KAAKs8B,wBACtD18B,IAAUoC,eAAe,uBAAwBhC,KAAK61B,wBACtD9iB,IAAU/Q,eAAe,kBAAmBhC,KAAK81B,mBACjD/iB,IAAU/Q,eAAe,kBAAmBhC,KAAK+1B,oDA0F5C,IAAArV,EACwB1gB,KAAKwf,MAA1BvT,EADHyU,EACGzU,OAAQgqB,EADXvV,EACWuV,SACV7xB,EAASpE,KAAKwf,MAAdpb,KACN,IAAK6H,IAAW7H,EAAM,OAAO,KAG7B,KADAA,EAAO8K,IAAUjM,IAAIgJ,IAAW7H,GACrB,OAAO,KANb,IAQGsP,EAAkBtP,EAAlBsP,cAEFsH,EAAUsY,YAAelvB,GACzB+D,EAAOuL,GAAiBA,EAAcP,MAAQvT,IAAUoI,QAAQ0L,EAAcP,MAAMzQ,IAAM,KAC1Fif,EAAM/hB,IAAU2I,WAAWJ,GAC3BkuB,EAAS,cAAAnrB,OAAkB0Z,KAAK0R,IAAIrqB,GAAU,EAAK,GACnD8T,EAAYe,IAAW,aAADhhB,OAAAy8B,EAAA,EAAAz8B,CAAA,GAAkBu2B,GAAaluB,GAAQ,CAAEguB,QAASF,IAE9E,OAAOtU,EACHsZ,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,GAAG/B,QAASjgB,KAAKg2B,eAE5EiF,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAWA,EAAWE,QAASjgB,KAAKg2B,cACrCiF,EAAAz6B,EAAAqM,cAAA,QAAMkT,UAAU,aAAa/E,WAlIfmF,cA8IfH,4HCjJTwc,qNAuBF5G,uBAAyB,SAAAj1B,GACrBd,EAAK4hB,iBAGTsU,kBAAoB,SAAAp1B,GAAU,IAClBqG,EAAWnH,EAAK2f,MAAhBxY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAK4hB,oGA/BasD,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,QAIhC+d,EAAUvN,IAAMxX,KAAKwf,MAAMhI,8CAQ/BzE,IAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtD7iB,IAAU2O,GAAG,kBAAmB1hB,KAAK+1B,kEAIrChjB,IAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClE7iB,IAAU/Q,eAAe,kBAAmBhC,KAAK+1B,oDAe5C,IAAAxW,EACoCvf,KAAKwf,MAAtChI,EADH+H,EACG/H,EAAGxQ,EADNuY,EACMvY,OAAQ2T,EADd4E,EACc5E,kBAEbI,EAAQmB,YAAalV,EAAQ2T,EAAmBnD,GAEtD,OAAOilB,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBhF,UAxCbmF,IAAMC,YAiDvCqc,EAAmBvb,aAAe,CAC9BtG,mBAAmB,GAGR6M,kBAAkBgV,uFCwB3B78B,EAAQ,gBAjFV,SAAA+8B,IAAc,IAAA78B,EAAA,OAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA08B,IACV78B,EAAAC,OAAA68B,EAAA,EAAA78B,CAAAE,KAAAF,OAAA88B,EAAA,EAAA98B,CAAA48B,GAAAv8B,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,6BAA8B,IACvBk8B,EAAoBl8B,EAApBk8B,gBACR,GAAIh9B,EAAKoU,WAAY,KAAA6oB,EACYj9B,EAAKoU,WAA1BvR,EADSo6B,EACTp6B,GAAIq6B,EADKD,EACLC,aACRA,IAAiBF,EAAgBlxB,KAAK,SAAAC,GAAC,OAAIA,IAAMlJ,MACjD7C,EAAKoU,WAAanU,OAAOk9B,OAAO,GAAIn9B,EAAKoU,WAAY,CAAE8oB,cAAeA,KAI9El9B,EAAKuB,KAAK,6BAA8BT,KArBtCd,EA6Bd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,0BACDd,EAAKuB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1Bs8B,EAASt8B,EAATs8B,KAERp9B,EAAKo9B,KAAOA,EAEZp9B,EAAKuB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3Bs8B,EAASt8B,EAATs8B,KAEJp9B,EAAKo9B,MAAQp9B,EAAKo9B,KAAKxL,YAAcwL,EAAKxL,YAC1C5xB,EAAKo9B,KAAOn9B,OAAOk9B,OAAO,GAAIn9B,EAAKo9B,KAAM,CAAEC,cAAeD,EAAK9oB,YAGnEtU,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBsT,EAAetT,EAAfsT,WAERpU,EAAKoU,WAAaA,EAElBpU,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,KA9D1Cd,EAsEd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAxEvC9B,EA2EdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBA1EpD9B,EAAKoU,WAAa,KAClBpU,EAAKo9B,KAAO,KAEZp9B,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,6BADSqM,iBAmF3BnC,OAAO3E,QAAUzF,EACFA,+KC3ET8gB,sBACF,SAAAA,EAAYjB,GAAO,IAAA3f,EAAAC,OAAAq5B,EAAA,EAAAr5B,CAAAE,KAAAygB,IACf5gB,EAAAC,OAAAywB,EAAA,EAAAzwB,CAAAE,KAAAF,OAAA0wB,EAAA,EAAA1wB,CAAA2gB,GAAAtgB,KAAAH,KAAMwf,KAoBV2d,wBAA0B,SAAAx8B,GAAU,IACxBsF,EAAcpG,EAAKukB,MAAnBne,UACA8B,EAAWpH,EAAXoH,OAEH9B,GAEDA,EAAUrB,MAAMlC,KAAOqF,GACvBlI,EAAK4hB,eA5BM,IAGP7c,EAA+B4a,EAA/B5a,MAAOwH,EAAwBoT,EAAxBpT,KAAMgxB,EAAkB5d,EAAlB4d,cACfn3B,EAAYiK,YAAQtL,EAAMmB,MAAOqG,GACjC3F,EAAYyJ,YAAQtL,EAAMmB,MAAOq3B,GALxB,OAOfv9B,EAAKukB,MAAQ,CACTne,UAAWA,EACXQ,UAAWA,GATA5G,mFAcfD,IAAU8hB,GAAG,wBAAyB1hB,KAAKm9B,wEAI3Cv9B,IAAUoC,eAAe,wBAAyBhC,KAAKm9B,0DAclD,IAAA5d,EACmDvf,KAAKwf,MAArDa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UAAW4d,EAD3B9d,EAC2B8d,aAAcvwB,EADzCyS,EACyCzS,MADzCqX,EAE4BnkB,KAAKokB,MAA9B3d,EAFH0d,EAEG1d,UAAWR,EAFdke,EAEcle,UAEnB,IAAKA,EAAW,OAAO,KAEvB,IAAM0b,EAAMpN,YAAOtO,EAAUrB,OACvBq1B,EAAe1lB,YAAO9N,EAAYA,EAAU7B,MAAQ,MACpD82B,EAAY5E,YAAmBrwB,GAE/B8Z,EAAeC,YAAWva,EAAWoa,GAC3C,IAAKE,EAAc,OAAO,KAE1B,IAAM+c,EAAUx9B,OAAA+7B,EAAA,EAAA/7B,CAAA,CACZ6P,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAClB/C,GAGP,OACImuB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,QAAQjT,MAAOwwB,EAAYrd,QAASR,GAC9CkC,EACGsZ,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,cAAcgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE7DiZ,EAAAz6B,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,cAAe,CAAEib,gBAAiBL,IACxD3Z,WAAW,EACXJ,IAAKsY,EACLjY,IAAI,KAGXqb,GAAgBpC,EAAAz6B,EAAAqM,cAAC0wB,EAAA,EAAD,CAAcr8B,KAAM+E,EAAUrB,MAAOsI,UAAQ,EAACysB,QAAM,EAACc,cAAY,YAhE9Eva,IAAMC,YAmF1BM,EAAMQ,aAAe,CACjB7U,KAAMgG,IACNgrB,cAAeI,IACfnd,YAAaa,IACbmc,cAAc,GAGH5c,sKC1FTgd,qNACFzH,aAAe,SAAAxqB,GAAS,IAAA+T,EAC2B1f,EAAK2f,MAA5CxY,EADYuY,EACZvY,OAAQiF,EADIsT,EACJtT,OAAQ2jB,EADJrQ,EACIqQ,SAAUoD,EADdzT,EACcyT,SAElC,OAAIpD,GAAY3jB,GACZT,EAAMqa,uBAEN6X,YAAgBzxB,GAAQ,IAIxB+mB,GAAYhsB,GACZwE,EAAMqa,uBAEN+F,YAAgB5kB,EAAQ,MAAM,SAHlC,2EAQK,IAAA0Z,EAC6C1gB,KAAKwf,MAA/ChI,EADHkJ,EACGlJ,EAAGxQ,EADN0Z,EACM1Z,OAAQiF,EADdyU,EACczU,OAAQ2jB,EADtBlP,EACsBkP,SAAUoD,EADhCtS,EACgCsS,SAE/B5uB,EAAO8K,IAAUjM,IAAIgJ,GAC3B,GAAI7H,EAAM,CACN,IAAMiyB,EAAYxa,YAAc7U,GAC1B,uBADY,cAAAkE,OAEG0Z,KAAK0R,IAAIrqB,GAAU,EAAK,GACvC8T,EAAYe,IAAW,CAACuV,GAAY,kBAEpC1W,EAAWzI,YAAgB9S,GAEjC,OAAOwrB,EACH6M,EAAAj8B,EAAAqM,cAAA,KAAGkT,UAAWA,EAAWE,QAASjgB,KAAKg2B,cAClCrW,GAGL8c,EAAAj8B,EAAAqM,cAAA4vB,EAAAj8B,EAAA+kB,SAAA,KAAG5F,GAKX,GADa5M,IAAU9P,IAAI+D,GACjB,CACN,IAAM+Y,EAAYe,IAAW,uBAAwB,kBAE/CnB,EAAWzD,YAAalV,GAAQ,EAAOwQ,GAE7C,OAAOwb,EACHyJ,EAAAj8B,EAAAqM,cAAA,KAAGkT,UAAWA,EAAWE,QAASjgB,KAAKg2B,cAClCrW,GAGL8c,EAAAj8B,EAAAqM,cAAA4vB,EAAAj8B,EAAA+kB,SAAA,KAAG5F,GAIX,OAAO,YAvDaO,IAAMC,YAkElCsd,EAAcxc,aAAe,CACzB2O,UAAU,EACVoD,UAAU,GAGCxL,kBAAkBiW,gFCGlBE,EADA,eAlFX,SAAAC,IAAc99B,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA49B,GACV59B,KAAK69B,KAAO,IAAI30B,IAAI,CAChB,CAAC,MAAO,iiBACR,CAAC,MAAO,2DAIZy0B,GACA,OAAO39B,KAAK69B,KAAK56B,IAAI06B,+BAGrBA,EAAUG,GACV99B,KAAK69B,KAAK58B,IAAI08B,EAAUG,kCAGrBH,GACH,MAAiB,QAAbA,EACO,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GACpD,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GAC/I,EAEM,QAAbA,EACO,EAGJ,oCAGDK,EAAaL,GACnB,IAAMM,GAAUD,EAAYpZ,KAAKsZ,IAAI,GAAMl+B,KAAKm+B,OAAOR,KAAYtxB,QAAQ,GAC3E,SAAAnB,OAAU+yB,EAAV,KAAA/yB,OAAoBlL,KAAKiD,IAAI06B,0HCxErC,IAAIS,EAAa,IAAIl1B,IAwBrB,SAAS+N,EAAiB3S,GACtB,QAAKA,MACAA,EAAQC,UAEN65B,EAAWt7B,IAAIwB,EAAQC,QAAQ,WAAaD,EAAQupB,IAAM,IAwFrE,SAASC,EAAyBxpB,GAA2B,IAAlBsrB,EAAkBluB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GACzD,IAAK4C,EAAS,OAAO,KACrB,IAAKA,EAAQC,QAAS,OAAO,KAE7B,IAAM85B,EAAa/5B,EAAQgN,iBAAmBpC,IAAUiN,UAClDpY,EAAOgP,IAAU9P,IAAIqB,EAAQ8B,SAC7Bk4B,EAAmC,uBAAvBv6B,EAAKgO,KAAK,UAAqChO,EAAKgO,KAAKuI,WAEnEuT,EAAiCvpB,EAAjCupB,IAAKvc,EAA4BhN,EAA5BgN,eAAgB/M,EAAYD,EAAZC,QAC7B,GAAIspB,EAAM,EACN,OAAQtpB,EAAQ,UACZ,IAAK,eACD,OAAI85B,EACO,mEAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,iEAIb,IAAK,eACD,OAAIyO,EACO,mEAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,iEAIb,QACI,OAAIyO,EACO,qEAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,mEAOrB,OAAQrrB,EAAQ,UACZ,IAAK,8BAA+B,IACxBwW,EAAUhI,IAAU9P,IAAIqB,EAAQ8B,SAAhC2U,MAER,OAAIsjB,EACA,yBAAAnzB,OAA6B6P,EAA7B,QAIA+E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,sBAAA1kB,OAEwB6P,EAFxB,SAMR,IAAK,wBACD,IAAMuB,EAAU/X,EAAQg6B,gBACnB5wB,IAAI,SAAA/B,GAAC,OAAIkU,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAehmB,IAAK7L,EAAGK,OAAQL,EAAGgkB,SAAUA,MACrDlC,OAAO,SAACC,EAAaC,EAASlb,EAAO8rB,GAClC,IAAMC,EAAY/rB,IAAU8rB,EAAMx4B,OAAS,EAAI,QAAU,KACzD,OAAuB,OAAhB2nB,EAAuB,CAACC,GAAxB,GAAA1iB,OAAApL,OAAAypB,EAAA,EAAAzpB,CAAuC6tB,GAAvC,CAAoD8Q,EAAW7Q,KACvE,MAEP,OAAIyQ,EAC0C,IAAnC95B,EAAQg6B,gBAAgBv4B,QAAgBzB,EAAQg6B,gBAAgB,KAAOrvB,IAAUiN,UACpF,uBAEA2D,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACK,aACAjJ,GAK6B,IAAnC/X,EAAQg6B,gBAAgBv4B,QAAgBzB,EAAQg6B,gBAAgB,KAAOj6B,EAAQgN,eAClFwO,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,qBAGL9P,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,UACAtT,GAIb,IAAK,yBACD,OAAIgiB,EACO,wBAGPD,EACO,0BAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,wBAMR,IAAK,yBAA0B,IACnB7U,EAAUxW,EAAVwW,MAER,OAAIujB,EACA,mCAAApzB,OAAuC6P,EAAvC,QAGAsjB,EACA,iCAAAnzB,OAAqC6P,EAArC,QAIA+E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,8BAAA1kB,OAEgC6P,EAFhC,SAMR,IAAK,0BACD,OAAIsjB,EACO95B,EAAQ0K,UAAYC,IAAUiN,UACjC,qBAEA2D,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACK,eACDzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQ1H,EAAQ0K,QAAS2gB,SAAUA,KAKvDrrB,EAAQ0K,UAAYqC,EACvBwO,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,mBAGL9P,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,YACD9P,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQ1H,EAAQ0K,QAAS2gB,SAAUA,KAI9D,IAAK,yBACD,OAAI0O,EACO,wBAGPD,EACO,0BAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,wBAIb,IAAK,wBACD,OAAIyO,EACO,uCAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,qCAIb,IAAK,oBAAqB,IACd/B,EAAQtpB,EAARspB,IACF6Q,EA/QlB,SAAsB7Q,GAClB,GAAIA,EAAM,GAAI,CACV,IAAM8Q,EAAkB,IAAR9Q,EAAY,SAAW,UACvC,SAAA3iB,OAAU2iB,EAAV,KAAA3iB,OAAiByzB,GAErB,GAAI9Q,EAAM,KAAS,CACf,IAAMuG,EAAmC,IAAzBxP,KAAKC,MAAMgJ,EAAM,IAAY,SAAW,UACxD,SAAA3iB,OAAU2iB,EAAV,KAAA3iB,OAAiBkpB,GAErB,GAAIvG,EAAM,MAAc,CACpB,IAAMyG,EAAsC,IAA9B1P,KAAKC,MAAMgJ,EAAM,GAAK,IAAY,OAAS,QACzD,SAAA3iB,OAAU2iB,EAAV,KAAA3iB,OAAiBopB,GAErB,GAAIzG,EAAM,OAAkB,CACxB,IAAM+Q,EAA0C,IAAnCha,KAAKC,MAAMgJ,EAAM,GAAK,GAAK,IAAY,MAAQ,OAC5D,SAAA3iB,OAAU2iB,EAAV,KAAA3iB,OAAiB0zB,GAErB,OAAY,SAAR/Q,EACO,SAGX,GAAA3iB,OAAU2iB,EAAV,YA0P0BgR,CAAahR,GAE/B,OAAIA,GAAO,EACHwQ,EACO,uCAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,qCAKTyO,EACA,sCAAAnzB,OAA6CwzB,GAI7C5e,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,mCAAA1kB,OAEwCwzB,IAIhD,IAAK,yBACD,MAAO,yCAEX,IAAK,uBACD,MAAO,iCAEX,IAAK,2BACD,OACI5e,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,yBAIb,IAAK,6BACD,OAAOrrB,EAAQsZ,KAEnB,IAAK,mBACD,IAAMihB,EAAclxB,IAAa3K,IAAIqB,EAAQ8B,QAAS7B,EAAQw6B,iBAC9D,GACID,GACAA,EAAYv6B,SACqB,gBAAjCu6B,EAAYv6B,QAAQ,UACpBu6B,EAAYv6B,QAAQS,KACtB,KACUA,EAAS85B,EAAYv6B,QAArBS,KAER,OAAIq5B,EACA,cAAAnzB,OAAqB3G,EAAQy6B,MAA7B,YAAA9zB,OAA0ClG,EAAK+V,MAA/C,QAIA+E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQ6yB,EAAYxtB,eAAgBse,SAAUA,IADjE,WAAA1kB,OAEgB3G,EAAQy6B,MAFxB,YAAA9zB,OAEqClG,EAAK+V,MAF1C,SAOR,OAAIsjB,EACA,cAAAnzB,OAAqB3G,EAAQy6B,OAI7Blf,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,WAAA1kB,OAEgB3G,EAAQy6B,QAIhC,IAAK,8BACD,MAAO,kCAEX,IAAK,0BACD,IAAMj7B,EAAOgP,IAAU9P,IAAIqB,EAAQ8B,SAE7B64B,EAAuB16B,EAAQ26B,MAChCvxB,IAAI,SAAA/B,GAAC,OA1UtB,SAAsCmG,GAClC,OAAQA,EAAK,UACT,IAAK,6BACD,MAAO,UAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,kCACD,MAAO,QAEX,IAAK,kCACD,MAAO,gBAEX,IAAK,sCACD,MAAO,oBAEX,IAAK,8BACD,MAAO,WAEX,IAAK,0CACD,MAAO,wBAEX,IAAK,qCACD,MAAO,mBAEX,IAAK,iCACD,MAAO,eAEX,IAAK,qCACD,MAAO,oBAEX,IAAK,2CACD,MAAO,yBAEX,IAAK,iCACD,MAAO,eAIf,MAAO,GA+ReotB,CAA6BvzB,KACtC8hB,OAAO,SAACC,EAAaC,GAClB,OAAuB,OAAhBD,EAAuB,CAACC,GAAxB,GAAA1iB,OAAApL,OAAAypB,EAAA,EAAAzpB,CAAuC6tB,GAAvC,CAAoD,KAAMC,KAClE,MAEP,OACI9N,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQlI,EAAKgO,KAAK9C,QAAS2gB,SAAUA,IACnD,sCACAqP,GAIb,IAAK,2BACD,IAAMl7B,EAAOgP,IAAU9P,IAAIqB,EAAQ8B,SAE7Bg5B,EAAiBxxB,IAAa3K,IAAIqB,EAAQ8B,QAAS7B,EAAQ86B,oBACjE,GACID,GACAA,EAAe76B,SACqB,mBAApC66B,EAAe76B,QAAQ,UACvB66B,EAAe76B,QAAQ+6B,QACzB,KACUA,EAAYF,EAAe76B,QAA3B+6B,QAER,OACIxf,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,+CAAAra,OAC+C0yB,EAAS2B,UAChDh7B,EAAQi7B,aACRj7B,EAAQo5B,UAHhB,QAKI7d,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQlI,EAAKgO,KAAK9C,QAAS2gB,SAAUA,IALxD,QAAA1kB,OAMao0B,EAAQvkB,QAK7B,OACI+E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,+CAAAra,OAC+C0yB,EAAS2B,UAChDh7B,EAAQi7B,aACRj7B,EAAQo5B,UAHhB,QAKI7d,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQlI,EAAKgO,KAAK9C,QAAS2gB,SAAUA,KAIhE,IAAK,8BACD,MAAO,qBAEX,IAAK,oBACD,IAAM6P,EA/UlB,SAA0Bn7B,EAASsrB,GAC/B,IAAKtrB,EAAS,OAAO,KADoB,IAGjC8B,EAA4B9B,EAA5B8B,QAASkL,EAAmBhN,EAAnBgN,eAEjB,GAAuB,IAAnBA,EACA,OAAOwO,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAG5D,IAAM7rB,EAAOgP,IAAU9P,IAAImD,GAC3B,OAAKrC,EAEEA,EAAKgX,MAFM,KAqUK2kB,CAAiBp7B,EAASsrB,GACnC+P,EAAgB/xB,IAAa3K,IAAIqB,EAAQ8B,QAAS7B,EAAQ+Z,YAChE,IAAKqhB,IAAkBA,EAAcp7B,QACjC,OACIub,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKka,EACA,qBAKb,IAAIG,EAAgB,oBACpB,GAAI3oB,EAAiB0oB,GACjBC,EAAgB,iCAEhB,OAAQD,EAAcp7B,QAAQ,UAC1B,IAAK,mBACDq7B,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,kBACDA,EAAgB,iBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,qBAChB,MAEJ,IAAK,kBACDA,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,cACD,IACM/hB,EAAO8hB,EAAcp7B,QAAQsZ,KAAKA,KAEpC+hB,EADA/hB,EAAK7X,QAFS,GAGD,eAAAkF,OAAe2S,EAAf,QAEA,eAAA3S,OAAe2S,EAAKoN,UAAU,EAL7B,IAKD,WAGjB,MAEJ,IAAK,qBACD2U,EAAgB,8BAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAM5B,OACI9f,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKka,EACAG,GAIb,IAAK,yBACD,OAAIvB,EACO,yBAIPve,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IAChD,uBAIb,IAAK,8BAA+B,IACxB7U,EAAUxW,EAAVwW,MAER,OAAIujB,EACO,kBAGPD,EACA,yBAAAnzB,OAA6B6P,EAA7B,QAIA+E,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4wB,EAAA,EAAD,CAAexxB,OAAQqF,EAAgBse,SAAUA,IADrD,sBAAA1kB,OAEwB6P,EAFxB,SAMR,IAAK,qBACD,MAAO,sBAEX,IAAK,0BACD,mEAAA7P,OAAoE3G,EAAQs7B,YAA5E,KAIR,UAAA30B,OAAW5G,EAAQC,QAAQ,SAA3B,KAtkBJ65B,EAAWn9B,IAAI,8BAA+B,+BAC9Cm9B,EAAWn9B,IAAI,wBAAyB,yBACxCm9B,EAAWn9B,IAAI,yBAA0B,0BACzCm9B,EAAWn9B,IAAI,yBAA0B,0BACzCm9B,EAAWn9B,IAAI,0BAA2B,2BAC1Cm9B,EAAWn9B,IAAI,yBAA0B,0BACzCm9B,EAAWn9B,IAAI,wBAAyB,yBACxCm9B,EAAWn9B,IAAI,oBAAqB,qBACpCm9B,EAAWn9B,IAAI,yBAA0B,0BACzCm9B,EAAWn9B,IAAI,uBAAwB,wBACvCm9B,EAAWn9B,IAAI,2BAA4B,4BAC3Cm9B,EAAWn9B,IAAI,6BAA8B,8BAC7Cm9B,EAAWn9B,IAAI,mBAAoB,oBACnCm9B,EAAWn9B,IAAI,8BAA+B,+BAC9Cm9B,EAAWn9B,IAAI,0BAA2B,2BAC1Cm9B,EAAWn9B,IAAI,2BAA4B,4BAC3Cm9B,EAAWn9B,IAAI,8BAA+B,+BAC9Cm9B,EAAWn9B,IAAI,oBAAqB,qBACpCm9B,EAAWn9B,IAAI,yBAA0B,0BACzCm9B,EAAWn9B,IAAI,8BAA+B,+BAC9Cm9B,EAAWn9B,IAAI,qBAAsB,sBACrCm9B,EAAWn9B,IAAI,0BAA2B,kLCZpC6+B,qNAWFC,oCAAsC,SAAAp/B,GAAU,IACpC8F,EAAc5G,EAAK2f,MAAnB/Y,UACR,GAAKA,EAAL,CAEA,IAAMvF,EAAOuF,EAAU7B,MACvB,GAAK1D,EAAL,CAL4C,IAOpC6G,EAAWpH,EAAXoH,OAEJ7G,EAAKwB,KAAOqF,GACZlI,EAAK4hB,oGAnBT7hB,IAAU8hB,GAAG,oCAAqC1hB,KAAK+/B,qCACvDngC,IAAU8hB,GAAG,iCAAkC1hB,KAAK+/B,oFAIpDngC,IAAUoC,eAAe,oCAAqChC,KAAK+/B,qCACnEngC,IAAUoC,eAAe,iCAAkChC,KAAK+/B,sEAiB3D,IAAAxgB,EAC+Dvf,KAAKwf,MAAjEmB,EADHpB,EACGoB,QAASla,EADZ8Y,EACY9Y,UAAWvF,EADvBqe,EACuBre,KAAM8hB,EAD7BzD,EAC6ByD,KAAM0X,EADnCnb,EACmCmb,aAAcjb,EADjDF,EACiDE,UAEhDwa,EAAe1lB,YAAO9N,EAAYA,EAAU7B,MAAQ,MACpDmb,EAAYe,IAAW,aAAc,CAAEkf,4BAA6B/F,IAE1E,OACIwC,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBE,QAASR,GACnCwa,EACGwC,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAKsY,EAAclY,WAAW,EAAOC,IAAI,KAEpEya,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAWY,EAAQ0U,aAE3Bn0B,GACGu7B,EAAAj8B,EAAAqM,cAACozB,EAAA,EAAD,CACI/+B,KAAMA,EACN+4B,aAAcA,EACd/sB,UAAQ,EACRysB,QAAM,EACNc,cAAY,EACZ/D,OAAQ,EACR1T,KAAMA,EACN0X,aAAcA,YA/CXxa,IAAMC,YA+DlBgB,QAxEA,SAAAC,GAAK,MAAK,CACrBiU,WAAY,CACRA,WAAYjU,EAAMkU,QAAQ4K,QAAQC,KAClC3K,aAAc,MACd7lB,MAAO,GACPE,OAAQ,MAmEkB,CAAE0X,WAAW,GAAhCpG,CAAwC2e,4LCnEjDxf,sBACF,SAAAA,EAAYd,GAAO,IAAA3f,EAAA,OAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAsgB,IACfzgB,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAAwgB,GAAAngB,KAAAH,KAAMwf,KA+BV4gB,gBAAkB,WACd,IAAMrN,EAASlzB,EAAKwgC,SAASzS,QACzBmF,IACIlzB,EAAKygC,QAAUzgC,EAAK0gC,UAAY1gC,EAAK2gC,kBAAoB3gC,EAAK4gC,uBAE9D1N,EAAO2N,OAGP3N,EAAO4N,UAxCA9gC,EA6CnB+gC,wCAA0C,SAAAjgC,GACtCd,EAAK4gC,uBAAyBrjB,QAAQ7E,IAAiBsoB,2BAEvDhhC,EAAKugC,mBAhDUvgC,EAmDnBihC,iCAAmC,SAAAngC,GAC/Bd,EAAK2gC,gBAAkBpjB,QAAQ7E,IAAiBwoB,oBAEhDlhC,EAAKugC,mBAtDUvgC,EAyDnBmhC,0BAA4B,SAAArgC,GACxBd,EAAK0gC,QAAU5/B,EAAO4/B,QAEtB1gC,EAAKugC,mBA5DUvgC,EA+DnBohC,6BAA+B,SAAAtgC,GAAU,IAAA4e,EACP1f,EAAK2f,MAA3BxY,EAD6BuY,EAC7BvY,OAAQC,EADqBsY,EACrBtY,UACVwQ,EAAG,GAAAvM,OAAMlE,EAAN,KAAAkE,OAAgBjE,GAEzBpH,EAAKygC,OAAS3/B,EAAO+M,SAAS5K,IAAI2U,GAElC5X,EAAKugC,mBArEUvgC,EAwEnBqhC,4BAA8B,SAAAvgC,GAAU,IAC5B6D,EAAc3E,EAAK2f,MAAMhb,UAAzBA,UACAuD,EAAWpH,EAAXoH,OAEHvD,GAEDA,EAAU9B,KAAOqF,GACjBlI,EAAK4hB,eA/EM5hB,EAmFnBshC,qCAAuC,SAAAxgC,GAAU,IACrC8F,EAAc5G,EAAK2f,MAAMhb,UAAzBiC,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK4hB,gBAvFT5hB,EAAKwgC,SAAWngB,IAAMqb,YAEtB17B,EAAK0gC,QAAUx2B,OAAOq3B,SACtBvhC,EAAKygC,QAAS,EACdzgC,EAAK2gC,gBAAkBpjB,QAAQ7E,IAAiBwoB,oBAChDlhC,EAAK4gC,uBAAyBrjB,QAAQ7E,IAAiBsoB,2BARxChhC,mFAYfD,IAAU8hB,GAAG,qCAAsC1hB,KAAKmhC,sCACxDvhC,IAAU8hB,GAAG,4BAA6B1hB,KAAKkhC,6BAC/C3oB,IAAiBmJ,GAAG,0BAA2B1hB,KAAKghC,2BACpDzoB,IAAiBmJ,GAAG,iCAAkC1hB,KAAK8gC,kCAC3DvoB,IAAiBmJ,GAAG,wCAAyC1hB,KAAK4gC,yCAClEhzB,IAAa8T,GAAG,6BAA8B1hB,KAAKihC,6EAInDrhC,IAAUoC,eAAe,qCAAsChC,KAAKmhC,sCACpEvhC,IAAUoC,eAAe,4BAA6BhC,KAAKkhC,6BAC3D3oB,IAAiBvW,eAAe,0BAA2BhC,KAAKghC,2BAChEzoB,IAAiBvW,eAAe,iCAAkChC,KAAK8gC,kCACvEvoB,IAAiBvW,eACb,wCACAhC,KAAK4gC,yCAEThzB,IAAa5L,eAAe,6BAA8BhC,KAAKihC,+DAiE1D,IAAAvgB,EACiC1gB,KAAKwf,MAAnCa,EADHK,EACGL,YAAaZ,EADhBiB,EACgBjB,UAAWjI,EAD3BkJ,EAC2BlJ,EAD3B6pB,EAEsDrhC,KAAKwf,MAAMhb,UAA9DiC,EAFH46B,EAEG56B,UAAWjC,EAFd68B,EAEc78B,UAAW88B,EAFzBD,EAEyBC,UAAW3xB,EAFpC0xB,EAEoC1xB,MAAOE,EAF3CwxB,EAE2CxxB,OAE1C0Q,EAAeC,YAAW/Z,GAAa,CAAEkJ,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMzT,EAAQ,CACV6C,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAGnBoqB,EAAe1lB,YAAO9N,EAAYA,EAAU7B,MAAQ,MACpD+c,EAAMpN,YAAO/P,GAEbk3B,EAAY5E,YAAmBrwB,GAC/B86B,EAAQntB,YAAcktB,GAE5B,OACI7E,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,YAAYjT,MAAOA,EAAOmT,QAASR,GAC7CkC,EACG4f,EACI9E,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,6BAA6BjT,MAAOA,EAAO6U,IAAKA,EAAKK,IAAI,KAExEya,EAAAj8B,EAAAqM,cAAA,SACIivB,IAAK97B,KAAKqgC,SACVtgB,UAAU,6BACV4B,IAAKA,EACL6f,OAAQvH,EACRwH,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXjyB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,SAItB4sB,EAAAj8B,EAAAqM,cAAA4vB,EAAAj8B,EAAA+kB,SAAA,KACIkX,EAAAj8B,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,oBAAqB,CAAEib,gBAAiBL,IAC9D5uB,MAAOA,EACP6U,IAAKsY,EACLjY,IAAI,KAERya,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBzT,YAAY9H,KAGrDi4B,EAAAj8B,EAAAqM,cAAC0wB,EAAA,EAAD,CACIr8B,KAAMsD,EACN0I,UAAQ,EACRysB,QAAM,EACNc,cAAY,EACZzX,KAAMyZ,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBvI,EAAE,wBApJrC0I,IAAMC,YAoK9BG,EAAUW,aAAe,CACrB7U,KAAMgG,IACNiO,YAAaa,KAGFsG,kBAAkBlH,uHChL3BuhB,qNACFzd,MAAQ,CACJ2J,MAAO,KACP+T,iBAAkB,QAiCtBC,kBAAoB,SAAA38B,GAAW,IAEnB1C,EADkB0C,EAAlBA,QACA1C,GAERb,IAAgBkJ,KAAK,CACjBjC,QAAS,mBACT1D,QAAS,CAAE0D,QAAS,cAAepG,QACpC2I,KAAK,SAAAlB,GACAtK,EAAK2f,MAAMpa,UAAYA,GACvBvF,EAAK6kB,SAAS,CACVqJ,MAAO5jB,EAAO63B,OAAOC,KAAK,4FA1BvB9c,EAAWC,EAAWC,GAAU,IACvCjgB,EAAYpF,KAAKwf,MAAjBpa,QAEJA,GAAWA,IAAY+f,EAAU/f,SACjCpF,KAAK+hC,kBAAkB38B,+CAIX,IACRA,EAAYpF,KAAKwf,MAAjBpa,QAEJA,GACApF,KAAK+hC,kBAAkB38B,oCAoBtB,IACGA,EAAYpF,KAAKwf,MAAjBpa,QACA2oB,EAAU/tB,KAAKokB,MAAf2J,MAER,OAAK3oB,EAGDq3B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,mBACX0c,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,yBAAyBgO,GACxC0O,EAAAj8B,EAAAqM,cAACq1B,EAAA,EAAD,CAAS98B,QAASA,EAASib,YAAa8hB,OAL3B,wDAlDO3iB,EAAO4E,GAAO,IAClChf,EAAYoa,EAAZpa,QACA08B,EAAqB1d,EAArB0d,iBAER,OAAI18B,GAAW08B,EACJ,CACHA,iBAAkB18B,EAClB2oB,MAAO,MAIR,YAjBc7N,IAAMC,YAuEpB0hB,gMC3DTO,sBACF,SAAAA,EAAY5iB,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAoiC,IACfviC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAsiC,GAAAjiC,KAAAH,KAAMwf,KA8DVyV,mBAAqB,SAAAt0B,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAKgO,KAAV,CAEA,IAAIswB,GAAiB,EACrB,OAAQt+B,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,IAAgBc,YAAYzW,EAAKgO,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQgmB,KAAK,SAAA12B,GAAC,OAAIA,EAAEqD,UAAYtO,EAAOsO,YAE3DozB,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGt+B,EAAKgO,KAAK9C,UAAYtO,EAAOsO,UAC7BozB,GAAiB,GASzBA,GACAxiC,EAAKwiC,eAAet+B,KAnGTlE,EAuGnBwiC,eAAiB,SAAAt+B,GACblE,EAAK6kB,SAAS,CACV6d,SAAU/oB,YAA6BzV,EAAKrB,IAC5C8/B,SAAUrnB,YAAkCpX,EAAKrB,OA1GtC7C,EA8GnB4iC,qBAAuB,SAAA9hC,GAAU,IACrBqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACtBjD,KAGDA,EAAKgO,MACmB,oBAAvBhO,EAAKgO,KAAK,UAAyD,mBAAvBhO,EAAKgO,KAAK,UACvDhO,EAAKgO,KAAK9C,UAAYtO,EAAOsO,SAE7BpP,EAAKwiC,eAAet+B,KAxHTlE,EA4HnB6iC,2BAA6B,SAAA/hC,GAAU,IAC3BqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACtBjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAK4H,iBAAmBhZ,EAAOgZ,gBAEpC9Z,EAAKwiC,eAAet+B,IAtITlE,EA0InB8iC,2BAA6B,SAAAhiC,GAAU,IAC3BqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACtBjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAKsI,gBAAkB1Z,EAAO0Z,eAEnCxa,EAAKwiC,eAAet+B,IApJTlE,EAwJnB+iC,mBAAqB,SAAAjiC,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACtBjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAK4H,iBAAmBhZ,EAAOs7B,YAAYv5B,IAEhD7C,EAAKwiC,eAAet+B,IAlKTlE,EAsKnBgjC,mBAAqB,SAAAliC,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACtBjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAKsI,gBAAkB1Z,EAAOwZ,WAAWzX,IAE9C7C,EAAKwiC,eAAet+B,IAhLT,IAGPiD,EAAWnH,EAAK2f,MAAhBxY,OAHO,OAKfnH,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZu7B,SAAU/oB,YAA6BxS,GACvCw7B,SAAUrnB,YAAkCnU,IARjCnH,qFA0BGklB,EAAWC,GAAW,IAChChe,EAAWhH,KAAKwf,MAAhBxY,OADgCmd,EAETnkB,KAAKokB,MAA5Bme,EAFgCpe,EAEhCoe,SAAUC,EAFsBre,EAEtBqe,SAElB,OAAIzd,EAAU/d,SAAWA,IAIrBge,EAAUud,WAAaA,GAIvBvd,EAAUwd,WAAaA,+CAQ3BtzB,IAAUwS,GAAG,mBAAoB1hB,KAAKi1B,oBACtCvb,IAAgBgI,GAAG,mBAAoB1hB,KAAK4iC,oBAC5CxoB,IAAgBsH,GAAG,mBAAoB1hB,KAAK6iC,oBAC5C3zB,IAAUwS,GAAG,qBAAsB1hB,KAAKyiC,sBACxC/oB,IAAgBgI,GAAG,2BAA4B1hB,KAAK0iC,4BACpDtoB,IAAgBsH,GAAG,2BAA4B1hB,KAAK2iC,2EAIpDzzB,IAAUlN,eAAe,mBAAoBhC,KAAKi1B,oBAClDvb,IAAgB1X,eAAe,mBAAoBhC,KAAK4iC,oBACxDxoB,IAAgBpY,eAAe,mBAAoBhC,KAAK6iC,oBACxD3zB,IAAUlN,eAAe,qBAAsBhC,KAAKyiC,sBACpD/oB,IAAgB1X,eAAe,2BAA4BhC,KAAK0iC,4BAChEtoB,IAAgBpY,eAAe,2BAA4BhC,KAAK2iC,6DAwH3D,IACGhiB,EAAY3gB,KAAKwf,MAAjBmB,QADHoiB,EAE0B/iC,KAAKokB,MAA5Bme,EAFHQ,EAEGR,SAAUC,EAFbO,EAEaP,SAElB,OACI1iB,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IACP,gBACA0hB,EAAW7hB,EAAQqiB,qBAAuBriB,EAAQsiB,iBAErDV,sDAlLmB/iB,EAAO4E,GACnC,GAAI5E,EAAMxY,SAAWod,EAAM0e,WAAY,KAC3B97B,EAAWwY,EAAXxY,OAER,MAAO,CACH87B,WAAY97B,EACZu7B,SAAU/oB,YAA6BxS,GACvCw7B,SAAUrnB,YAAkCnU,IAIpD,OAAO,YAxBmBkZ,IAAMC,YAqMzBgB,MA9MA,SAAAC,GAAK,MAAK,CACrB6hB,eAAgB,CACZ9gB,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqlB,UAAY,WAE1EF,qBAAsB,CAClB7gB,MAAOf,EAAMkU,QAAQ4K,QAAQiD,KAAO,gBAyMV,CAAE5b,WAAW,GAAhCpG,CAAwCihB,GChNjDgB,sBACF,SAAAA,EAAY5jB,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAojC,IACfvjC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAsjC,GAAAjjC,KAAAH,KAAMwf,KAaVmG,YAAc,WAAM,IAAApG,EACa1f,EAAK2f,MAA1BxY,EADQuY,EACRvY,OAAQivB,EADA1W,EACA0W,SAChB,GAAKA,EAAL,CAEA,IAAMlyB,EAAOgP,IAAU9P,IAAI+D,GACtBjD,GAELkyB,EAASlyB,KArBMlE,qFAUGklB,EAAWC,GAC7B,OAAOD,EAAU/d,SAAWhH,KAAKwf,MAAMxY,wCAalC,IAAA0Z,EAC2D1gB,KAAKwf,MAA7DxY,EADH0Z,EACG1Z,OAAQq8B,EADX3iB,EACW2iB,aAAcC,EADzB5iB,EACyB4iB,WAAY3oB,EADrC+F,EACqC/F,kBAE1C,OACImF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,OAAOE,QAASjgB,KAAK2lB,aAChC7F,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQivB,SAAUoN,EAAc1oB,kBAAmBA,IAC5EmF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAC2vB,EAAA,EAAD,CAAoBx1B,OAAQA,EAAQ2T,kBAAmBA,KAE1D2oB,IAAe3oB,GACZmF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAC02B,EAAD,CAAqBv8B,OAAQA,eAtCnCkZ,IAAMC,YAwDhCijB,EAAYniB,aAAe,CACvBtG,mBAAmB,EACnB2oB,YAAY,GAGDF,iKCwBAI,sBAtFX,SAAAA,EAAYhkB,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAwjC,IACf3jC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA0jC,GAAArjC,KAAAH,KAAMwf,KAkBVre,aAAe,SAAAR,GACX,IAAMy4B,EAAcv5B,EAAKukB,MAAMljB,KACzBm4B,EAAW14B,EAAOO,KAEpBk4B,GAAeA,EAAY12B,KAAO22B,EAAS32B,IAC3C7C,EAAK6kB,SAAS,CAAExjB,KAAMm4B,EAAUC,SAAUF,KAxB/B,IAGPl4B,EAASrB,EAAK2f,MAAdte,KAHO,OAIfrB,EAAKukB,MAAQ,CACT4V,cAAe94B,EACfo4B,SAAU,KACVp4B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAPrBrB,mFAYfD,IAAU8hB,GAAG,aAAc1hB,KAAKmB,6DAIhCvB,IAAUoC,eAAe,aAAchC,KAAKmB,4DA2B1B4jB,EAAWC,GAAW,IAAAb,EACbnkB,KAAKokB,MAAxBljB,EADgCijB,EAChCjjB,KAAMo4B,EAD0BnV,EAC1BmV,SAEd,OAAItU,EAAU9jB,OAASA,GAInB8jB,EAAUsU,WAAaA,mCAOtB,IACGp4B,EAASlB,KAAKokB,MAAdljB,KACR,IAAKA,EAAM,OAAO,KAElB,IAAMuiC,EAAsBviC,EAAK0B,OAAS1B,EAAK0B,MAAM6R,sBAC/CivB,EAAoBxiC,EAAK0C,QAAU1C,EAAK0C,OAAOgR,oBAE/CxI,EAAOE,YAAYpL,GACrB44B,EAAe,KACf2J,EACA3J,EAAetlB,YAAkBtT,GAC1BwiC,IACP5J,EAAenlB,YAAgBzT,IAGnC,IAAMyiC,EAAa7J,EAAY,GAAA5uB,OAAM4uB,EAAN,KAAA5uB,OAAsBkB,GAAtB,GAAAlB,OAAkCkB,GAEjE,OACI0T,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,YAAO82B,uDAhDankB,EAAO4E,GAAO,IAClCljB,EAASse,EAATte,KACA84B,EAAkB5V,EAAlB4V,cAER,OAAI94B,GAAQ84B,GAAiB94B,EAAKwB,KAAOs3B,EAAct3B,GAC5C,CACHs3B,cAAe94B,EACfo4B,SAAU,KACVp4B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzCcgf,IAAMC,YCG7BsM,2LACO,IAAAlN,EAC2Bvf,KAAKwf,MAA7B1a,EADHya,EACGza,SAAU2a,EADbF,EACaE,UAClB,IAAK3a,EAAU,OAAO,KAFjB,IAIG2B,EAAyB3B,EAAzB2B,UAAW0nB,EAAcrpB,EAAdqpB,UACbjtB,EAAO4D,EAASA,SAEtB,OACIgb,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YACXD,EAAAtf,EAAAqM,cAACizB,EAAA,EAAD,CACIr5B,UAAWA,EACXvF,KAAMA,EACNue,UAAWA,EACXuD,KAAMlD,EAAAtf,EAAAqM,cAAC+2B,EAAApjC,EAAD,MACNk6B,aAAc5a,EAAAtf,EAAAqM,cAACg3B,EAAArjC,EAAD,QAElBsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAA,KACIkT,UAAU,gBACVE,QAASR,EACT1E,MAAOoT,EACP2V,YAAW3V,EACX4V,WAAU,IAAMjvB,YAAaqZ,IAC5BA,IAGTrO,EAAAtf,EAAAqM,cAACm3B,EAAD,CAAgB9iC,KAAMA,aA5BnBgf,IAAMC,YA0CdsM,qMCtCTF,6BACF,SAAAA,EAAY/M,GAAO,IAAA3f,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAusB,IACf1sB,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAAysB,GAAApsB,KAAAH,KAAMwf,KAmDVykB,uBAAyB,SAAAtjC,GAAU,IAAA4e,EACD1f,EAAK2f,MAA3BxY,EADuBuY,EACvBvY,OAAQC,EADesY,EACftY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CACVwf,QAAQ,EACR/S,SAAS,EACTK,YAAa,KA3DN3xB,EAgEnBskC,wBAA0B,SAAAxjC,GAAU,IAAA+f,EACO7gB,EAAK2f,MAApCxY,EADwB0Z,EACxB1Z,OAAQC,EADgByZ,EAChBzZ,UADgByZ,EACLyQ,QAEvBnqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK6kB,SAAS,CAAEyM,SAAS,IAEzBtxB,EAAK6kB,SAAS,CAAEyM,SAAS,KAtEdtxB,EA0EnBukC,yBAA2B,SAAAzjC,GAAU,IAAA4nB,EACH1oB,EAAK2f,MAA3BxY,EADyBuhB,EACzBvhB,OAAQC,EADiBshB,EACjBthB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CAAEyM,SAAS,KA9EdtxB,EAkFnBwkC,0BAA4B,SAAA1jC,GAAU,IAAAooB,EACJlpB,EAAK2f,MAA3BxY,EAD0B+hB,EAC1B/hB,OAAQC,EADkB8hB,EAClB9hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKukB,MAAM8f,QACZrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbL,SAAS,IAGVtxB,EAAKukB,MAAM8f,QAClBrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbL,SAAS,KAjGF,IAGPnqB,EAAsBwY,EAAtBxY,OAAQC,EAAcuY,EAAdvY,UAER0pB,EAA2BL,IAA3BK,KAAMrsB,EAAqBgsB,IAArBhsB,QAAS6sB,EAAYb,IAAZa,QACjB+S,EAAS5/B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKukB,MAAQ,CACT8f,OAAQA,EACR/S,UAAS+S,GAAS/S,EAClBK,YAAa0S,GAAUvT,EAAOA,EAAKa,YAAc,EACjDD,SAAU2S,GAAUvT,EAAOA,EAAKY,SAAW,GAZhC1xB,qFAgBGklB,EAAWC,EAAWC,GAAa,IAAAd,EACFnkB,KAAKokB,MAAhD8f,EAD6C/f,EAC7C+f,OAAQ/S,EADqChN,EACrCgN,QAASK,EAD4BrN,EAC5BqN,YAAaD,EADepN,EACfoN,SAEtC,OAAIvM,EAAUkf,SAAWA,IAIrBlf,EAAUmM,UAAYA,IAItBnM,EAAUwM,cAAgBA,GAI1BxM,EAAUuM,WAAaA,gDAQ3BjB,IAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,IAAY5O,GAAG,wBAAyB1hB,KAAKmkC,yBAC7C7T,IAAY5O,GAAG,yBAA0B1hB,KAAKokC,0BAC9C9T,IAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5C3T,IAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,IAAYtuB,eAAe,wBAAyBhC,KAAKmkC,yBACzD7T,IAAYtuB,eAAe,yBAA0BhC,KAAKokC,0BAC1D9T,IAAYtuB,eAAe,uBAAwBhC,KAAKikC,yDAqDnD,IAAAK,EAC2CtkC,KAAKwf,MAA7CxY,EADHs9B,EACGt9B,OAAQC,EADXq9B,EACWr9B,UAAWvC,EADtB4/B,EACsB5/B,MAAO+a,EAD7B6kB,EAC6B7kB,UAC1B0R,EAAYnxB,KAAKokB,MAAjB+M,QACR,IAAKzsB,EAAO,OAAO,KAHd,IAKG2B,EAAiD3B,EAAjD2B,sBAAuBkrB,EAA0B7sB,EAA1B6sB,SAAiBrwB,EAASwD,EAAhBA,MAEnCqW,EAAQyT,YAAc9pB,GAE5B,OACI+3B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,YACX0c,EAAAj8B,EAAAqM,cAAC03B,EAAA,EAAD,CACI99B,UAAWJ,EACXnF,KAAMA,EACNue,UAAWA,EACXuD,KAAMyZ,EAAAj8B,EAAAqM,cAAC23B,EAAAhkC,EAAD,MACNk6B,aAAcvJ,EAAUsL,EAAAj8B,EAAAqM,cAAC43B,EAAAjkC,EAAD,MAAgBi8B,EAAAj8B,EAAAqM,cAAC63B,EAAAlkC,EAAD,QAE5Ci8B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,oBACX0c,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,kBACX0c,EAAAj8B,EAAAqM,cAAA,KAAGkT,UAAU,gBAAgBE,QAASR,EAAW1E,MAAOA,GACnDA,IAGT0hB,EAAAj8B,EAAAqM,cAAC83B,EAAA,EAAD,CAAa39B,OAAQA,EAAQC,UAAWA,EAAWsqB,SAAUA,EAAUrwB,KAAMA,aA/H7Egf,IAAMC,YA6IXoM,qIClJTqY,sBACF,SAAAA,EAAYplB,GAAO,IAAA3f,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA4kC,IACf/kC,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAA8kC,GAAAzkC,KAAAH,KAAMwf,KA2DVykB,uBAAyB,SAAAtjC,GAAU,IAAA4e,EACS1f,EAAK2f,MAArCxY,EADuBuY,EACvBvY,OAAQC,EADesY,EACftY,UAAWsqB,EADIhS,EACJgS,SADIpN,EAENtkB,EAAKukB,MAAdljB,GAFeijB,EAEvB+f,OAFuB/f,EAEfjjB,MAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbqT,WAAYhlC,EAAKilC,cAAc,EAAGvT,GAAU,EAAOrwB,MApE5CrB,EAyEnBklC,wBAA0B,SAAApkC,GAAU,IAAA+f,EACQ7gB,EAAK2f,MAArCxY,EADwB0Z,EACxB1Z,OAAQC,EADgByZ,EAChBzZ,UAAWsqB,EADK7Q,EACL6Q,SADKwR,EAEPljC,EAAKukB,MAAtB8f,EAFwBnB,EAExBmB,OAAQhjC,EAFgB6hC,EAEhB7hC,KAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CACV8M,YAAa7wB,EAAO6wB,YACpBD,SAAU5wB,EAAO4wB,UAAYA,EAC7BsT,WAAYhlC,EAAKilC,cAAcnkC,EAAO6wB,YAAa7wB,EAAO4wB,UAAYA,EAAU2S,EAAQhjC,MAjFjFrB,EAsFnBwkC,0BAA4B,SAAA1jC,GAAU,IAAA4nB,EACM1oB,EAAK2f,MAArCxY,EAD0BuhB,EAC1BvhB,OAAQC,EADkBshB,EAClBthB,UAAWsqB,EADOhJ,EACPgJ,SADOyT,EAEInlC,EAAKukB,MAAnC8f,EAF0Bc,EAE1Bd,OAAQ1S,EAFkBwT,EAElBxT,YAAatwB,EAFK8jC,EAEL9jC,KAEzB8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa0S,EAAS1S,EAAc,EACpCqT,WAAYhlC,EAAKilC,cAAcZ,EAAS1S,EAAc,EAAGD,GAAU,EAAMrwB,KAEtEgjC,GACPrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbqT,WAAYhlC,EAAKilC,cAAc,EAAGvT,GAAU,EAAOrwB,MApG5CrB,EAyGnBsB,aAAe,SAAAR,GACX,IAAMy4B,EAAcv5B,EAAKukB,MAAMljB,KACzBm4B,EAAW14B,EAAOO,KAEpBk4B,GAAeA,EAAY12B,KAAO22B,EAAS32B,IAC3C7C,EAAK6kB,SAAS,CAAExjB,KAAMm4B,EAAUC,SAAUF,KA9G/Bv5B,EAkHnBilC,cAAgB,SAACtT,EAAaD,EAAU2S,EAAQhjC,GAC5C,IAAMo5B,EAAyBp5B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDkiC,GAFuB/jC,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAEjCohC,YAAkBtgB,KAAKC,MAAM0M,GAAY,KAC1D4T,EAAoBD,YAAkBtgB,KAAKC,MAAM2M,GAAe,IAEtE,OAAO0S,GAAU5J,EAAV,GAAApvB,OAAsCi6B,EAAtC,KAAAj6B,OAA2D+5B,GAA3D,GAAA/5B,OAAiF+5B,IAzHzE,IAGP3gC,EAAkBgsB,IAAlBhsB,QAASqsB,EAASL,IAATK,KAHF5H,EAI+BlpB,EAAK2f,MAA3CxY,EAJO+hB,EAIP/hB,OAAQC,EAJD8hB,EAIC9hB,UAAWsqB,EAJZxI,EAIYwI,SAAUrwB,EAJtB6nB,EAIsB7nB,KAE/BgjC,EAAS5/B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEuqB,EAAc0S,GAAUvT,EAAOA,EAAKa,YAAc,EAClD4T,EAAgBlB,GAAUvT,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EAClE6H,EAAcx5B,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAT/B,OAWfrB,EAAKukB,MAAQ,CACT8f,OAAQA,EACR1S,YAAaA,EACbD,SAAU6T,EACVP,WAAYhlC,EAAKilC,cAActT,EAAaD,EAAU2S,EAAQ9K,GAE9DE,SAAU,KACVp4B,KAAMk4B,GAlBKv5B,qFAsBGklB,EAAWC,GAAW,IAAAqgB,EACOrlC,KAAKokB,MAA5C8f,EADgCmB,EAChCnB,OAAQW,EADwBQ,EACxBR,WAAY3jC,EADYmkC,EACZnkC,KAAMo4B,EADM+L,EACN/L,SAElC,OAAItU,EAAU6f,aAAeA,IAIzB7f,EAAUkf,SAAWA,IAIrBlf,EAAU9jB,OAASA,GAInB8jB,EAAUsU,WAAaA,gDAQ3B15B,IAAU8hB,GAAG,aAAc1hB,KAAKmB,cAEhCmvB,IAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,IAAY5O,GAAG,wBAAyB1hB,KAAK+kC,yBAC7CzU,IAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5CrkC,IAAUoC,eAAe,aAAchC,KAAKmB,cAE5CmvB,IAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,IAAYtuB,eAAe,wBAAyBhC,KAAK+kC,yBACzDzU,IAAYtuB,eAAe,uBAAwBhC,KAAKikC,yDAmEnD,IAAAqB,EACwBtlC,KAAKokB,MAA1BljB,EADHokC,EACGpkC,KAAM2jC,EADTS,EACST,WACd,IAAK3jC,EAAM,OAAO,KAElB,IAAMuiC,EAAsBviC,EAAK0B,OAAS1B,EAAK0B,MAAM6R,sBAC/CivB,EAAoBxiC,EAAK0C,QAAU1C,EAAK0C,OAAOgR,oBAC/C0lB,EAAyBp5B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDqJ,GAFuBlL,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAE3CwI,YAAYpL,IACrB44B,EAAe,KACf2J,EACA3J,EAAetlB,YAAkBtT,GAC1BwiC,IACP5J,EAAenlB,YAAgBzT,IAEnC,IAAMyiC,EAAa7J,EAAY,GAAA5uB,OAAM4uB,EAAN,KAAA5uB,OAAsBkB,GAAtB,GAAAlB,OAAkCkB,GAEjE,OACIqwB,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,iBACTua,GAA0BmC,EAAAj8B,EAAAqM,cAAA,eAAA3B,OAAUy4B,EAAV,OAC5BlH,EAAAj8B,EAAAqM,cAAA,YAAOg4B,WAlJG3kB,IAAMC,YA+JjBykB,+KC5JT9X,qNASFyY,iCAAmC,SAAA5kC,GAAU,IACjC8F,EAAc5G,EAAK2f,MAAMla,MAAzBmB,UACAsB,EAAWpH,EAAXoH,OAEHtB,GAEDA,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK4hB,kGAdT7hB,IAAU8hB,GAAG,iCAAkC1hB,KAAKulC,iFAIpD3lC,IAAUoC,eAAe,iCAAkChC,KAAKulC,mEAc3D,IAAAhmB,EAC8Bvf,KAAKwf,MAAhCa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UADhB+lB,EAEiDxlC,KAAKwf,MAAMla,MAAzDmB,EAFH++B,EAEG/+B,UAAWnB,EAFdkgC,EAEclgC,MAAOqK,EAFrB61B,EAEqB71B,MAAOE,EAF5B21B,EAE4B31B,OAAQ0hB,EAFpCiU,EAEoCjU,SAEnChR,EAAeC,YAAW/Z,GAAa,CAAEkJ,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMzT,EAAQ,CACV6C,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAGnB3O,EAAOuF,EAAYA,EAAU7B,MAAQ,KACrCuD,EAAOjH,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KACxDwZ,EAAM/hB,IAAU2I,WAAWJ,GAC3BuzB,EAAY5E,YAAmBrwB,GAErC,OACIg2B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,QAAQjT,MAAOA,EAAOmT,QAASR,GAC1Cgd,EAAAj8B,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,gBAAiB,CAAEib,gBAAiBL,IAC1D5uB,MAAOA,EACP6U,IAAKA,EACLK,IAAI,KAERya,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,cACX0c,EAAAj8B,EAAAqM,cAAC63B,EAAAlkC,EAAD,OAEJi8B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,cAAcmlB,YAAkB3T,GAAY,IAAMjlB,YAAYhH,YAhDzE4a,IAAMC,YA+D1B2M,EAAM7L,aAAe,CACjB7U,KAAMgG,IACNiO,YAAaa,KAGF4L,+PC7DTkM,UAAc,CAChBC,OAAQ,+BAGNlM,cACF,SAAAA,EAAYvN,GAAO,IAAA3f,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA+sB,IACfltB,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAAitB,GAAA5sB,KAAAH,KAAMwf,KA6FV4gB,gBAAkB,WACd,IAAMrN,EAASlzB,EAAKwgC,SAASzS,QAC7B,GAAImF,EACA,GAAIlzB,EAAKygC,QAAUzgC,EAAK0gC,UAAY1gC,EAAK2gC,kBAAoB3gC,EAAK4gC,uBAE9D1N,EAAO2N,WACJ,CACH,GAAI7gC,EAAKukB,MAAM8f,OACX,OAIJnR,EAAO4N,UA1GA9gC,EA+GnB+gC,wCAA0C,SAAAjgC,GACtCd,EAAK4gC,uBAAyBrjB,QAAQ7E,IAAiBsoB,2BAEvDhhC,EAAKugC,mBAlHUvgC,EAqHnBihC,iCAAmC,SAAAngC,GAC/Bd,EAAK2gC,gBAAkBpjB,QAAQ7E,IAAiBwoB,oBAEhDlhC,EAAKugC,mBAxHUvgC,EA2HnBmhC,0BAA4B,SAAArgC,GACxBd,EAAK0gC,QAAU5/B,EAAO4/B,QAEtB1gC,EAAKugC,mBA9HUvgC,EAiInBohC,6BAA+B,SAAAtgC,GAAU,IAAA4e,EACP1f,EAAK2f,MAA3BxY,EAD6BuY,EAC7BvY,OAAQC,EADqBsY,EACrBtY,UACVwQ,EAAG,GAAAvM,OAAMlE,EAAN,KAAAkE,OAAgBjE,GAEzBpH,EAAKygC,OAAS3/B,EAAO+M,SAAS5K,IAAI2U,GAElC5X,EAAKugC,mBAvIUvgC,EA0InB4lC,iCAAmC,SAAA9kC,GAAU,IAAA+f,EACX7gB,EAAK2f,MAA3BxY,EADiC0Z,EACjC1Z,OAAQC,EADyByZ,EACzBzZ,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKwgC,SAASzS,SAEzB/tB,EAAK6kB,SAAS,CAAEghB,UAAW/kC,EAAO+wB,QAAU,WACxC7xB,EAAK8lC,qBAhJF9lC,EAsJnBklC,wBAA0B,SAAApkC,GAAU,IAAA4nB,EACF1oB,EAAK2f,MAA3BxY,EADwBuhB,EACxBvhB,OAAQC,EADgBshB,EAChBthB,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKwgC,SAASzS,SAEzB/tB,EAAK6kB,SAAS,CACV8M,YAAa7wB,EAAO6wB,YACpBoU,cAAejlC,EAAO4wB,aA7JnB1xB,EAmKnBokC,uBAAyB,SAAAtjC,GAAU,IAAAooB,EACDlpB,EAAK2f,MAA3BxY,EADuB+hB,EACvB/hB,OAAQC,EADe8hB,EACf9hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SACD,CACIwf,QAAQ,EACRwB,UAAW,KACXlU,YAAa,GAEjB,WACI,IAAMuB,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELlzB,EAAK8lC,iBAEA57B,OAAOq3B,UACRrO,EAAO4N,YApLR9gC,EA2LnBwkC,0BAA4B,SAAA1jC,GAAU,IAAA2jC,EACJzkC,EAAK2f,MAA3BxY,EAD0Bs9B,EAC1Bt9B,OAAQC,EADkBq9B,EAClBr9B,UACEpH,EAAK2f,MAAMjY,UAArBjC,MAEJ0B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7CpH,EAAKukB,MAAM8f,QAEXrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,OAGd3xB,EAAKukB,MAAM8f,QAClBrkC,EAAK6kB,SACD,CACIwf,QAAQ,EACRwB,UAAW,KACXlU,YAAa,GAEjB,WACI,IAAMuB,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELlzB,EAAK8lC,iBAEA57B,OAAOq3B,UACRrO,EAAO4N,YArNR9gC,EA4NnBgmC,4BAA8B,SAAAllC,GAAU,IAC5B2E,EAAUzF,EAAK2f,MAAMjY,UAArBjC,MACAyC,EAAWpH,EAAXoH,OAEHzC,GAEDA,EAAM5C,KAAOqF,GACblI,EAAK6kB,SACD,CACI/C,IAAKpN,YAAOjP,IAEhB,WACIzF,EAAK8lC,oBAxOF9lC,EA8OnBimC,qCAAuC,SAAAnlC,GAAU,IACrC8F,EAAc5G,EAAK2f,MAAMjY,UAAzBd,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK4hB,gBArPM5hB,EAyPnBkmC,cAAgB,aAtPZlmC,EAAKwgC,SAAWngB,IAAMqb,YAHP,IAKPv0B,EAAsBwY,EAAtBxY,OAAQC,EAAcuY,EAAdvY,UACR3B,EAAUka,EAAMjY,UAAhBjC,MAEAqrB,EAA+BL,IAA/BK,KAAMrsB,EAAyBgsB,IAAzBhsB,QAASssB,EAAgBN,IAAhBM,YACjBsT,EAAS5/B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EATxD,OAWfpH,EAAKukB,MAAQ,CACT8f,OAAQA,EACRwB,UAAWxB,EAAStT,EAAc,KAClCjP,IAAKpN,YAAOjP,GACZksB,YAAa0S,GAAUvT,EAAOA,EAAKa,YAAc,EACjDoU,cAAe1B,GAAUvT,EAAOA,EAAKY,SAAW,GAGpD1xB,EAAK0gC,QAAUx2B,OAAOq3B,SACtBvhC,EAAKygC,QAAS,EACdzgC,EAAK2gC,gBAAkBpjB,QAAQ7E,IAAiBwoB,oBAChDlhC,EAAK4gC,uBAAyBrjB,QAAQ7E,IAAiBsoB,2BAtBxChhC,gFAyBF,IAAAskB,EACcnkB,KAAKokB,MAAxBshB,EADKvhB,EACLuhB,UAAW/jB,EADNwC,EACMxC,IAEboR,EAAS/yB,KAAKqgC,SAASzS,QAC7B,GAAKmF,EAEL,GAAI2S,EAEA3S,EAAO2S,UAAYA,MAFvB,CAMA,IAAMhU,EAASqB,EAAO2S,UACtB,GAAIhU,EAEeA,EAAOsU,YAEf5iC,QAAQ,SAAA6iC,GAEXA,EAAM1kC,SAIVwxB,EAAO2S,YAEP3S,EAAO2S,UAAY,MAEnB3S,EAAOpR,MAAQA,IACfoR,EAAOpR,IAAMA,gDAKjB3hB,KAAK2lC,iBAEL/lC,IAAU8hB,GAAG,qCAAsC1hB,KAAK8lC,sCACxDlmC,IAAU8hB,GAAG,4BAA6B1hB,KAAK6lC,6BAE/Cj4B,IAAa8T,GAAG,6BAA8B1hB,KAAKihC,8BAEnD1oB,IAAiBmJ,GAAG,0BAA2B1hB,KAAKghC,2BACpDzoB,IAAiBmJ,GAAG,iCAAkC1hB,KAAK8gC,kCAC3DvoB,IAAiBmJ,GAAG,wCAAyC1hB,KAAK4gC,yCAElEtQ,IAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,IAAY5O,GAAG,iCAAkC1hB,KAAKylC,kCACtDnV,IAAY5O,GAAG,wBAAyB1hB,KAAK+kC,yBAC7CzU,IAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5CrkC,IAAUoC,eAAe,qCAAsChC,KAAK8lC,sCACpElmC,IAAUoC,eAAe,4BAA6BhC,KAAK6lC,6BAE3Dj4B,IAAa5L,eAAe,6BAA8BhC,KAAKihC,8BAE/D1oB,IAAiBvW,eAAe,0BAA2BhC,KAAKghC,2BAChEzoB,IAAiBvW,eAAe,iCAAkChC,KAAK8gC,kCACvEvoB,IAAiBvW,eACb,wCACAhC,KAAK4gC,yCAGTtQ,IAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,IAAYtuB,eAAe,iCAAkChC,KAAKylC,kCAClEnV,IAAYtuB,eAAe,wBAAyBhC,KAAK+kC,yBACzDzU,IAAYtuB,eAAe,uBAAwBhC,KAAKikC,yDA0KnD,IAAAiC,EACiDlmC,KAAKwf,MAAtCxY,GADhBk/B,EACG7lB,YADH6lB,EACgBl/B,QAAQC,EADxBi/B,EACwBj/B,UAAWwY,EADnCymB,EACmCzmB,UADnCsjB,EAE0C/iC,KAAKokB,MAA5C8f,EAFHnB,EAEGmB,OAAQ1S,EAFXuR,EAEWvR,YAAaoU,EAFxB7C,EAEwB6C,cAFxBO,EAGkCnmC,KAAKwf,MAAMjY,UAA1Cd,EAHH0/B,EAGG1/B,UAAWnB,EAHd6gC,EAGc7gC,MAAOisB,EAHrB4U,EAGqB5U,SAG1B,IADgB3jB,IAAa3K,IAAI+D,EAAQC,GAC3B,OAAO,KAErB,IAAM6F,EAAQ,CAAE6C,MAAO,IAAKE,OAAQ,KACpC,IAAK/C,EAAO,OAAO,KAEnB,IAAMmtB,EAAe1lB,YAAO9N,EAAYA,EAAU7B,MAAQ,MACpD+c,EAAMpN,YAAOjP,GACbo2B,EAAY5E,YAAmBrwB,GAEjCq0B,EAAW,EACX8K,GAAiBpU,IAEjBsJ,GADqBtJ,EAAc,KACRoU,EAAiB,KAGhD,OACInJ,EAAAj8B,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,aAAc,CAAEslB,qBAAsBlC,IAC5Dp3B,MAAOA,EACPmT,QAASR,GACRkC,EACG8a,EAAAj8B,EAAAqM,cAAA4vB,EAAAj8B,EAAA+kB,SAAA,KACIkX,EAAAj8B,EAAAqM,cAAA,SACIivB,IAAK97B,KAAKqgC,SACVtgB,UAAWe,IAAW,6BAA8B,oBACpD0gB,OAAQvH,EACRwH,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXjyB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,OACdw2B,UAAWrmC,KAAK+lC,gBAEpBtJ,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,qBACX0c,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,uBACX0c,EAAAj8B,EAAAqM,cAACy5B,EAAA9lC,EAAD,CACImgB,QAASqY,EACTnS,QAAQ,SACRpR,MAAOqlB,EACP1uB,KAAM,IACN8W,UAAW,KAGnBuZ,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,kBACVmlB,YAAkBhB,EAAStf,KAAKC,MAAM2M,GAAeD,GACtDkL,EAAAj8B,EAAAqM,cAAC05B,EAAA,EAAD,CAAav/B,OAAQA,EAAQC,UAAWA,EAAW+b,KAAM,gBAE7DyZ,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,oBACX0c,EAAAj8B,EAAAqM,cAAC25B,EAAAhmC,EAAD,SAKZi8B,EAAAj8B,EAAAqM,cAAA4vB,EAAAj8B,EAAA+kB,SAAA,KACIkX,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,oBACX0c,EAAAj8B,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,oBAAqB,CAAEib,gBAAiBL,IAC9D5uB,MAAOA,EACP6U,IAAKsY,EACLjY,IAAI,MAGZya,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,kBACVmlB,YAAkB3T,GAAY,IAAMjlB,YAAYhH,GACjDm3B,EAAAj8B,EAAAqM,cAAC05B,EAAA,EAAD,CAAav/B,OAAQA,EAAQC,UAAWA,EAAW+b,KAAM,gBAE7DyZ,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,oBACX0c,EAAAj8B,EAAAqM,cAAC25B,EAAAhmC,EAAD,QAIZi8B,EAAAj8B,EAAAqM,cAAC45B,EAAA,EAAD,CAAcvlC,KAAMoE,EAAO4H,UAAQ,EAACysB,QAAM,EAACc,cAAY,EAACzX,KAAMyZ,EAAAj8B,EAAAqM,cAAC65B,EAAAlmC,EAAD,gBApVtD0f,IAAMC,WAmW9B4M,EAAU9L,aAAe,CACrB7U,KAAMgG,IACNiO,YAAaa,KAGF6L,oHCzXT4Z,cACF,SAAAA,EAAYnnB,GAAO,IAAA3f,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAA2mC,IACf9mC,EAAAC,OAAAse,EAAA,EAAAte,CAAAE,KAAAF,OAAAue,EAAA,EAAAve,CAAA6mC,GAAAxmC,KAAAH,KAAMwf,KAiBVonB,6BAA+B,SAAAjmC,GAAU,IAAA4e,EACP1f,EAAK2f,MAA3BxY,EAD6BuY,EAC7BvY,OAAQC,EADqBsY,EACrBtY,UAEZD,IAAWrG,EAAOyF,SAAWa,IAActG,EAAO2d,YAClDze,EAAK6kB,SAAS,CAAEmiB,SAAUvY,YAAgBtnB,EAAQC,MAtBvC,IAAAyZ,EAGe7gB,EAAK2f,MAA3BxY,EAHO0Z,EAGP1Z,OAAQC,EAHDyZ,EAGCzZ,UAHD,OAKfpH,EAAKukB,MAAQ,CACTyiB,SAAUvY,YAAgBtnB,EAAQC,IANvBpH,mFAWf+N,IAAa8T,GAAG,6BAA8B1hB,KAAK4mC,6EAInDh5B,IAAa5L,eAAe,6BAA8BhC,KAAK4mC,+DAW1D,IAAAre,EACwBvoB,KAAKwf,MAA1BwD,EADHuF,EACGvF,KAAM8jB,EADTve,EACSue,WAGd,OAFqB9mC,KAAKokB,MAAlByiB,SAEUC,EAAa9jB,SA/Bb9C,IAAMC,WA0ChCwmB,EAAY1lB,aAAe,CACvB+B,KAAM,KACN8jB,WAAY,MAGDH,wCC3Df3oB,EAAAC,EAAAC,EAAA,sBAAA6oB,IAAA/oB,EAAAC,EAAAC,EAAA,sBAAA8oB,IAOA,IAAIC,EAAgB,KAwCpB,SAASF,EAAiBG,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMlhC,OAAQ,OAAO,KAE1BihC,EAAgBA,GAzi+B,EAAS,GACJrhC,EAAI,EAAGA,EAAIohC,EAAMlhC,OAAQF,IAAK,CACnC,IAAImhC,EAAcnkC,IAAIokC,EAAMphC,IAGxB,OAAO,KAFPqhC,GAAUF,EAAchkC,IAAIikC,EAAMphC,IAM1C,MAAkB,KAAXqhC,EAAgB,KAAOA,EAGlC,IAAIC,EAAa,KAwCjB,SAASJ,EAAcE,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMlhC,OAAQ,OAAO,KAE1BohC,EAAaA,GAzCN,IAAIli+B,EAAS,GACJrhC,EAAI,EAAGA,EAAIohC,EAAMlhC,OAAQF,IAAK,CACnC,IAAIshC,EAAWtkC,IAAIokC,EAAMphC,IAGrB,OAAO,KAFPqhC,GAAUC,EAAWnkC,IAAIikC,EAAMphC,IAMvC,MAAkB,KAAXqhC,EAAgB,KAAOA,qMChG5BE,qNASFC,mBAAqB,SAAAn9B,GAAU,IAAAoV,EACG1f,EAAK2f,MAA3BxY,EADmBuY,EACnBvY,OAAQC,EADWsY,EACXtY,UAEZD,IAAWmD,EAAO/D,SAAWa,IAAckD,EAAOzH,IAClD7C,EAAK4hB,iBAIbkE,YAAc,SAAAna,GACVA,EAAMqa,qBAGV0hB,WAAa,SAAA/7B,GACTA,EAAMqa,kBADY,IAAAnF,EAGY7gB,EAAK2f,MAA3BxY,EAHU0Z,EAGV1Z,OAAQC,EAHEyZ,EAGFzZ,UAEV3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,OAAK3C,EACDyrB,YAAiBzrB,GAAiB,UAEtC0uB,YAAShsB,EAAQC,GAHI,yFAzBrB2G,IAAa8T,GAAG,mBAAoB1hB,KAAKsnC,mEAIzC15B,IAAa5L,eAAe,mBAAoBhC,KAAKsnC,qDA2BhD,IAAA/e,EACqCvoB,KAAKwf,MAAvCmB,EADH4H,EACG5H,QAASnJ,EADZ+Q,EACY/Q,EAAGxQ,EADfuhB,EACevhB,OAAQC,EADvBshB,EACuBthB,UAEtB3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GAErC8T,EAASzW,EAAiB0mB,YAAS1mB,GAAhB,KACnBC,EAAWD,EAAyBoT,YAAWpT,EAASkT,GAAnCA,EAAE,WACrBvR,EAAY+pB,YAAkBhpB,EAAQC,GAO5C,OALI8oB,YAAiBzrB,KACjByW,EAAQ,KACRxW,EAAUiT,EAAE,mBAIZyjB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,QAAQynB,YAAaxnC,KAAKunC,WAAYtnB,QAASjgB,KAAK2lB,aAC/DsV,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,iBACXkb,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClD9a,GAAag1B,EAAAz6B,EAAAqM,cAAC46B,EAAA,EAAD,CAAWzgC,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1Eg1B,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,iBACVhF,GACGkgB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,sBAAuBH,EAAQK,kBAAmBjG,GAEjFkgB,EAAAz6B,EAAAqM,cAAA,OAAKkT,UAAU,0BAA0Bxb,aAxD7C2b,IAAMC,YAqEpB4G,EAAUC,YACZ7F,IA1EW,SAAAC,GAAK,OAAAthB,OAAA4nC,EAAA,EAAA5nC,CAAA,GACbwhB,YAAaF,KAyEG,CAAEmG,WAAW,IAChCC,eAGWT,MAAQsgB,mJClFjBM,qNAqBFxK,wBAA0B,SAAAx8B,GAAU,IAAA4e,EACS1f,EAAK2f,MAAtCxY,EADwBuY,EACxBvY,OAAQC,EADgBsY,EAChBtY,UAAWhB,EADKsZ,EACLtZ,UAC3B,GAAKA,EAAL,CAFgC,IAIxBrB,EAAUqB,EAAVrB,MACHA,GAEDjE,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GAAatG,EAAOoH,SAAWnD,EAAMlC,IACtF7C,EAAK4hB,mGA3BT7hB,IAAU8hB,GAAG,qCAAsC1hB,KAAKm9B,yBACxDv9B,IAAU8hB,GAAG,iCAAkC1hB,KAAKm9B,yBACpDv9B,IAAU8hB,GAAG,oCAAqC1hB,KAAKm9B,yBACvDv9B,IAAU8hB,GAAG,wBAAyB1hB,KAAKm9B,yBAC3Cv9B,IAAU8hB,GAAG,mCAAoC1hB,KAAKm9B,yBACtDv9B,IAAU8hB,GAAG,iCAAkC1hB,KAAKm9B,yBACpDv9B,IAAU8hB,GAAG,qCAAsC1hB,KAAKm9B,wEAIxDv9B,IAAUoC,eAAe,qCAAsChC,KAAKm9B,yBACpEv9B,IAAUoC,eAAe,iCAAkChC,KAAKm9B,yBAChEv9B,IAAUoC,eAAe,oCAAqChC,KAAKm9B,yBACnEv9B,IAAUoC,eAAe,wBAAyBhC,KAAKm9B,yBACvDv9B,IAAUoC,eAAe,mCAAoChC,KAAKm9B,yBAClEv9B,IAAUoC,eAAe,iCAAkChC,KAAKm9B,yBAChEv9B,IAAUoC,eAAe,qCAAsChC,KAAKm9B,0DAe/D,IAAAzc,EACoC1gB,KAAKwf,MAAtCxY,EADH0Z,EACG1Z,OAAQC,EADXyZ,EACWzZ,UAAWhB,EADtBya,EACsBza,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGrB,EAAUqB,EAAVrB,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM+c,EAAMpN,YAAO3P,GACb82B,EAAY5E,YAAmBlyB,GAC/BgjC,EAAchZ,YAAa5nB,EAAQC,GAEzC,OACIw1B,EAAAj8B,EAAAqM,cAAA,OAAKkT,UAAU,cACX0c,EAAAj8B,EAAAqM,cAAA,OACIkT,UAAWe,IACP,mBACA,CAAE+mB,yBAA0BD,GAC5B,CAAEE,4BAA6BnmB,GAC/B,CAAEoa,gBAAiBL,IAEvB3Z,WAAW,EACXJ,IAAKA,EACLK,IAAI,aAvDA9B,IAAMC,YAoEfwnB,4JCjETI,cACF,SAAAA,EAAYvoB,GAAO,IAAA3f,EAAAC,OAAAq5B,EAAA,EAAAr5B,CAAAE,KAAA+nC,IACfloC,EAAAC,OAAAywB,EAAA,EAAAzwB,CAAAE,KAAAF,OAAA0wB,EAAA,EAAA1wB,CAAAioC,GAAA5nC,KAAAH,KAAMwf,KAsCVwoB,iCAAmC,SAACrnC,GAAW,IACnCqG,EAAWnH,EAAK2f,MAAhBxY,OACR,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAOgP,IAAU9P,IAAItC,EAAOyF,SAC7BrC,GAELlE,EAAK6kB,SAAS,CAAEujB,QAAS/vB,YAAYnU,OA/CtBlE,EAkDnBqoC,kCAAoC,SAACvnC,GAAW,IACpCqG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAOwnC,MAAM,UACjB,IAAK,sCAE0B,uBAAvBpkC,EAAKgO,KAAK,UACa,uBAAvBhO,EAAKgO,KAAK,UAEVlS,EAAK6kB,SAAS,CAAEujB,QAAS/vB,YAAYnU,KAEzC,MAEJ,IAAK,wCAE0B,oBAAvBA,EAAKgO,KAAK,UACa,mBAAvBhO,EAAKgO,KAAK,UAEVlS,EAAK6kB,SAAS,CAAEujB,QAAS/vB,YAAYnU,OAtElClE,EA6EnBuoC,2BAA6B,WACzBvoC,EAAK6kB,SAAS,CAAEujB,SAAUpoC,EAAKukB,MAAM6jB,UACrCpoC,EAAKwoC,wCA/EUxoC,EAkFnByoC,4BAA8B,WAAM,IACxBthC,EAAWnH,EAAK2f,MAAhBxY,OACAihC,EAAYpoC,EAAKukB,MAAjB6jB,QACFlkC,EAAOgP,IAAU9P,IAAI+D,GAC3B,GAAKjD,IACAA,EAAKqU,uBAEUF,YAAYnU,KACZkkC,GAApB,CAIA,IAAMM,EAAUN,EAAUO,IAAkBC,IACtCC,EAAuB5oC,OAAA+7B,EAAA,EAAA/7B,CAAA,GACtBiE,EAAKqU,sBADiB,CAEzBD,sBAAsB,EACtBE,SAAUkwB,IAGd1mC,IAAgBkJ,KAAK,CACjBjC,QAAS,8BACT1C,QAASY,EACToR,sBAAuBswB,MAxGZ,IAGP1hC,EAAWwY,EAAXxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACrBihC,EAAU/vB,YAAYnU,GALb,OAOflE,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZihC,QAASA,GAGbpoC,EAAKwoC,qCAAuCM,YAAS9oC,EAAKyoC,4BAA6BM,KAZxE/oC,mFA8BfkT,IAAU2O,GAAG,iCAAkC1hB,KAAKgoC,kCACpDzvB,IAAiBmJ,GAAG,kCAAmC1hB,KAAKkoC,kFAI5Dn1B,IAAU/Q,eAAe,iCAAkChC,KAAKgoC,kCAChEzvB,IAAiBvW,eAAe,kCAAmChC,KAAKkoC,sFArB5C1oB,EAAO4E,GACnC,GAAI5E,EAAMxY,SAAWod,EAAM0e,WAAY,KAC3B97B,EAAWwY,EAAXxY,OACFjD,EAAOgP,IAAU9P,IAAI+D,GACrBihC,EAAU/vB,YAAYnU,GAE5B,MAAO,CACH++B,WAAYtjB,EAAMxY,OAClBihC,QAASA,GAGjB,OAAO,YA3BoB/nB,IAAMC,WA8G1B4nB,ykBCnGTc,8MACFzkB,MAAQ,CACJ0kB,SAAU,QAGdC,gBAAkB,SAAAv9B,GACd3L,EAAK6kB,SAAS,CAAEokB,SAAUt9B,EAAMw9B,mBAGpCC,gBAAkB,WACdppC,EAAK6kB,SAAS,CAAEokB,SAAU,UAG9BI,kBAAoB,WAChBrpC,EAAKopC,kBADiB,IAGdE,EAAkBtpC,EAAK2f,MAAvB2pB,cACHA,GAELpO,WAAW,kBAAMoO,KAAiBnO,SAGtCoO,qBAAuB,WACnBvpC,EAAKopC,kBADoB,IAGjBI,EAAqBxpC,EAAK2f,MAA1B6pB,iBACHA,GAELtO,WAAW,kBAAMsO,KAAoBrO,SAGzCsO,iBAAmB,WACfzpC,EAAKopC,kBADgB,IAGbM,EAAiB1pC,EAAK2f,MAAtB+pB,aACHA,GAELA,6EAGK,IAAAhqB,EAC0Bvf,KAAKwf,MAA5BmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EAAGxQ,EADfuY,EACevY,OACZ8hC,EAAa9oC,KAAKokB,MAAlB0kB,SAER,OACIhpB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WACnBC,aAAW,SACXz/B,KAAMmT,QAAQ0rB,GACd7oB,QAASjgB,KAAK+oC,iBACdjpB,EAAAtf,EAAAqM,cAAC88B,EAAAnpC,EAAD,CAAgBuf,UAAU,0BAE9BD,EAAAtf,EAAAqM,cAAC+8B,EAAAppC,EAAD,CACIkC,GAAG,cACHomC,SAAUA,EACV7+B,KAAMmT,QAAQ0rB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBjgB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBL,QAAS3pB,KAAKipC,iBACdnpB,EAAAtf,EAAAqM,cAACud,EAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKkpC,kBAAmBc,UAAW1sB,aAActW,IAChE8Y,EAAAtf,EAAAqM,cAACo9B,EAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACq9B,EAAA1pC,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,EAAA3pC,EAAD,CAAc0/B,QAAS1oB,EAAE,kBAE7BsI,EAAAtf,EAAAqM,cAACud,EAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKopC,qBAAsBY,UAAWzsB,aAAiBvW,IACtE8Y,EAAAtf,EAAAqM,cAACo9B,EAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACg3B,EAAArjC,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,EAAA3pC,EAAD,CAAc0/B,QAAS1oB,EAAE,sBAE3BqE,aAAc7U,IACZ8Y,EAAAtf,EAAAqM,cAACud,EAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKspC,iBAAkBU,UAAWxsB,aAAaxW,IAC9D8Y,EAAAtf,EAAAqM,cAACo9B,EAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACu9B,GAAA5pC,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,EAAA3pC,EAAD,CAAc0/B,QAAS1oB,EAAE,oBAtF1B0I,IAAMC,WA2GlB4G,GALCC,YACZ7F,IA7GW,CACXsoB,WAAY,CACRviB,OAAQ,UA2GO,CAAEK,WAAW,IAChCC,cAGWT,CAAQ8hB,gICnIhB,SAASwB,GAAUC,GAAqB,IAAfC,EAAe7oC,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAC3C,GAAK4oC,EAAL,CAEA,GAAIC,GAASD,EAAKE,YAAcF,EAAKE,WAAWxkC,OAAS,EAAG,CACxD,IAAMykC,EAAWH,EAAKE,WAAWF,EAAKE,WAAWxkC,OAAS,GACpD0kC,EAAQ5lC,SAAS6lC,cACvBD,EAAME,SAASH,EAAUA,EAASzkC,QAClC0kC,EAAMG,UAAS,GAEf,IAAMC,EAAY/gC,OAAOghC,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBJ,EAAKY,UAAYZ,EAAKa,aAG1Bb,EAAKc,sBCfHz5B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGF05B,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPrhB,GACN,MAA0C,qBAA5BnqB,KAAKsrC,QAAQnhB,EAAEshB,UAEjCC,eANiB,SAMFvhB,GACX,MAA+C,qBAAjCnqB,KAAKurC,aAAaphB,EAAEshB,WAI1CJ,GAAMC,QAAQ35B,KAAqB,EACnC05B,GAAMC,QAAQ35B,KAAiB,EAC/B05B,GAAMC,QAAQ35B,KAAgB,EAC9B05B,GAAMC,QAAQ35B,KAAe,EAC7B05B,GAAMC,QAAQ35B,KAAkB,EAEhC05B,GAAME,aAAa55B,KAAmB,EACtC05B,GAAME,aAAa55B,KAAqB,EACxC05B,GAAME,aAAa55B,KAAqB,EACxC05B,GAAME,aAAa55B,KAAsB,wBCFnCg6B,uBACF,SAAAA,EAAYnsB,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2rC,IACf9rC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6rC,GAAAxrC,KAAAH,KAAMwf,KASV0M,QAAU,WACN,OAAOrsB,EAAK+rC,cAAche,QAAQie,WAXnBhsC,EAcnBurC,MAAQ,WAAmB,IAAlBb,EAAkB7oC,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAGvB2oC,GAFaxqC,EAAK+rC,cAAche,QAEhB2c,IAjBD1qC,EAoBnBisC,aAAe,WAAM,IAAAvsB,EACY1f,EAAK2f,MAA1BwG,EADSzG,EACTyG,OAAQ+lB,EADCxsB,EACDwsB,SACX/lB,GACA+lB,GAELA,EAAS/lB,EAAOtjB,KAzBD7C,EA4BnBmsC,YAAc,SAAAxgC,GAAS,IACXwa,EAAWnmB,EAAK2f,MAAhBwG,OAERxa,EAAMod,iBAEN,IAAM0hB,EAAOzqC,EAAK+rC,cAAche,QAC1B5nB,EAASskC,EAAK2B,QAAQjmC,OAEtB6X,GADYysB,EAAK2B,QAAQC,UAClBrsC,EAAKqsB,WAElBrsB,EAAK6kB,SAAS,CACVynB,aAAcnmC,EAAS6X,EAAK7X,SAGhCnE,KAAgBgH,aAAa,CACzBC,QAAS,yBACTpG,GAAIsjB,EAAOtjB,GACXmb,UA7CWhe,EAiDnBusC,cAAgB,SAAA5gC,GACZ,IAAM8+B,EAAOzqC,EAAK+rC,cAAche,QAC1Bse,EAAY5B,EAAK2B,QAAQC,UAEzBlmC,EADYnG,EAAKqsB,UACElmB,OAErBqmC,GAAe,EACbvB,EAAY/gC,OAAOghC,eACnBS,EAAYH,GAAMG,UAAUhgC,GAC5BkgC,EAAiBL,GAAMK,eAAelgC,GAM5C,OAJIs/B,IACAuB,IAAiBvB,EAAUwB,YAGvB9gC,EAAMiM,KACV,IAAK,YAED,IADa5X,EAAKqsB,UACP,KAAAxL,EACsB7gB,EAAK2f,MAA1BwG,EADDtF,EACCsF,OAAQ+lB,EADTrrB,EACSqrB,SAMhB,OALIA,GACAA,EAAS/lB,EAAOtjB,IAAI,GAGxB8I,EAAMod,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAL,EACsB1oB,EAAK2f,MAA7BwG,EADEuC,EACFvC,OAAQumB,EADNhkB,EACMgkB,YAMhB,OALIvmB,GAAUumB,GACVA,EAAYvmB,EAAOtjB,IAGvB8I,EAAMod,kBACC,EAEX,IAAK,UACD,IAAMkiB,EAAY/gC,OAAOghC,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMC,EAAanC,EAAKE,YAAcF,EAAKE,WAAWxkC,OAAS,EAAIskC,EAAKE,WAAW,GAAK,KAExF,IAAKiC,GAAe3B,EAAU4B,aAAeD,IAAe3B,EAAU6B,aAAe,KAAA5jB,EACjDlpB,EAAK2f,MAA7BwG,EADyE+C,EACzE/C,OAAQ4mB,EADiE7jB,EACjE6jB,YAMhB,OALIA,GACAA,EAAY5mB,EAAOtjB,IAGvB8I,EAAMod,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkiB,EAAY/gC,OAAOghC,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAWxkC,OAAS,EAAIskC,EAAKE,WAAWF,EAAKE,WAAWxkC,OAAS,GAAK,KAElG,IAAK6mC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAU7mC,OAAS,KAAAs+B,EACnEzkC,EAAK2f,MAA7BwG,EAD2Fse,EAC3Fte,OAAQumB,EADmFjI,EACnFiI,YAMhB,OALIA,GACAA,EAAYvmB,EAAOtjB,IAGvB8I,EAAMod,kBACC,GAOnB,SAAI4iB,IAAaE,OAIb1lC,GAAUkmC,IAAcG,KACxB7gC,EAAMod,kBACC,KAvII/oB,EA6InBitC,YAAc,SAAAthC,GACVA,EAAMod,iBAEN,IACMsjB,EADOrsC,EAAK+rC,cAAche,QACTqe,QAAQC,UAEzBpB,EAAY/gC,OAAOghC,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAYhsC,EAAKqsB,UACvB,KAAI2f,EAAU7lC,OAAS8kC,EAAU9kC,QAAUkmC,GAA3C,CAEA,IAAIc,EAAYxhC,EAAMyhC,cAAcC,QAAQ,cACvCF,IAELA,EAAYA,EAAUG,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDtB,EAAU7lC,OAAS+mC,EAAgB/mC,OAASgnC,EAAUhnC,OAASkmC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAU7lC,OAAS+mC,EAAgB/mC,SAEnFlB,SAASuoC,YAAY,cAAc,EAAOL,MA9J1CntC,EAAK+rC,cAAgB1rB,IAAMqb,YAE3B17B,EAAKukB,MAAQ,CACT+nB,aAAcmB,MANHztC,wEAoKV,IAAAqmC,EACkBlmC,KAAKwf,MAApBmB,EADHulB,EACGvlB,QAASnJ,EADZ0uB,EACY1uB,EACT20B,EAAiBnsC,KAAKokB,MAAtB+nB,aAER,OACIrsB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBACXD,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAK4rC,cACVlpC,GAAG,0BACH6qC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAaj2B,EAAE,UACfk2B,cAAaC,KACbC,kBAAiBN,KACjBO,QAAS7tC,KAAKgsC,YACd8B,UAAW9tC,KAAKosC,cAChB2B,QAAS/tC,KAAK8sC,cAElBhtB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCACXD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYxpB,QAASjgB,KAAK8rC,cACrDhsB,EAAAtf,EAAAqM,cAACmhC,GAAAxtC,EAAD,CAAW0hB,SAAS,YAG5BpC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,mCAADhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAwC6gB,EAAQ8F,aAAc,MACvF0lB,GAAgBwB,KAAqBM,MAClCnuB,EAAAtf,EAAAqM,cAACqhC,GAAA,EAAD,CACIC,MAAM,SACNpuB,UAAWY,EAAQytB,YACnBjsB,MAAOgqB,GAAgB,EAAI,gBAAkB,QAC7CtlB,QAAQ,aACPslB,WAnMMjsB,IAAMC,YAyNtB4G,GAPCC,YACZqnB,eACAltB,IAlOW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB2pC,WAAY,CACRjmB,QAAS,GAEb4qB,YAAa,CACThrB,SAAU,WACV+D,MAAO,GACPC,OAAQ,EACRknB,SAAU,GACVC,WAAY,SAEbjnB,aAAYlG,MAwNfoG,cACAgnB,eAGWznB,CAAQ4kB,ICtPhB,SAAS8C,GAAYvmB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAAShjB,QAAU0oC,KAXrBC,CAAgB3lB,GAAW,OAAO,EAEvC,IAAM4lB,EAAmB3lB,EAAQpd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QACvD,QAAI+wB,EAAiB5oC,QAAU,IAExB4oC,EAAiBtlB,MAAMulB,IASlC,SAASA,GAAc7oB,GACnB,QAAKA,MACAA,EAAOnI,MAELmI,EAAOnI,KAAK7X,QAAU2nC,oBC8E3BhuC,GAAQ,gBAlGV,SAAAmvC,IAAc,IAAAjvC,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA8uC,IACVjvC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAgvC,GAAA3uC,KAAAH,QAQJI,SAAW,SAAAO,KATGd,EAWd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,sBACDd,EAAKoB,IAAI,CACLyB,GAAIkW,KAAKI,MACTgQ,SAAU,GACVC,QAAS,KAGbppB,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBqoB,EAAaroB,EAAbqoB,SAERnpB,EAAKm9B,OAAOn9B,EAAKqoB,KAAM,CAAEc,aAEzBnpB,EAAKuB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnB+B,EAAa/B,EAAb+B,GAAImb,EAASld,EAATkd,KACJoL,EAAYppB,EAAKqoB,KAAjBe,QAERppB,EAAKm9B,OAAOn9B,EAAKqoB,KAAM,CAAEe,QAASA,EAAQtb,IAAI,SAAA/B,GAAC,OAAKA,EAAElJ,KAAOA,EAAT5C,OAAAuhB,EAAA,EAAAvhB,CAAA,GAAmB8L,EAAnB,CAAsBiS,SAAtB/d,OAAAuhB,EAAA,EAAAvhB,CAAA,GAAoC8L,OAExF/L,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBqlB,EAAWrlB,EAAXqlB,OACAiD,EAAYppB,EAAKqoB,KAAjBe,QAERppB,EAAKm9B,OAAOn9B,EAAKqoB,KAAM,CAAEe,QAAO,GAAA/d,OAAApL,OAAAypB,GAAA,EAAAzpB,CAAMmpB,GAAN,CAAejD,MAC/CnmB,EAAKuB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzB+B,EAAO/B,EAAP+B,GACAumB,EAAYppB,EAAKqoB,KAAjBe,QAERppB,EAAKm9B,OAAOn9B,EAAKqoB,KAAM,CAAEe,QAASA,EAAQpd,OAAO,SAAAD,GAAC,OAAIA,EAAElJ,KAAOA,MAC/D7C,EAAKuB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDd,EAAKoB,IAAI,MAETpB,EAAKuB,KAAK,yBAA0BT,KA3DlCd,EAmEd+B,iBAAmB,WACfC,KAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,KAAgBC,YAAY,eAAgBjC,EAAK8B,iBArEvC9B,EAwEdkC,oBAAsB,WAClBF,KAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,KAAgBG,eAAe,eAAgBnC,EAAK8B,iBAvEpD9B,EAAKqoB,KAAO,KAEZroB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KANXvJ,sEA6EPkvC,EAASC,GACZhvC,KAAKiB,IAAInB,OAAOk9B,OAAO,GAAI+R,EAASC,gCAGpC9mB,GACAloB,KAAKkoB,KAAOA,gDAIZ,IAAKloB,KAAKkoB,KAAM,OAAO,KACvB,IAAKumB,GAAYzuC,KAAKkoB,MAAO,OAAO,KAFlB,IAAA+mB,EAGYjvC,KAAKkoB,KAEnC,MAAO,CACHpf,QAAS,mBACTkgB,SAPcimB,EAGVjmB,SAKJC,QARcgmB,EAGAhmB,QAKGpd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QAAOlQ,IAAI,SAAA/B,GAAC,OAAIA,EAAEiS,qBA9F7C3R,eAoGxBnC,OAAOme,KAAOvoB,GACCA,UCrDTuvC,uBACF,SAAAA,EAAY1vB,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAkvC,IACfrvC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAovC,GAAA/uC,KAAAH,KAAMwf,KA8BV2vB,0BAA4B,SAAAxuC,GAAU,IAC1BunB,EAAS4mB,GAAT5mB,KAERroB,EAAK6kB,SAAS,CACV0qB,SAAS,EACTjD,aAAckD,KACdnnB,UArCWroB,EAyCnByvC,+BAAiC,SAAA3uC,GAAU,IAC/BunB,EAAS4mB,GAAT5mB,KAEFoiB,EAAOzqC,EAAK0vC,YAAY3hB,QACxB5nB,EAASskC,EAAK2B,QAAQjmC,OACtB6lC,EAAYvB,EAAKuB,UAEvBhsC,EAAK6kB,SAAS,CACVynB,aAAcnmC,EAAS6lC,EAAU7lC,OACjCkiB,UAlDWroB,EAsDnB2vC,uBAAyB,SAAA7uC,GAAU,IACvBunB,EAAS4mB,GAAT5mB,KAERroB,EAAK6kB,SAAS,CAAEwD,UAzDDroB,EA4DnB4vC,gCAAkC,SAAA9uC,GAAU,IAChCunB,EAAS4mB,GAAT5mB,KAERroB,EAAK6kB,SAAS,CAAEwD,QAAQ,WACpB6S,WAAW,WACMl7B,EAAK6vC,cAAczsC,IAAIilB,EAAKe,QAAQjjB,OAAS,GAErDolC,OAAM,QAnEJvrC,EAkFnBusC,cAAgB,SAAA5gC,GACZ,IAAM8+B,EAAOzqC,EAAK0vC,YAAY3hB,QACxBse,EAAY5B,EAAK2B,QAAQC,UAEzBlmC,EADYskC,EAAKuB,UACE7lC,OAErBqmC,GAAe,EACbvB,EAAY/gC,OAAOghC,eACnBS,EAAYH,GAAMG,UAAUhgC,GAC5BkgC,EAAiBL,GAAMK,eAAelgC,GAM5C,OAJIs/B,IACAuB,IAAiBvB,EAAUwB,YAGvB9gC,EAAMiM,KACV,IAAK,QACD,IAAKjM,EAAMmkC,SAIP,OAHA9vC,EAAK+vC,sBAAsB,GAE3BpkC,EAAMod,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkiB,EAAY/gC,OAAOghC,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAWxkC,OAAS,EAAIskC,EAAKE,WAAWF,EAAKE,WAAWxkC,OAAS,GAAK,KAElG,IAAK6mC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAU7mC,OAI1F,OAHAnG,EAAK+vC,sBAAsB,GAE3BpkC,EAAMod,kBACC,EAOnB,SAAI4iB,IAAaE,OAIb1lC,GAAUkmC,IAAcG,KACxB7gC,EAAMod,kBACC,KArII/oB,EA2InBitC,YAAc,SAAAthC,GACVA,EAAMod,iBAEN,IAAM0hB,EAAOzqC,EAAK0vC,YAAY3hB,QACxBse,EAAY5B,EAAK2B,QAAQC,UAEzBpB,EAAY/gC,OAAOghC,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAYvB,EAAKuB,UACvB,KAAIA,EAAU7lC,OAAS8kC,EAAU9kC,QAAUkmC,GAA3C,CAEA,IAAIc,EAAYxhC,EAAMyhC,cAAcC,QAAQ,cACvCF,IAEDnB,EAAU7lC,OAAS+mC,EAAgB/mC,OAASgnC,EAAUhnC,OAASkmC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAU7lC,OAAS+mC,EAAgB/mC,SAEnFlB,SAASuoC,YAAY,cAAc,EAAOL,MA7J3BntC,EAgKnBmsC,YAAc,SAAAxgC,GACVA,EAAMod,iBAEN,IAAM0hB,EAAOzqC,EAAK0vC,YAAY3hB,QAGxBie,EAAYvB,EAAKuB,UAGL,SAFAvB,EAAKuF,YAGnBvF,EAAKuB,UAAY,IAOrBhqC,KAAgBgH,aAAa,CACzBC,QAAS,2BACTkgB,SAAU6iB,KAnLChsC,EAuLnBiwC,gBAAkB,WAAM,IACZ5nB,EAASroB,EAAKukB,MAAd8D,KACR,GAAKA,KAEeA,EAAZe,QACIjjB,QAAU+pC,MAAtB,CAEA,IAAM/pB,EAAS,CACXtjB,GAAIkW,KAAKI,MACT6E,KAAM,IAGVhc,KAAgBgH,aAAa,CACzBC,QAAS,4BACTkd,aArMWnmB,EAyMnBmwC,mBAAqB,SAACttC,GAA0BhB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GAExC7B,EAAKowC,wBAAwBvtC,GAE7B7C,EAAKisC,aAAappC,IA7MP7C,EAiNnBisC,aAAe,SAAAppC,GACXb,KAAgBgH,aAAa,CACzBC,QAAS,+BACTpG,QApNW7C,EAwNnBowC,wBAA0B,SAAAvtC,GAAM,IACpBwlB,EAASroB,EAAKukB,MAAd8D,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBe,EAAYf,EAAZe,QAEFvW,EAAQuW,EAAQ2I,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOA,IACxCwtC,EAAYx9B,EAAQ,EACtBy9B,GAAe,EACVrqC,EAAI4M,EAAO5M,EAAImjB,EAAQjjB,OAAQF,IAAK,CAEzC,GADiBmjB,EAAQnjB,GAAjB+X,KACE,CACNsyB,GAAe,EACf,OAIJA,GACAtwC,EAAKmwC,mBAAmBttC,GAG5B,IAAM0tC,EAAWvwC,EAAK6vC,cAAczsC,IAAIitC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgBxqC,EAAK0vC,YAAY3hB,SAEd,KAjPR/tB,EAwPnBwwC,sBAAwB,SAAA3tC,GAAM,IAClBwlB,EAASroB,EAAKukB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAOpBgoB,EAHchoB,EAAZe,QAEc2I,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOA,IACpB,EAEpB0tC,EAAWvwC,EAAK6vC,cAAczsC,IAAIitC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgBxqC,EAAK0vC,YAAY3hB,SAEd,KArQR/tB,EA4QnB+vC,sBAAwB,SAAAltC,GAAM,IAClBwlB,EAASroB,EAAKukB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAIlBe,EAAYf,EAAZe,QAEFvW,EAAQuW,EAAQ2I,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOA,IACxCqvB,EAAYrf,EAAQ,EAEpB49B,EAAWzwC,EAAK6vC,cAAczsC,IAAI8uB,GACxC,GAAKue,EAULA,EAASlF,MAAMkF,GAAU,OAVzB,CACI,IAAMzyB,EAAOnL,GAAS,GAAKA,EAAQuW,EAAQjjB,OAASijB,EAAQvW,GAAOmL,KAAO,GAC1E,GAAIoL,EAAQjjB,SAAW6X,EACnB,OAGJhe,EAAKiwC,qBA5RMjwC,EAmSnB0wC,QAAU,WAAM,IACJroB,EAASroB,EAAKukB,MAAd8D,KACR,GAAKA,EAAL,CAFY,IAIJe,EAAYf,EAAZe,QAEFunB,EAAWT,KAAyB9mB,EAAQjjB,OAElD,OAAIwqC,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAAtlC,OAAsB6kC,KAAyB9mB,EAAQjjB,OAAvD,oBAlTenG,EAqTnB4wC,YAAc,YF9UX,SAAqBvoB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,QAAID,GAEGC,EAAQtd,KAAK,SAAAC,GAAC,OAAIwR,QAAQxR,EAAEiS,QE2U3B6yB,CAFa7wC,EAAKukB,MAAd8D,MAKJroB,EAAK8wC,yBAFL9wC,EAAK6kB,SAAS,CAAE0qB,SAAS,KAzTdvvC,EA+TnB+wC,WAAa,WAAM,IACPC,EAAWhxC,EAAK2f,MAAhBqxB,OAEFC,EAAmBhC,GAAUiC,sBAC9BD,IAELD,EAAOC,GAEPjxC,EAAK8wC,2BAvUU9wC,EA0UnBmxC,wBAA0B,WACtBnxC,EAAK6kB,SAAS,CAAE0qB,SAAS,KA3UVvvC,EA8UnB8wC,uBAAyB,WACrB9wC,EAAKmxC,0BAELnvC,KAAgBgH,aAAa,CACzBC,QAAS,4BA/UbjJ,EAAK0vC,YAAcrvB,IAAMqb,YACzB17B,EAAK6vC,cAAgB,IAAIxmC,IAEzBrJ,EAAKukB,MAAQ,CACT8D,KAAM,KACNknB,SAAS,EACTjD,aAAckD,MATHxvC,mFAcfivC,GAAUptB,GAAG,yBAA0B1hB,KAAKwvC,wBAC5CV,GAAUptB,GAAG,+BAAgC1hB,KAAKwvC,wBAClDV,GAAUptB,GAAG,sBAAuB1hB,KAAKmvC,2BACzCL,GAAUptB,GAAG,4BAA6B1hB,KAAKyvC,iCAC/CX,GAAUptB,GAAG,yBAA0B1hB,KAAKwvC,wBAC5CV,GAAUptB,GAAG,2BAA4B1hB,KAAKsvC,+EAI9CR,GAAU9sC,eAAe,yBAA0BhC,KAAKwvC,wBACxDV,GAAU9sC,eAAe,+BAAgChC,KAAKwvC,wBAC9DV,GAAU9sC,eAAe,sBAAuBhC,KAAKmvC,2BACrDL,GAAU9sC,eAAe,4BAA6BhC,KAAKyvC,iCAC3DX,GAAU9sC,eAAe,yBAA0BhC,KAAKwvC,wBACxDV,GAAU9sC,eAAe,2BAA4BhC,KAAKsvC,2EA4C3CnqB,EAAWC,EAAWC,GAAU,IAAA5a,EAAAzK,KAC9BA,KAAKokB,MAAd8D,OAEK9C,EAAU8C,MACnB6S,WAAW,WACPsP,GAAU5/B,EAAK8kC,YAAY3hB,SAAS,IACrC,oCAwQF,IAAAqjB,EAAAjxC,KAAAuf,EACkBvf,KAAKwf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAEmCnkB,KAAKokB,MAArC+nB,EAFHhoB,EAEGgoB,aAAciD,EAFjBjrB,EAEiBirB,QAASlnB,EAF1B/D,EAE0B+D,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAMe,EAAUf,EAAOA,EAAKe,QAAU,GAEtCjpB,KAAK0vC,cAActwB,QACnB,IAAMpc,EAAQimB,EAAQtb,IAAI,SAAC/B,EAAG9F,GAAJ,OACtBga,EAAAtf,EAAAqM,cAACqkC,GAAD,CACIpV,IAAK,SAAAqV,GAAE,OAAIF,EAAKvB,cAAczuC,IAAI6E,EAAGqrC,IACrC15B,IAAK7L,EAAElJ,GACPsjB,OAAQpa,EACRmgC,SAAUkF,EAAKjB,mBACfpD,YAAaqE,EAAKZ,sBAClB9D,YAAa0E,EAAKrB,0BAIpBwB,EAAerB,KAAyB9mB,EAAQjjB,OAAS,EACzDi3B,EAAOj9B,KAAKuwC,UAElB,OACIzwB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACIuf,UAAWY,EAAQ0wB,WACnBpnC,MAAI,EACJqgB,mBAAoB,EACpBX,QAAS3pB,KAAKywC,YACdlmB,kBAAgB,gBAChBzK,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,gBAAgB8U,EAAE,YAClCsI,EAAAtf,EAAAqM,cAAC4d,EAAAjqB,EAAD,CAAemgB,QAAS,CAAEgC,KAAMhC,EAAQ2wB,cACpCxxB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,qCACXD,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,UAAU0E,QAAQ,YAAY/Z,MAAO,CAAE0kC,SAAU,IAC9Dh6B,EAAE,aAEN20B,GAAgBuC,KAAuB+C,MACpC3xB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAOgqB,GAAgB,EAAI,gBAAkB,QAAStlB,QAAQ,aACrEslB,IAIbrsB,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAKuvC,YACV7sC,GAAG,8BACH6qC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAaj2B,EAAE,gBACfk2B,cAAagB,KACbd,kBAAiByB,KACjBtB,QAAS/tC,KAAK8sC,YACdgB,UAAW9tC,KAAKosC,cAChByB,QAAS7tC,KAAKgsC,cAElBlsB,EAAAtf,EAAAqM,cAAC6kC,GAAAlxC,EAAD,CAASuf,UAAWY,EAAQgxB,cAC5B7xB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,UAAU0E,QAAQ,aAC/BrP,EAAE,gBAEPsI,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,CAAMmgB,QAAS,CAAEgC,KAAMhC,EAAQkxB,WAC1B7uC,EACAouC,GACGtxB,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CACI0e,UAAU,EACVa,UAAWY,EAAQoxB,SACnBC,QAAM,EACN/xB,QAASjgB,KAAK8vC,iBACdhwB,EAAAtf,EAAAqM,cAACs9B,EAAA3pC,EAAD,CAAcyxC,mBAAiB,EAAC/R,QAAS1oB,EAAE,mBAIvDsI,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,KAAay8B,IAEjBnd,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAKywC,aACjCj5B,EAAE,WAENi3B,GAAYvmB,IACTpI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAK4wC,YACjCp5B,EAAE,WAKnBsI,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACIuf,UAAWY,EAAQ0wB,WACnBpnC,KAAMmlC,EACN9kB,mBAAoB,EACpBX,QAAS3pB,KAAKgxC,wBACdzmB,kBAAgB,gBAChBzK,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,gBAAgB8U,EAAE,yBAClCsI,EAAAtf,EAAAqM,cAAC4d,EAAAjqB,EAAD,CAAemgB,QAAS,CAAEgC,KAAMhC,EAAQ2wB,cAAgB95B,EAAE,wBAC1DsI,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAKgxC,yBACjCx5B,EAAE,WAEPsI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAK2wC,wBACjCn5B,EAAE,iBAvbA0I,IAAMC,YA2ctB4G,GAPCC,YACZqnB,eACAltB,IA3dW,SAAAC,GAAK,MAAK,CACrBiwB,WAAY,CACRlvB,MAAOf,EAAMkU,QAAQzX,KAAKqiB,SAE9BoR,YAAa,CACT3hC,MAAO,KAEXgiC,YAAa,CACTzqB,OAAQ,aAEZ2qB,SAAU,CACN3qB,OAAQ,WAEZ6qB,SAAU,CACNvuB,QAAS,YACTrB,MAAO,UACPtS,OAAQ,IAEZqiC,eAAgB,MA0chB1qB,cACAgnB,eAGWznB,CAAQmoB,mCC1ejBiD,sNACF1B,YAAc,WACV5uC,KAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQnH,EAAK2f,MAAMxY,OACnBC,UAAW,6EAIV,IAAAsY,EACkCvf,KAAKwf,MAApCmB,EADHpB,EACGoB,QAAS3Z,EADZuY,EACYvY,OAAQC,EADpBsY,EACoBtY,UACzB,OAAKD,GACAC,EAGD6Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BACXD,EAAAtf,EAAAqM,cAACulC,GAAA5xC,EAAD,CAAWuf,UAAWY,EAAQ0xB,aAElCvyB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iCACXD,EAAAtf,EAAAqM,cAACylC,GAAA,EAAD,CAAOtrC,OAAQA,EAAQC,UAAWA,KAEtC6Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ4xB,gBAAiB7I,aAAW,QAAQzpB,QAASjgB,KAAKywC,aAC7E3wB,EAAAtf,EAAAqM,cAACmhC,GAAAxtC,EAAD,SAbI,YAXC0f,IAAMC,YAqCpBgB,OA/CA,SAAAC,GAAK,MAAK,CACrBixB,UAAW,CACP7uB,QAAS,GACTrB,MAAOf,EAAMkU,QAAQ5f,OAAOwuB,QAEhCqO,gBAAiB,CACbrrB,OAAQ,KAyCD/F,CAAmBgxB,IC1BnBK,cA3BX,SAAAA,EAAYxrC,GAASlH,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAwyC,GACjBxyC,KAAKgH,OAASA,EACdhH,KAAKyyC,WAAa,2DAGZ/8B,GACN,GAAK1V,KAAKgH,OAAV,CAEA,GAAIhH,KAAKyyC,YAAczyC,KAAKyyC,WAAW,WAAa/8B,EAAO,SAAU,CACjE,IAAIsD,EAAM,IAAIJ,KAEd,GADAI,EAAI05B,WAAW15B,EAAI25B,aAAeC,OAC9B5yC,KAAK6yC,gBAAkB7yC,KAAK6yC,eAAiB75B,EAC7C,OAIRhZ,KAAKyyC,WAAa/8B,EAClB1V,KAAK6yC,eAAiB,IAAIj6B,KAE1B/W,KAAgBkJ,KAAK,CACjBjC,QAAS,iBACT1C,QAASpG,KAAKgH,OACd0O,OAAQA,wECKdo9B,WAAoB5yB,IAAM6yB,KAAK,kBAAMppC,QAAAqpC,IAAA,CAAAh1B,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA9e,KAAA2S,EAAAi1B,KAAA,cAYrCC,eACF,SAAAA,EAAY1zB,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAkzC,IACfrzC,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAozC,GAAA/yC,KAAAH,KAAMwf,KAgEV2zB,0BAA4B,SAAAxyC,GAAU,IACjB0C,EAAS1C,EAAlByE,QACR,GAAK/B,EAAL,CAFkC,IAI1B+B,EAAsC/B,EAAtC+B,QAASqB,EAA6BpD,EAA7BoD,UAAWkJ,EAAkBtM,EAAlBsM,MAAOE,EAAWxM,EAAXwM,OACnC,GAAKzK,EAAL,CAEAvF,EAAKuzC,cAAcxlB,QAAQie,UAAY,KACvChsC,EAAKuzC,cAAcxlB,QAAQylB,YAAc,KACzCxzC,EAAKgwC,UAAY,KAEjB,IAAMtrC,EAAU,CACZuE,QAAS,sBACT1D,QAAS,CACL0D,QAAS,cACTpG,GAAI0C,EAAQ1C,IAEhBiN,QACAE,UAGJ,GAAIpJ,EAAW,KACI6sC,EAAmD7sC,EAA1DkJ,MAA+B4jC,EAA2B9sC,EAAnCoJ,OAAyBjL,EAAU6B,EAAV7B,MAExDL,EAAQkC,UAAY,CAChBA,UAAW,CACPqC,QAAS,cACTpG,GAAIkC,EAAMlC,IAEdiN,MAAO2jC,EACPzjC,OAAQ0jC,GAIhB1zC,EAAK2zC,eAAejvC,GAAS,EAAM,SAAA4F,MAEnCtI,KAAgBgH,aAAa,CACzBC,QAAS,gCACTm0B,KAAM,UAvGKp9B,EA2GnB4zC,oBAAsB,SAAA9yC,GAAU,IACZ+yC,EAAkB7zC,EAAKukB,MAA/Bpd,OACAA,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEZysC,IAAkB1sC,IAItBnH,EAAK6kB,SAAS,CAAE3G,iBAAkB9W,IAE9BA,GACApH,EAAK8zC,kBAtHM9zC,EA0HnB+zC,qBAAuB,SAAAjzC,GACAd,EAAKukB,MAAhBpd,SACOrG,EAAOkzC,aAEtBh0C,EAAKgwC,UAAY,KACjBhwC,EAAK6kB,SAAS,CACV1d,OAAQrG,EAAOkzC,WACf91B,iBAAkBD,aAA6Bnd,EAAOkzC,YACtDC,iBAAiB,MAlINj0C,EAsInBk0C,SAAW,WAAM,IACL/sC,EAAWnH,EAAKukB,MAAhBpd,OAEFgtC,EAAUn0C,EAAKuzC,cAAcxlB,QAE7BqmB,EAAQt2B,aAAa3W,GACvBitC,GACAD,EAAQnI,UAAYoI,EAAMp2B,KAC1Bhe,EAAKgwC,UAAYoE,EAAMp2B,OAEvBm2B,EAAQnI,UAAY,KACpBhsC,EAAKgwC,UAAY,OAjJNhwC,EAsKnB8zC,cAAgB,WACZ5Y,WAAW,WACP,GAAIl7B,EAAKuzC,cAAcxlB,QAAS,CAC5B,IAAMomB,EAAUn0C,EAAKuzC,cAAcxlB,QAEnC,GAAIomB,EAAQxJ,WAAWxkC,OAAS,EAAG,CAC/B,IAAM0kC,EAAQ5lC,SAAS6lC,cACvBD,EAAME,SAASoJ,EAAQxJ,WAAW,GAAIwJ,EAAQxJ,WAAW,GAAGxkC,QAC5D0kC,EAAMG,UAAS,GAEf,IAAMC,EAAY/gC,OAAOghC,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBsJ,EAAQ5I,UAEb,MAtLYvrC,EAyLnBq0C,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9BntC,EAAyBmtC,EAAzBntC,OAAQotC,EAAiBD,EAAjBC,aACXptC,GAELnF,KAAgBkJ,KAAK,CACjBjC,QAAS,sBACT1C,QAASY,EACT+M,cAAeqgC,MAlMJv0C,EAsMnBw0C,uBAAyB,SAACrtC,EAAQ+W,GAC9B,IAAIha,EAAOgP,KAAU9P,IAAI+D,GACzB,GAAKjD,EAAL,CACA,IAAMuwC,EAAWz0C,EAAK00C,eAElBC,EAAgB,GAChBC,EAA2B,EACvB1gC,EAAkBhQ,EAAlBgQ,cACR,GAAIA,GAAiBA,EAAc6J,oBAAsB7J,EAAc6J,mBAAmBC,KAAM,KACpFtM,EAA4CwC,EAA5CxC,oBAAqBqM,EAAuB7J,EAAvB6J,mBAE7B62B,EAA2BljC,EACvBqM,GAAsBA,EAAmBC,OACzC22B,EAAgB52B,EAAmBC,KAAKA,MAIhD,OAAIy2B,IAAaE,GAAiBz2B,IAAqB02B,EAgB5C,CAAEztC,OAAQA,EAAQotC,aAfJ,CACjBtrC,QAAS,eACTyI,oBAAqBwM,EACrBH,mBAAoB,CAChB9U,QAAS,mBACT+U,KAAM,CACF/U,QAAS,gBACT+U,KAAMy2B,EACNlpB,SAAU,MAEdspB,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQ90C,EA6OnB+0C,aAAe,WACX,IAAI/2B,EAAOhe,EAAK00C,eAMhB,GAJA10C,EAAKuzC,cAAcxlB,QAAQie,UAAY,KACvChsC,EAAKuzC,cAAcxlB,QAAQylB,YAAc,KACzCxzC,EAAKgwC,UAAY,KAEZhyB,EAAL,CAEA,IAAMtZ,EAAU,CACZuE,QAAS,mBACT+U,KAAMhe,EAAKg1C,WAAWh3B,GACtB62B,0BAA0B,EAC1BC,aAAa,GAGjB90C,EAAK2zC,eAAejvC,GAAS,EAAO,SAAA4F,QA7PrBtK,EAgQnBg1C,WAAa,SAACh3B,GACV,IAAIuN,EAAWvrB,EAAKi1C,cAAcj3B,GAGlC,OAFAA,EAAOhe,EAAKk1C,cAAcl3B,EAAMuN,GAChC1nB,QAAQ4F,IAAI8hB,GACL,CACHtiB,QAAS,gBACT+U,KAAMA,EACNuN,SAAUA,IAvQCvrB,EA2QnBm1C,WAAa,SAACjjC,EAAMwZ,EAAQvlB,EAAQijB,GAChC,MAAO,CACHngB,QAAS,aACT9C,OAAQA,EACRulB,OAAQA,EACRxZ,KAAMjS,OAAOk9B,OAAO,CAChBl0B,QAASiJ,GACVkX,GAAW,MAlRHppB,EAuRnBi1C,cAAgB,SAACj3B,EAAMoL,GACnB,IAuDIgsB,EAtDEC,EAAM,CAAC,UAAU,KAAK,UAAU,cAAc,SAAS,QAAQ,KAAK,QAAQ,KAAK,OAAO,KAAK,KAAK,SAAS,KAAK,WAAW,KAAK,YAAY,SAAS,KAAK,YAAY,KAAK,UAAU,KAAK,aAAa,KAAK,YAAY,KAAK,QAAQ,OAAO,OAAO,KAAK,OAAO,aAAa,KAAK,WAAW,KAAK,UAAU,QAAQ,QAAQ,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO,OAAO,MAAM,cAAc,WAAW,WAAW,SAAS,KAAK,KAAK,KAAK,OAAO,SAAS,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM,OAAO,QAAQ,MAAM,MAAM,KAAK,QAAQ,cAAc,YAAY,OAAO,KAAK,MAAM,KAAK,aAAa,KAAK,MAAM,WAAW,KAAK,WAAW,KAAK,KAAK,WAAW,QAAQ,WAAW,WAAW,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,MAAM,SAAS,OAAO,iBAAiB,QAAQ,WAAW,UAAU,UAAU,QAAQ,OAAO,SAAS,UAAU,UAAU,OAAO,OAAO,MAAM,WAAW,KAAK,KAAK,SAAS,MAAM,OAAO,KAAK,KAAK,KAAK,UAAU,OAAO,QAAQ,YAAY,SAAS,SAAS,KAAK,QAAQ,OAAO,KAAK,KAAK,SAAS,WAAW,QAAQ,SAAS,WAAW,OAAO,KAAK,KAAK,KAAK,QAAQ,QAAQ,SAAS,UAAU,UAAU,MAAM,YAAY,UAAU,WAAW,SAAS,eAAe,aAAa,cAAc,UAAU,OAAO,OAAO,UAAU,KAAK,SAAS,aAAa,UAAU,MAAM,UAAU,KAAK,aAAa,KAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,SAAS,MAAM,OAAO,KAAK,QAAQ,SAAS,WAAW,WAAW,SAAS,UAAU,OAAO,SAAS,MAAM,WAAW,OAAO,UAAU,SAAS,YAAY,WAAW,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,UAAU,SAAS,SAAS,OAAO,KAAK,MAAM,KAAK,MAAM,YAAY,KAAK,KAAK,QAAQ,SAAS,SAAS,WAAW,cAAc,cAAc,YAAY,KAAK,KAAK,MAAM,SAAS,KAAK,KAAK,aAAa,MAAM,SAAS,WAAW,WAAW,SAAS,UAAU,OAAO,OAAO,UAAU,WAAW,KAAK,UAAU,YAAY,WAAW,OAAO,UAAU,MAAM,UAAU,KAAK,KAAK,UAAU,UAAU,UAAU,WAAW,MAAM,KAAK,KAAK,MAAM,UAAU,aAAa,KAAK,MAAM,UAAU,OAAO,YAAY,SAAS,KAAK,MAAM,UAAU,SAAS,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,QAAQ,QAAQ,KAAK,QAAQ,MAAM,SAAS,QAAQ,KAAK,QAAQ,MAAM,MAAM,KAAK,OAAO,SAAS,MAAM,MAAM,KAAK,KAAK,KAAK,WAAW,SAAS,QAAQ,QAAQ,KAAK,KAAK,KAAK,QAAQ,UAAU,OAAO,KAAK,KAAK,UAAU,UAAU,OAAO,aAAa,OAAO,OAAO,SAAS,SAAS,MAAM,KAAK,KAAK,KAAK,WAAW,UAAU,QAAQ,QAAQ,OAAO,UAAU,QAAQ,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO,aAAa,KAAK,aAAa,OAAO,MAAM,MAAM,YAAY,SAAS,MAAM,gBAAgB,cAAc,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,QAAQ,KAAK,KAAK,OAAO,SAAS,KAAK,SAAS,SAAS,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM,UAAU,OAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,MAAM,OAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,UAAU,OAAO,MAAM,UAAU,SAAS,KAAK,KAAK,MAAM,QAAQ,QAAQ,OAAO,KAAK,OAAO,OAAO,WAAW,UAAU,OAAO,OAAO,KAAK,QAAQ,SAAS,QAAQ,QAAQ,KAAK,KAAK,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK,KAAK,KAAK,SAAS,SAAS,aAAa,QAAQ,SAAS,YAAY,WAAW,KAAK,KAAK,KAAK,QAAQ,OAAO,YAAY,OAAO,WAAW,OAAO,KAAK,KAAK,QAAQ,MAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,OAAO,MAAM,SAAS,QAAQ,SAAS,WAAW,SAAS,cAAc,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,SAAS,OAAO,OAAO,KAAK,KAAK,MAAM,UAAU,UAAU,MAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,OAAO,QAAQ,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,UAAU,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,UAAU,QAAQ,SAAS,MAAM,KAAK,QAAQ,WAAW,QAAQ,QAAQ,KAAK,KAAK,KAAK,KAAK,WAAW,QAAQ,cAAc,SAAS,SAAS,OAAO,WAAW,OAAO,QAAQ,KAAK,KAAK,QAAQ,WAAW,KAAK,KAAK,OAAO,QAAQ,OAAO,OAAO,KAAK,QAAQ,QAAQ,MAAM,OAAO,cAAc,OAAO,aAAa,WAAW,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,OAAO,SAAS,KAAK,UAAU,UAAU,MAAM,QAAQ,QAAQ,SAAS,OAAO,MAAM,UAAU,SAAS,SAAS,aAAa,OAAO,aAAa,UAAU,OAAO,MAAM,MAAM,KAAK,QAAQ,QAAQ,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,KAAK,WAAW,OAAO,UAAU,OAAO,OAAO,KAAK,KAAK,MAAM,MAAM,UAAU,SAAS,UAAU,UAAU,OAAO,KAAK,KAAK,WAAW,MAAM,OAAO,KAAK,KAAK,UAAU,QAAQ,UAAU,KAAK,UAAU,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,SAAS,WAAW,OAAO,QAAQ,YAAY,MAAM,QAAQ,UAAU,KAAK,KAAK,QAAQ,KAAK,WAAW,SAAS,UAAU,OAAO,UAAU,SAAS,KAAK,KAAK,KAAK,SAAS,UAAU,KAAK,SAAS,QAAQ,SAAS,MAAM,KAAK,KAAK,aAAa,MAAM,UAAU,SAAS,KAAK,KAAK,KAAK,SAAS,OAAO,QAAQ,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,QAAQ,QAAQ,QAAQ,MAAM,UAAU,OAAO,OAAO,KAAK,KAAK,QAAQ,WAAW,SAAS,QAAQ,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,aAAa,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,YAAY,KAAK,KAAK,QAAQ,WAAW,eAAe,MAAM,KAAK,KAAK,SAAS,QAAQ,SAAS,SAAS,aAAa,KAAK,QAAQ,OAAO,SAAS,OAAO,SAAS,KAAK,QAAQ,OAAO,QAAQ,SAAS,UAAU,MAAM,UAAU,KAAK,UAAU,OAAO,OAAO,cAAc,MAAM,OAAO,QAAQ,QAAQ,KAAK,MAAM,MAAM,eAAK,eAAK,eAAK,eAAK,2BAAO,eAAK,2BAAO,eAAK,eAAK,eAAK,qBAAM,uCAAS,qBAAM,uCAAS,2BAAO,qBAAM,qBAAM,qBAAM,eAAK,qEAAc,eAAK,eAAK,eAAK,2BAAO,qBAAM,qBAAM,eAAK,eAAK,eAAK,eAAK,iCAAQ,2BAAO,2BAAO,2BAAO,eAAK,iCAAQ,eAAK,qBAAM,eAAK,eAAK,eAAK,eAAK,qBAAM,6CAAU,2BAAO,iCAAQ,uCAAS,iCAAQ,uCAAS,iCAAQ,uCAAS,mDAAW,uCAAS,2BAAO,eAAK,eAAK,2BAAO,qBAAM,iCAAQ,qBAAM,eAAK,2BAAO,qBAAM,2BAAO,eAAK,2BAAO,eAAK,eAAK,sBAAmB,uBAAoB,eAAK,qBAAM,qBAAM,eAAK,uCAAS,6CAAU,qBAAM,uCAAS,eAAK,MAAM,MAAM,SAAS,SAAS,KAAK,OAAO,WAAW,UAAU,KAAK,KAAK,MAAM,KAAK,OAAO,UAAU,MAgD74LC,EAAc,4JAEdC,EAAa,IAAIC,OAAO,+zMAAoK,KAElMpsB,EAAUA,GAAW,GAUrB,IAPA,IAIAqsB,EAJIC,EAAM13B,EACNuN,EAAW,GAIXoqB,EAAY,EAERP,EAAQM,EAAIN,MAAMG,IAAc,CAGpC,GAFAE,EAAaE,EAAYP,EAAMviC,MAE3BuiC,EAAM,GACN7pB,EAAS5hB,KAAK3J,EAAKm1C,WACf,wBACAM,EAAaL,EAAM,GAAGjvC,OACtBivC,EAAM,GAAGjvC,OAASivC,EAAM,GAAGjvC,cAE5B,GAAIivC,EAAM,GACb,GAAIE,EAAYM,KAAKR,EAAM,IACvB7pB,EAAS5hB,KAAK3J,EAAKm1C,WACf,6BACAM,EACAL,EAAM,GAAGjvC,aAEV,CACH,IAAIyC,GAAM,EACNitC,EAAWT,EAAM,GACjBU,EAAMV,EAAM,GAGhB,GAAIU,GAKA,GAJKD,GAAkC,SAArBC,EAAIvI,OAAO,EAAG,KAAqD,IAApC8H,EAAIU,QAAQD,EAAIrhC,iBAC7DohC,EAAW,WAGXA,EAAU,KAiBNG,EAhBJ,SAAwBptC,GAKpB,IAJA,IAAIqtC,EAAYrtC,EAAIzC,OAChB+vC,EAAkBttC,EAAIuM,MAAM,KAAKhP,OAAS,EAC1CgwC,EAAmBvtC,EAAIuM,MAAM,KAAKhP,OAAS,EAExCgwC,EAAmBD,GACQ,MAA9BttC,EAAIyS,OAAO46B,EAAY,IACvBrtC,EAAMA,EAAI2kC,OAAO,EAAG0I,EAAY,GAChCE,IACAF,IAKJ,OAHIC,EAAkBC,IAClBvtC,EAAMA,EAAI0kC,QAAQ,OAAQ,KAEvB1kC,EAEIwtC,CAAchB,EAAM,IAE/BY,EAAS7vC,SAAWivC,EAAM,GAAGjvC,SAClBivC,EAAM,GAAGhqB,UAAU4qB,EAAS7vC,QACvCivC,EAAM,GAAKY,GAGfptC,GAAOwsC,EAAM,GAAK,GAAKS,GAAYT,EAAM,SAG7CxsC,GAAOwsC,EAAM,GAAK,GAAK,WAAaA,EAAM,GAG1CxsC,GACA2iB,EAAS5hB,KAAK3J,EAAKm1C,WACf,oBACAM,EACAL,EAAM,GAAGjvC,cAIdivC,EAAM,IAMNA,EAAM,KAWNA,EAAM,IACb7pB,EAAS5hB,KAAK3J,EAAKm1C,WACf,wBACAM,EAAaL,EAAM,GAAGjvC,OACtBivC,EAAM,IAAIjvC,SAEPivC,EAAM,KACb7pB,EAAS5hB,KAAK3J,EAAKm1C,WACf,2BACAM,EAAaL,EAAM,IAAIjvC,OACvB,EAAIivC,EAAM,IAAIjvC,QAAUivC,EAAM,IAAM,EAAIA,EAAM,IAAIjvC,OAAS,MAGnEuvC,EAAMA,EAAInI,OAAO6H,EAAMviC,MAAQuiC,EAAM,GAAGjvC,QACxCwvC,GAAaP,EAAMviC,MAAQuiC,EAAM,GAAGjvC,OAGxC,OAAOolB,GA1bQvrB,EA4bnBk1C,cAAgB,SAACl3B,EAAMuN,EAAU8qB,GAC7B,IAAMC,EAAmB,CACrBC,IAAK,qBACLC,KAAM,qBACNC,GAAM,wBAGJC,EAAiB,qHAEvB,IAH2B,SAGHd,KAAK53B,GACzB,OAAOq4B,EAASr4B,EAAOA,EAAKqZ,OAOhC,IALA,IACI+d,EAGAK,EAJAC,EAAM13B,EAEN24B,EAAU,GACVhB,EAAY,EAETP,EAAQM,EAAIN,MAAMsB,IAAiB,CACtCjB,EAAaE,EAAYP,EAAMviC,MAC/B8jC,EAAQhtC,KAAK+rC,EAAInI,OAAO,EAAG6H,EAAMviC,QAGjC8iC,IADI33B,EAAQo3B,EAAM,IAAMA,EAAM,IAAMA,EAAM,KACxBjvC,OAElBwvC,IADA33B,EAAOA,EAAKsvB,QAAQ,aAAc,KAChBnnC,OAEd6X,EAAKo3B,MAAM,QACXuB,EAAQhtC,KAAKyrC,EAAM,IACZA,EAAM,IACG,MAAZA,EAAM,KACNA,EAAM,GAAK,GACXO,GAAa,GAEjBgB,EAAQhtC,KAAKyrC,EAAM,GAAKp3B,EAAOo3B,EAAM,IAErC7pB,EAAS5hB,KAAK3J,EAAKm1C,WACf,oBACAM,EAAaL,EAAM,GAAGjvC,OACtB6X,EAAK7X,OACL,CAACywC,SAAU,MAEfjB,GAAaP,EAAM,GAAGjvC,OAASivC,EAAM,GAAGjvC,QACjCivC,EAAM,IACbuB,EAAQhtC,KAAKyrC,EAAM,GAAKp3B,EAAOo3B,EAAM,IAErC7pB,EAAS5hB,KAAK3J,EAAKm1C,WACfmB,EAAiBlB,EAAM,IACvBK,EAAaL,EAAM,GAAGjvC,OACtB6X,EAAK7X,SAETwvC,GAA+B,EAAlBP,EAAM,GAAGjvC,QACfivC,EAAM,MACbuB,EAAQhtC,KAAKqU,GACbuN,EAAS5hB,KAAK3J,EAAKm1C,WACf,4BACAM,EACAz3B,EAAK7X,OACL,CAACiJ,QAASgmC,EAAM,OAEpBO,GAAaP,EAAM,GAAGjvC,OAAS6X,EAAK7X,QAExCuvC,EAAMA,EAAInI,OAAO6H,EAAMviC,MAAQuiC,EAAM,GAAGjvC,QACxCwvC,GAAaP,EAAMviC,MAAQuiC,EAAM,GAAGjvC,OAYxC,OAVAwwC,EAAQhtC,KAAK+rC,IACbiB,EAAUA,EAAQvU,KAAK,KAEVkL,QAAQ,OAAQ,IAAInnC,SAC7BwwC,EAAU34B,EACVuN,EAASsrB,OAAO,EAAGtrB,EAASplB,SAE3BolB,EAASplB,QAAWkwC,IACrBM,EAAUA,EAAQtf,QAEfsf,GAtgBQ32C,EA0gBnBypC,iBAAmB,WACfznC,KAAgBgH,aAAa,CACzBC,QAAS,yBA5gBEjJ,EAghBnBqpC,kBAAoB,WACXrpC,EAAK82C,gBAEV92C,EAAK82C,eAAe/oB,QAAQvgB,SAnhBbxN,EAshBnB+2C,0BAA4B,WACxB,IAAIC,EAAQh3C,EAAK82C,eAAe/oB,QAAQipB,MACnB,IAAjBA,EAAM7wC,SAEV8wC,MAAMxyB,KAAKuyB,GAAOzzC,QAAQ,SAAAlC,GACtB61C,aAAc71C,EAAM,SAAAiJ,GAChBtK,EAAKm3C,gBAAgB7sC,OAI7BtK,EAAK82C,eAAe/oB,QAAQnY,MAAQ,KAhiBrB5V,EAmiBnBupC,qBAAuB,WACdvpC,EAAKo3C,mBAEVp3C,EAAKo3C,kBAAkBrpB,QAAQvgB,SAtiBhBxN,EAyiBnBq3C,6BAA+B,WAC3B,IAAIL,EAAQh3C,EAAKo3C,kBAAkBrpB,QAAQipB,MACtB,IAAjBA,EAAM7wC,SAEV8wC,MAAMxyB,KAAKuyB,GAAOzzC,QAAQ,SAAAlC,GACtBrB,EAAKs3C,mBAAmBj2C,KAG5BrB,EAAKo3C,kBAAkBrpB,QAAQnY,MAAQ,KAjjBxB5V,EA+jBnBu3C,YAAc,WAAM,IACRpwC,EAAWnH,EAAKukB,MAAhBpd,OAER,IAAI4T,aAAS5T,GAAb,CAEA,IAAMjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAM8nC,EAAYhsC,EAAKuzC,cAAcxlB,QAAQie,UACvCgE,EAAYhwC,EAAKuzC,cAAcxlB,QAAQiiB,UAM7C,GAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEhwC,EAAKuzC,cAAcxlB,QAAQiiB,UAAY,IAGtChE,GAEiB9nC,EAAKyuC,sBAAwBzuC,EAAKyuC,oBAAsB,IAAIA,GAAoBzuC,EAAKrB,MAE7F20C,UAAU,CAAEvuC,QAAS,wBAllBpBjJ,EAqlBnBusC,cAAgB,SAAAjiB,GACMtqB,EAAKuzC,cAAcxlB,QAAQie,UAA7C,IACMgE,EAAYhwC,EAAKuzC,cAAcxlB,QAAQiiB,UAC7ChwC,EAAKgwC,UAAYA,EAEH,UAAV1lB,EAAE1S,KAAoB0S,EAAEwlB,WACxBxlB,EAAEvB,iBACF/oB,EAAK+0C,iBA5lBM/0C,EAgmBnBm3C,gBAAkB,SAAA91C,GACd,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,oBACTlE,MAAO,CAAEkE,QAAS,gBAAiBwuC,KAAMp2C,EAAKo2C,KAAMnsC,KAAMjK,GAC1DyO,MAAOzO,EAAKq2C,WACZ1nC,OAAQ3O,EAAKs2C,aAGjB33C,EAAK2zC,eAAejvC,GAAS,EAAM,SAAA4F,GAC/B,IAAMstC,EAAgB7pC,KAAa3K,IAAIkH,EAAO/D,QAAS+D,EAAOzH,IACzC,MAAjB+0C,GACA53C,EAAK63C,qBAAqBD,EAAev2C,GAG7CtB,KAAU+3C,WAAWxtC,EAAO5F,QAAQK,MAAMmB,MAAM,GAAGnB,MAAMlC,GAAIyH,OAhnBlDtK,EAonBnB+3C,eAAiB,SAAA1vB,GACbroB,EAAK2zC,eAAetrB,GAAM,EAAM,eArnBjBroB,EAwnBnBs3C,mBAAqB,SAAAj2C,GACjB,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiBwuC,KAAMp2C,EAAKo2C,KAAMnsC,KAAMjK,IAGjErB,EAAK2zC,eAAejvC,GAAS,EAAM,SAAA4F,GAAM,OAAIvK,KAAU+3C,WAAWxtC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OAhoBxFtK,EAmoBnBitC,YAAc,SAAAthC,GAIV,IAHA,IAAMxI,GAASwI,EAAMyhC,eAAiBzhC,EAAMqsC,cAAc5K,eAAejqC,MAEnE6zC,EAAQ,GACL/wC,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IACQ,IAAlC9C,EAAM8C,GAAGgyC,KAAKlC,QAAQ,SACtBiB,EAAMrtC,KAAKxG,EAAM8C,GAAGiyC,aAI5B,GAAIlB,EAAM7wC,OAAS,EAKf,OAJAwF,EAAMod,iBAEN/oB,EAAKg3C,MAAQA,OACbh3C,EAAK6kB,SAAS,CAAEovB,iBAAiB,IAIrC,IAAMkE,EAAYxsC,EAAMyhC,cAAcC,QAAQ,cAC9C,OAAI8K,GACAxsC,EAAMod,iBACN9jB,SAASuoC,YAAY,cAAc,EAAO2K,QAC1Cn4C,EAAKgwC,UAAYmI,SAHrB,GAtpBen4C,EA8pBnBo4C,oBAAsB,WAClBp4C,EAAKq4C,mBAEL,IAAMrB,EAAQh3C,EAAKg3C,MACdA,GACAA,EAAM7wC,SAEX6wC,EAAMzzC,QAAQ,SAAAlC,GACVrB,EAAKs3C,mBAAmBj2C,KAG5BrB,EAAKg3C,MAAQ,OAzqBEh3C,EA4qBnBq4C,iBAAmB,WACfr4C,EAAK6kB,SAAS,CAAEovB,iBAAiB,KA7qBlBj0C,EAgrBnB63C,qBAAuB,SAACpzC,EAAS6D,GAC7B,GAAI7D,GAAWA,EAAQya,eAAoD,+BAAnCza,EAAQya,cAAc,UACtDza,EAAQC,SAAwC,iBAA7BD,EAAQC,QAAQ,UAA+BD,EAAQC,QAAQK,MAAO,CACzF,IAAIwH,EAAO8D,aAAQ5L,EAAQC,QAAQK,MAAMmB,MAAOqM,MAChD,IAAKhG,EAAM,OAEX,IAAIlL,EAAOkL,EAAKxH,MACZ1D,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAMG,2BAA6B7B,EAAKiH,OACnEjH,EAAKiH,KAAOA,EACZvI,KAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIxB,EAAKwB,OAzrBzD7C,EA+rBnB2zC,eA/rBmB,eAAAnzC,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA+rBF,SAAAC,EAAO6D,EAAS6zC,EAAY/uC,GAA5B,IAAA8a,EAAAnd,EAAA+W,EAAA5T,EAAA,OAAAolB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAojB,EACwBtkB,EAAKukB,MAAlCpd,EADKmd,EACLnd,OAAQ+W,EADHoG,EACGpG,iBAEX/W,EAHQ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOHwX,KAAiB8/B,sBAAjB,mCAAAntC,OAA0ElE,IAPvE,cAAAnG,EAAAE,KAAA,GASUc,KAAgBkJ,KAAK,CACpCjC,QAAS,cACT1C,QAASY,EACTuK,oBAAqBwM,EACrBu6B,sBAAuB/zC,IAblB,QASL4F,EATKtJ,EAAAoK,KAgBTpL,EAAK6kB,SAAS,CAAE3G,iBAAkB,GAAK,WACnC,GAAIq6B,EAAY,CACZ,IAAMG,EAAsB14C,EAAKw0C,uBAC7Bx0C,EAAKukB,MAAMpd,OACXnH,EAAKukB,MAAMrG,kBAEfle,EAAKq0C,oBAAoBqE,MAKjC12C,KAAgBkJ,KAAK,CACjBjC,QAAS,eACT1C,QAASY,EACT+E,YAAa,CAAC5B,EAAOzH,MAGzB2G,EAASc,GAjCAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SAmCT23C,MAAM,qBAAuBC,KAAKC,UAAL73C,EAAAG,KAnCpB,yBAAAH,EAAAU,SAAAb,EAAA,kBA/rBE,gBAAAc,EAAAc,EAAAowB,GAAA,OAAAryB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAsuBnB84C,kBAAoB,SAAA5qB,GACXA,IAELluB,EAAKuzC,cAAcxlB,QAAQie,WAAa9d,EAAM6qB,OAC9C/4C,EAAKmsC,gBA1uBUnsC,EA6uBnBmsC,YA7uBmB,eAAA/pC,EAAAnC,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA6uBL,SAAAyB,EAAMsJ,GAAN,IAAAqgC,EAAA7qC,EAAA63C,EAAA5D,EAAA6D,EAAArnB,EAAA,OAAAlC,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACJ8qC,EAAYhsC,EAAKuzC,cAAcxlB,QAAQie,cAC3BA,EAAU7lC,OAAS,IAF3B,CAAA7D,EAAApB,KAAA,eAGW27B,KAATO,MAEJp7B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTm0B,KAAM,OAPR96B,EAAAd,OAAA,oBAcJL,EAAK+3C,YAAY//B,MACjB6/B,EAAQG,MACV/D,EAAQ4D,EAAMI,KAAKpN,GACjBiN,EAAKC,YAAY//B,MACvBtV,QAAQ4F,IAAI,YAAcwvC,EAAK93C,GAAM,KAAMi0C,GACtCA,GAASpJ,IAAcoJ,EAAM,GAnBxB,CAAA9yC,EAAApB,KAAA,gBAoBW27B,KAATO,MAEJp7B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTm0B,KAAM,OAxBR96B,EAAAd,OAAA,kBA+BJowB,EAAY7Y,KAAKI,MACvBnX,KAAgBkJ,KAAK,CACjBjC,QAAS,cACTilB,MAAOknB,EAAM,GACbxiB,MAAO,MACRpnB,KAAK,SAAA8I,GACJtS,KAAgBgH,aAAa,CACzBC,QAAS,gCACTm0B,KAAM,CACFxL,YACA1D,MAAOknB,EAAM,GACb9gC,gBAKZtS,KAAgBkJ,KAAK,CACjBjC,QAAS,iBACTilB,MAAOknB,EAAM,GACbxiB,MAAO,MACRpnB,KAAK,SAAA8I,GACJtS,KAAgBgH,aAAa,CACzBC,QAAS,iCACTm0B,KAAM,CACFxL,YACA1D,MAAOknB,EAAM,GACb9gC,gBAzDF,yBAAAhS,EAAAZ,SAAAW,MA7uBK,gBAAAkJ,GAAA,OAAAnJ,EAAAR,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKo3C,kBAAoB/2B,IAAMqb,YAC/B17B,EAAK82C,eAAiBz2B,IAAMqb,YAC5B17B,EAAKuzC,cAAgBlzB,IAAMqb,YAE3B,IAAMv0B,EAASuR,KAAiBwT,YAPjB,OASflsB,EAAKgwC,UAAY,KACjBhwC,EAAKukB,MAAQ,CACTpd,OAAQA,EACR+W,iBAAkBD,aAA6B9W,GAC/C8sC,iBAAiB,GAbNj0C,qFAiBGklB,EAAWC,GAAW,IAAAzF,EACnBvf,KAAKwf,MAAlB4B,EADgC7B,EAChC6B,MAAO5J,EADyB+H,EACzB/H,EADyBurB,EAEc/iC,KAAKokB,MAAnDpd,EAFgC+7B,EAEhC/7B,OAAQ+W,EAFwBglB,EAExBhlB,iBAAkB+1B,EAFM/Q,EAEN+Q,gBAElC,OAAI/uB,EAAU3D,QAAUA,IAIpB2D,EAAUvN,IAAMA,IAIhBwN,EAAUhe,SAAWA,IAIrBge,EAAUjH,mBAAqBA,GAI/BiH,EAAU8uB,kBAAoBA,iDAUlCv7B,KAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,sBAC/ChmC,KAAa8T,GAAG,oBAAqB1hB,KAAKyzC,qBAC1C/W,KAAahb,GAAG,0BAA2B1hB,KAAKmzC,2BAEhDnzC,KAAK2zC,gBACL3zC,KAAK+zC,WACL/zC,KAAKgsC,6DAIL,IAAMuM,EAAsBv4C,KAAKq0C,uBAAuBr0C,KAAKokB,MAAMpd,OAAQhH,KAAKokB,MAAMrG,kBACtF/d,KAAKk0C,oBAAoBqE,GAEzBhgC,KAAiBvW,eAAe,qBAAsBhC,KAAK4zC,sBAC3DhmC,KAAa5L,eAAe,oBAAqBhC,KAAKyzC,qBACtD/W,KAAa16B,eAAe,0BAA2BhC,KAAKmzC,sEAuF7ChuB,EAAWC,EAAWC,GAErCrlB,KAAKk0C,oBAAoB7uB,GAErBD,EAAUpe,SAAWhH,KAAKokB,MAAMpd,SAChChH,KAAK2zC,gBACL3zC,KAAK+zC,WACL/zC,KAAKgsC,+DAIW7mB,EAAWC,GAC/B,OAAIA,EAAUpe,SAAWhH,KAAKokB,MAAMpd,OAAe,KAE5ChH,KAAKq0C,uBAAuBjvB,EAAUpe,OAAQoe,EAAUrH,yDAkZ/D,IAAI8tB,EAAY7rC,KAAKozC,cAAcxlB,QAAQie,UACvCgE,EAAY7vC,KAAKozC,cAAcxlB,QAAQiiB,UAM3C,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE7vC,KAAKozC,cAAcxlB,QAAQiiB,UAAY,IAGpChE,mCAgPF,IAAAnrB,EACkB1gB,KAAKwf,MAApBmB,EADHD,EACGC,QAASnJ,EADZkJ,EACYlJ,EADZwtB,EAEiDhlC,KAAKokB,MAAnDpd,EAFHg+B,EAEGh+B,OAAQ+W,EAFXinB,EAEWjnB,iBAAkB+1B,EAF7B9O,EAE6B8O,gBAE5BvvC,EAA6B,OAAnBvE,KAAK6vC,UAAqB7vC,KAAK6vC,UAAY,KAE3D,OACI/vB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,aAC5C3G,EAAAtf,EAAAqM,cAACqsC,GAAD,CAAgBlyC,OAAQA,EAAQC,UAAW8W,IAC3C+B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAACiT,EAAAtf,EAAM24C,SAAP,CACIC,SACIt5B,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYC,aAAW,YAClD5pB,EAAAtf,EAAAqM,cAACwsC,EAAA74C,EAAD,QAGRsf,EAAAtf,EAAAqM,cAACimC,GAAD,CAAmB7c,SAAUj2B,KAAK24C,sBAG1C74B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BACXD,EAAAtf,EAAAqM,cAAA,OACInK,GAAG,mBACHo5B,IAAK97B,KAAKozC,cACV37B,IAAK,IAAImB,KACT60B,YAAaj2B,EAAE,WACf+1B,iBAAe,EACfC,gCAA8B,EAC9BM,UAAW9tC,KAAKosC,cAChBkN,QAASt5C,KAAKo3C,YACdrJ,QAAS/tC,KAAK8sC,YACde,QAAS7tC,KAAKgsC,aACbznC,IAGTub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,yBACXD,EAAAtf,EAAAqM,cAAA,SACIivB,IAAK97B,KAAKi3C,kBACVl3B,UAAU,yBACVhO,KAAK,OACLwnC,SAAS,WACT/2B,SAAUxiB,KAAKk3C,+BAEnBp3B,EAAAtf,EAAAqM,cAAA,SACIivB,IAAK97B,KAAK22C,eACV52B,UAAU,yBACVhO,KAAK,OACLwnC,SAAS,WACTC,OAAO,UACPh3B,SAAUxiB,KAAK42C,4BAEnB92B,EAAAtf,EAAAqM,cAAC4sC,GAAD,CACIzyC,OAAQA,EACRmiC,cAAenpC,KAAKkpC,kBACpBG,iBAAkBrpC,KAAKopC,qBACvBG,aAAcvpC,KAAKspC,mBAMvBxpB,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYC,aAAW,OAAOzpB,QAASjgB,KAAK40C,cACvE90B,EAAAtf,EAAAqM,cAAC6sC,EAAAl5C,EAAD,WAKdqb,aAAc7U,IAAW8Y,EAAAtf,EAAAqM,cAAC8sC,GAAD,CAAkB9I,OAAQ7wC,KAAK43C,iBAC1D93B,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAM6pC,EACNnqB,QAAS3pB,KAAKk4C,iBACd3tB,kBAAgB,uBAChBzK,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,uBAAuB8U,EAAE,YACzCsI,EAAAtf,EAAAqM,cAAC4d,EAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC6d,EAAAlqB,EAAD,KACKR,KAAK62C,OAAS72C,KAAK62C,MAAM7wC,OAAS,EAC7B,uCACA,wCAGd8Z,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKk4C,iBAAkB/1B,MAAM,WACzC3K,EAAE,WAEPsI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKi4C,oBAAqB91B,MAAM,WAC5C3K,EAAE,iBAp4BD2I,aAk5Bf4G,GALCC,YACZ7F,IAx5BW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB2pC,WAAY,CACRviB,OAAQ,SAEZqrB,gBAAiB,CACbrrB,OAAQ,IAETI,aAAYlG,KAi5BI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQmsB,yBC96BjB0G,4LACO,IAAAr6B,EACmCvf,KAAKwf,MAArCmB,EADHpB,EACGoB,QAASqL,EADZzM,EACYyM,QAAS6tB,EADrBt6B,EACqBs6B,UAE1B,OACI/5B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BACXD,EAAAtf,EAAAqM,cAACitC,GAAAt5C,EAAD,CAAQ2hB,MAAM,UAAUpC,UAAWY,EAAQqxB,OAAQ/xB,QAAS45B,GACvD7tB,YARG9L,IAAMC,YAgBnBgB,OAxBA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChBkyC,OAAQ,CACJ9qB,OAAQ,OACRonB,SAAU,UAEXhnB,aAAYlG,KAmBJD,CAAmBy4B,ICTnBG,eAjBX,SAAAA,EAAYv6B,GAAO,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA+5C,GAAAj6C,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAi6C,GAAA55C,KAAAH,KACTwf,0EAGD,IAECwM,EADchsB,KAAKokB,MAAjB6jB,QACkB,SAAW,OAErC,OACInoB,EAAAtf,EAAAqM,cAACmtC,GAAD,CACIhuB,QAASA,EACT6tB,UAAW75C,KAAKooC,2CAZUL,uBCOpCkS,uBACF,SAAAA,EAAYz6B,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAi6C,IACfp6C,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAm6C,GAAA95C,KAAAH,KAAMwf,KAqBVojB,mBAAqB,SAAAjiC,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OAEJwV,aAAgBxV,EAAQrG,EAAOs7B,YAAYv5B,KAC3C7C,EAAK4hB,eA1BM5hB,EA8BnBgjC,mBAAqB,SAAAliC,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OAEJ4V,aAAgB5V,EAAQrG,EAAOwZ,WAAWzX,KAC1C7C,EAAK4hB,eAlCM5hB,EAsCnBq6C,WAAa,WAAM,IACPlzC,EAAWnH,EAAK2f,MAAhBxY,OACHA,GAELnF,KAAgBkJ,KAAK,CACjBjC,QAAS,WACT1C,QAASY,KA5CEnH,EAgDnBs6C,oBAAsB,WAAM,IAChBnzC,EAAWnH,EAAK2f,MAAhBxY,OACHA,GAELnF,KAAgBkJ,KAAK,CACjBjC,QAAS,oBACT1C,QAASY,EACTozC,uBAAuB,KAvDZv6C,qFAIGklB,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,mDAQpC0S,KAAgBgI,GAAG,mBAAoB1hB,KAAK4iC,oBAC5CxoB,KAAgBsH,GAAG,mBAAoB1hB,KAAK6iC,mEAI5CnpB,KAAgB1X,eAAe,mBAAoBhC,KAAK4iC,oBACxDxoB,KAAgBpY,eAAe,mBAAoBhC,KAAK6iC,qDA8CnD,IACG77B,EAAWhH,KAAKwf,MAAhBxY,OACFjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,KAAgBzW,IAAIc,EAAKgO,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,yBACD,OAAOv6B,EAAAtf,EAAAqM,cAACmtC,GAAD,CAAehuB,QAAQ,kBAAkB6tB,UAAW75C,KAAKm6C,sBAEpE,IAAK,0BACD,OAAOr6B,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOv6B,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,6BACD,OAAI5gC,EAAWG,OAAOqC,UACbxC,EAAWG,OAAO8D,kBAIhBoC,EAAAtf,EAAAqM,cAACwtC,GAAD,MAHI,KAKJv6B,EAAAtf,EAAAqM,cAACmtC,GAAD,CAAehuB,QAAQ,OAAO6tB,UAAW75C,KAAKk6C,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOp6B,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,qBACD,IAAMlgC,EAAaC,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,yBACD,OAAOv6B,EAAAtf,EAAAqM,cAACmtC,GAAD,CAAehuB,QAAQ,kBAAkB6tB,UAAW75C,KAAKm6C,sBAEpE,IAAK,0BACD,OAAOr6B,EAAAtf,EAAAqM,cAACwtC,GAAD,MAEX,IAAK,uBACD,OAAOv6B,EAAAtf,EAAAqM,cAACmtC,GAAD,CAAehuB,QAAQ,OAAO6tB,UAAW75C,KAAKk6C,aAEzD,IAAK,yBACD,OAAI//B,EAAWG,WACJwF,EAAAtf,EAAAqM,cAACytC,GAAD,CAA6BtzC,OAAQA,IAErC8Y,EAAAtf,EAAAqM,cAACwtC,GAAD,MAGf,IAAK,6BACD,OAAIlgC,EAAWP,OAAOqC,UACb9B,EAAWP,OAAO8D,kBAIhBoC,EAAAtf,EAAAqM,cAACwtC,GAAD,MAHI,KAKJv6B,EAAAtf,EAAAqM,cAACmtC,GAAD,CAAehuB,QAAQ,OAAO6tB,UAAW75C,KAAKk6C,cAQ7E,OAAO,YAzJMh6B,IAAMC,YA6JZ85B,oQCxJTM,2LACO,IAAAh7B,EACoDvf,KAAKwf,MAA7CxY,GADZuY,EACGoB,QADHpB,EACYvY,QAAQivB,EADpB1W,EACoB0W,SAAUtb,EAD9B4E,EAC8B5E,kBAE7B6/B,EAAav9B,YAAkBjW,EAAQ2T,GAE7C,OACImF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQivB,SAAUA,EAAUtb,kBAAmBA,EAAmBub,YAAU,IACrGpW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBy6B,WAT3Bt6B,IAAMu6B,gBAqB5BF,EAAQt5B,aAAe,CACnBtG,mBAAmB,GAGRwG,UAlCA,CACXu5B,eAAgB,CACZt3B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACRsP,OAAQ,IA6BDvV,CAAmBo5B,8BC3B5BI,2LACO,IAAAp7B,EACgCvf,KAAKwf,MAAlCxY,EADHuY,EACGvY,OAAQiZ,EADXV,EACWU,QAASU,EADpBpB,EACoBoB,QAEzB,OACIb,EAAAtf,EAAAqM,cAACilC,EAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASA,GACnDH,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQ2T,mBAAiB,IAClDmF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAC2vB,EAAA,EAAD,CAAoBx1B,OAAQA,gBAX5BkZ,IAAMu6B,gBA0BvBt5B,MAhCA,CACX4wB,SAAU,CACNvuB,QAAS,QA8BFrC,CAAmBw5B,oBCjB5BC,sBACF,SAAAA,EAAYp7B,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA46C,IACf/6C,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA86C,GAAAz6C,KAAAH,KAAMwf,KAkCVo0B,qBAAuB,SAAAjzC,GAAU,IACrBkzC,EAA+BlzC,EAA/BkzC,WAAYgH,EAAmBl6C,EAAnBk6C,eAEpBh7C,EAAK6kB,SAAS,CACVmvB,WAAYA,EACZgH,eAAgBA,KAxCLh7C,EA4CnB8lB,YAAc,WAAM,IAAApG,EACa1f,EAAK2f,MAA1BxY,EADQuY,EACRvY,OAAQivB,EADA1W,EACA0W,SACXA,GAELA,EAASjvB,IA7CTnH,EAAKukB,MAAQ,CACTyvB,WAAYt7B,IAAiBwT,YAC7B8uB,eAAgB,MALLh7C,qFASGklB,EAAWC,GAAW,IAAAtE,EACd1gB,KAAKwf,MAAvBxY,EADgC0Z,EAChC1Z,OAAQoa,EADwBV,EACxBU,MAEhB,OAAI4D,EAAU6uB,aAAe7sC,IAIzBge,EAAU61B,iBAAmB7zC,GAI7B+d,EAAU3D,QAAUA,+CAQxB7I,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,qEAI/Cr7B,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,uDAmBtD,IAAAkH,EAAAvyB,EACgCvoB,KAAKwf,MAAlCxY,EADHuhB,EACGvhB,OAAQiZ,EADXsI,EACWtI,QAASU,EADpB4H,EACoB5H,QACnBo6B,EAAiB/6C,KAAKokB,MAAMyvB,WAE5Bt4B,EAAWD,YAAgBtU,GAC3Bg0C,EAAe99B,YAAyBlW,GAC1Ci0C,EAAoB,GAKxB,OAJID,EAAe,IACfC,EAAqC,IAAjBD,EAAqB,iBAArB,KAAA9vC,OAA6C8vC,EAA7C,iBAIpBl7B,EAAAtf,EAAAqM,cAACilC,EAAAtxC,EAAD,CAAUwxC,QAAM,EAACrxB,QAAS,CAAEgC,KAAMhC,EAAQoxB,UAAY9xB,QAASA,GAC3DH,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,qBAADg6B,EAAA,GAAAh7C,OAAA0mB,EAAA,EAAA1mB,CAAAg7C,EAChBn6B,EAAQu6B,iBAAmBl0C,IAAW+zC,GADtBj7C,OAAA0mB,EAAA,EAAA1mB,CAAAg7C,EAEjB,oBAAqB9zC,IAAW+zC,GAFfD,IAIrB76B,QAASjgB,KAAK2lB,aACd7F,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,IACzB8Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAC2vB,EAAA,EAAD,CAAoBx1B,OAAQA,KAEhC8Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQw6B,0BAArD,IACM5/B,EACD0/B,cA/EH/6B,IAAMC,YA8FrBgB,MA1GA,SAAAC,GAAK,MAAK,CACrB2wB,SAAU,CACNvuB,QAAS,GAEb03B,iBAAkB,CACdj0B,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KAAO,cAElDgb,wBAAyB,CACrBh5B,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqlB,UAAY,aAkG5C,CAAE3b,WAAW,GAAhCpG,CAAwCy5B,8BCzFjDQ,sBACF,SAAAA,EAAY57B,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAo7C,IACfv7C,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAs7C,GAAAj7C,KAAAH,KAAMwf,KAkCVo0B,qBAAuB,SAAAjzC,GACnBd,EAAK6kB,SAAL5kB,OAAAuhB,EAAA,EAAAvhB,CAAA,GACOa,KAlCPd,EAAKukB,MAAQ,CACTyvB,WAAYt7B,IAAiBwT,YAC7BsvB,cAAe9iC,IAAiB+iC,gBALrBz7C,qFASGklB,EAAWC,GAAW,IAAAzF,EACHvf,KAAKwf,MAAlCxY,EADgCuY,EAChCvY,OAAQC,EADwBsY,EACxBtY,UAAWma,EADa7B,EACb6B,MAE3B,OAAI4D,EAAU6uB,aAAe7sC,GAAUge,EAAUq2B,gBAAkBp0C,IAI/D+d,EAAU61B,iBAAmB7zC,GAAUge,EAAUu2B,oBAAsBt0C,GAIvE8d,EAAU3D,QAAUA,+CAQxB7I,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,qEAI/Cr7B,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,uDAStD,IAAAlzB,EAC0D1gB,KAAKwf,MAA5DxY,EADH0Z,EACG1Z,OAAQC,EADXyZ,EACWzZ,UAAWu0C,EADtB96B,EACsB86B,WAAYv7B,EADlCS,EACkCT,QAASU,EAD3CD,EAC2CC,QAASnJ,EADpDkJ,EACoDlJ,EACnDujC,EAAiB/6C,KAAKokB,MAAMyvB,WAC5B4H,EAAoBz7C,KAAKokB,MAAMi3B,cAC/B/2C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GAEjCqK,EAAmBhN,EAAnBgN,eAEFqH,EAAOD,YAAepU,GACtBo3C,EAAavkC,YAAqB7S,GAClCq3C,EAAiB3kC,YAAyB1S,GAC1CC,EAAUmT,YAAWpT,EAASkT,IAAM,OAEpCokC,EACFtqC,GAAkBkqC,EACd17B,EAAAtf,EAAAqM,cAACmT,EAAA,EAAD,CAAiB/T,OAAQqF,IAEzBwO,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,IAGjC,OACI8Y,EAAAtf,EAAAqM,cAACilC,EAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASA,GACnDH,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IACP,gBADiBhhB,OAAA0mB,EAAA,EAAA1mB,CAAA,GAEd6gB,EAAQk7B,iBAAmB70C,IAAW+zC,GAAkB9zC,IAAcw0C,GACzE,CAAEK,oBAAqB90C,IAAW+zC,GAAkB9zC,IAAcw0C,KAErEG,EACD97B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACVy7B,GAAcG,EACX77B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgB47B,GAE/B77B,EAAAtf,EAAAqM,cAAC2vB,EAAA,EAAD,CAAoBx1B,OAAQA,IAEhC8Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQo7B,uBAAwBpjC,IAEnFmH,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQo7B,uBAE7Cj8B,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,MACMi2B,GAAcE,GACZ57B,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyB27B,EAAzC,MAEHn3C,eAvFd2b,IAAMC,YA+GlB4G,EALCC,YACZ7F,IAvHW,SAAAC,GAAK,MAAK,CACrB2wB,SAAU,CACNvuB,QAAS,GAEbq4B,iBAAkB,CACdxmB,WAAYjU,EAAMkU,QAAQ4K,QAAQC,KAAO,cAE7C4b,qBAAsB,CAClB55B,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqlB,UAAY,aA+GvD,CAAE3b,WAAW,IAChCC,cAGWT,CAAQq0B,UCtGRj6B,UA/BA,SAAAC,GAAK,MAAK,CACrB46B,cAAe,CACX3mB,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQ2mB,KAAK,KAAO,aAAe,UACrF95B,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqiB,QAAU,aAAe,WAEvFgc,qBAAsB,CAClB/5B,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqiB,QAAU,aAAe,aAyBzD,CAAE3Y,WAAW,GAAhCpG,CArBf,SAAuB3B,GAAO,IAClB2M,EAAuC3M,EAAvC2M,QAASH,EAA8BxM,EAA9BwM,QAAS/L,EAAqBT,EAArBS,QAASU,EAAYnB,EAAZmB,QAEnC,OACIb,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQq7B,gBACjDl8B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBoM,GACtC/O,QAAQ4O,IACLlM,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAWY,EAAQu7B,qBAAsBj8B,QAASA,GAChD+L,yECefmwB,uBACF,SAAAA,EAAY38B,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAm8C,IACft8C,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAq8C,GAAAh8C,KAAAH,KAAMwf,KAuDV48B,yBAA2B,SAAAz7C,GAAU,IAG3B07C,EAFW17C,EAATkd,KAEiBqZ,OAEpBmlB,EAGDx8C,EAAKgsB,WAAWwwB,GAFhBx8C,EAAKy8C,eA9DMz8C,EAoEnB08C,oBAAsB,SAAAC,GAIlB,IAHA,IAAM/5C,EAAM,GACNkL,EAAM,IAAIzE,IAEPpD,EAAI,EAAGA,EAAI02C,EAAQx2C,OAAQF,IAChC,GAAkB,MAAd02C,EAAQ12C,GAAZ,CACA,IAAIqE,EAASqyC,EAAQ12C,GAAG22C,SACxB,GAAItyC,EACA,IAAK,IAAIuyC,EAAI,EAAGA,EAAIvyC,EAAOnE,OAAQ02C,IAC1B/uC,EAAI7K,IAAIqH,EAAOuyC,MAChB/uC,EAAI1M,IAAIkJ,EAAOuyC,GAAIvyC,EAAOuyC,IAC1Bj6C,EAAI+G,KAAKW,EAAOuyC,KAUhC,OAJAj6C,EAAIk6C,KAAK,SAACn8C,EAAGo8C,GACT,OAAOC,YAAa9pC,IAAU9P,IAAI25C,GAAGE,MAAO/pC,IAAU9P,IAAIzC,GAAGs8C,SAG1Dr6C,GAzFQ5C,EA4FnBgsB,WA5FmB,eAAAxrB,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA4FN,SAAAC,EAAMmd,GAAN,IAAAk/B,EAAAp9C,EAAAqH,EAAAg2C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAA55C,EAAA4U,EAAAqU,EAAA0xB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlwC,EAAAmwC,EAAAzsC,EAAAtL,EAAA,OAAAypB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTlB,EAAKk9C,UAAY,IAAInkC,KACrB/Y,EAAKge,KAAOA,EACNk/B,EAAYl9C,EAAKk9C,UACnBp9C,EAAQ,KAEJqH,EAAWnH,EAAK2f,MAAhBxY,OACAg2C,EAAkBn9C,EAAKukB,MAAvB44B,cAEHh2C,EATI,CAAAnG,EAAAE,KAAA,gBAUCk8C,EAAW,GACXC,EAAer7C,IAAgBkJ,KAAK,CACtCjC,QAAS,cACTypB,MAAO1U,EACP4U,MAAO,MAEXwqB,EAASzzC,KAAK0zC,IAERC,EAAYnW,YAAcnpB,MAEtBu/B,EAAoBv7C,IAAgBkJ,KAAK,CAC3CjC,QAAS,cACTypB,MAAO4qB,EACP1qB,MAAO,MAEXwqB,EAASzzC,KAAK4zC,KAGZC,EAAetW,YAAiBlpB,MAE5By/B,EAAuBz7C,IAAgBkJ,KAAK,CAC9CjC,QAAS,cACTypB,MAAO8qB,EACP5qB,MAAO,MAEXwqB,EAASzzC,KAAK8zC,IAnCbz8C,EAAAE,KAAA,GAsCiB4I,QAAQqpC,IAAIiK,EAAStvC,IAAI,SAAA/B,GAAC,OAAIA,EAAElC,MAAM,SAAAygB,GAAC,OAAI,UAtC5D,WAsCCqyB,EAtCD37C,EAAAoK,KAuCCrI,EAAQ/C,EAAK08C,oBAAoBC,GAEnCO,IAAcl9C,EAAKk9C,UAzClB,CAAAl8C,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,qBA6CD27C,IACQxlC,EAAM3X,EAAK2f,MAAXhI,EAEFqU,EAAahO,EAAKigC,gBAClBP,EAAuB,CAAC,iBAAkB/lC,EAAE,iBAAiBsmC,gBAG1CnyC,KAAK,SAAAwlC,GAAE,OAAIA,EAAGpT,SAASlS,MAC3CsxB,GAAaI,EAAqB5xC,KAAK,SAAAwlC,GAAE,OAAIA,EAAGpT,SAASof,EAAUW,mBAEpEl7C,EAAM8zC,OAAO,EAAG,EAAGsG,EAAct6C,KAIzC7C,EAAK6kB,SAAS,CACVrB,IAAK,KACL06B,cAAe,KACfn7C,MAAOA,EACPg7C,OAAQ,KACRlwC,SAAU,OAGd/N,EAAQC,IAAUuD,WAClB0Q,YAAiBlU,EAAOiD,KAEpBib,EAAK7X,QAAUg4C,MAtEd,CAAAn9C,EAAAE,KAAA,gBAuEKy8C,EAAiB,GAEjBC,EAAgB57C,IAAgBkJ,KAAK,CACvCjC,QAAS,oBACTypB,MAAO1U,IAEX2/B,EAAeh0C,KAAKi0C,GAEhBN,IACMO,EAAqB77C,IAAgBkJ,KAAK,CAC5CjC,QAAS,oBACTypB,MAAO4qB,IAEXK,EAAeh0C,KAAKk0C,IApFvB78C,EAAAE,KAAA,GAuF2B4I,QAAQqpC,IAAIwK,EAAe7vC,IAAI,SAAA/B,GAAC,OAAIA,EAAElC,MAAM,SAAAygB,GAAC,OAAI,UAvF5E,WAuFKwzB,EAvFL98C,EAAAoK,KAwFK2yC,EAAS/9C,EAAK08C,oBAAoBoB,GAEpCZ,IAAcl9C,EAAKk9C,UA1FtB,CAAAl8C,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA8FDxB,EAAK6kB,SAAS,CACVk5B,OAAQA,IAGZj+C,EAAQC,IAAUuD,WAClB0Q,YAAiBlU,EAAOi+C,GAnGvB,WAuGLlwC,EAAW,IACX1G,EAxGK,CAAAnG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyGYc,IAAgBkJ,KAAK,CAClCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO1U,EACPvM,eAAgB,EAChBkhB,gBAAiB,EACjBjH,OAAQ,EACRkH,MAAO,GACP5mB,OAAQ,OAjHP,QAyGL6B,EAzGK7M,EAAAoK,KAAApK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAoHYc,IAAgBkJ,KAAK,CAClCjC,QAAS,iBACTypB,MAAO1U,EACPogC,YAAa,EACbC,eAAgB,EAChBC,kBAAmB,EACnB1rB,MAAO,KA1HN,QAoHL/kB,EApHK7M,EAAAoK,KAAA,WA8HT2C,IAAaC,SAASH,EAASA,UAE3BqvC,IAAcl9C,EAAKk9C,UAhId,CAAAl8C,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA0IT,IANAxB,EAAK6kB,SAAS,CACVhX,SAAUA,IAGRmwC,EAAQ,IAAI30C,IACZkI,EAAQ,IAAIlI,IACTpD,EAAI,EAAGA,EAAI4H,EAASA,SAAS1H,OAAQF,IAC1C+3C,EAAM58C,IAAIyM,EAASA,SAAS5H,GAAGM,QAASsH,EAASA,SAAS5H,GAAGM,SACzDsH,EAASA,SAAS5H,GAAGwL,gBACrBF,EAAMnQ,IAAIyM,EAASA,SAAS5H,GAAGwL,eAAgB5D,EAASA,SAAS5H,GAAGwL,gBAI5E3R,EAAQC,IAAUuD,WAClB0Q,YAAiBlU,EAADG,OAAAypB,EAAA,EAAAzpB,CAAY+9C,EAAMlsC,SAClCF,YAAiB9R,EAADG,OAAAypB,EAAA,EAAAzpB,CAAYsR,EAAMO,SAnJzB,yBAAA9Q,EAAAU,SAAAb,MA5FM,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAkPnBy8C,YAlPmBx8C,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAkPL,SAAAyB,IAAA,IAAAk8C,EAAAC,EAAAC,EAAA5zC,EAAA6zC,EAAAl7B,EAAA06B,EAAAf,EAAAr9C,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACSlB,EAAK2f,MAAhBxY,OADE,CAAA7E,EAAApB,KAAA,eAGNlB,EAAK6kB,SAAS,CACVrB,IAAK,KACL06B,cAAe,KACfn7C,MAAO,KACPg7C,OAAQ,KACRlwC,SAAU,OARRvL,EAAAd,OAAA,wBAcJ+8C,EAAav8C,IAAgBkJ,KAAK,CACpCjC,QAAS,cACT01C,SAAU,CAAE11C,QAAS,wBACrB2pB,MAAO,KACR/oB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS2zC,SAAU,MAGnC4B,EAAuBx8C,IAAgBkJ,KAAK,CAC9CjC,QAAS,cACTypB,MAAO,GACPE,MAAO,MACR/oB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS2zC,SAAU,MAGnC6B,EAAuBz8C,IAAgBkJ,KAAK,CAC9CjC,QAAS,oBACTmG,QAASC,IAAUiN,UACnBsiC,OAAO,IACR/0C,MAAM,SAAA/F,MAlCCxB,EAAApB,KAAA,EAoCwC4I,QAAQqpC,IAAI,CAC1DoL,EACAC,EACAC,IAvCM,OAAA5zC,EAAAvI,EAAA8I,KAAAszC,EAAAz+C,OAAA4+C,EAAA,EAAA5+C,CAAA4K,EAAA,GAoCH2Y,EApCGk7B,EAAA,GAoCER,EApCFQ,EAAA,GAoCiBvB,EApCjBuB,EAAA,GA0CV1+C,EAAK6kB,SAAS,CACVrB,IAAKA,EACL06B,cAAeA,EACff,cAAeA,EACfp6C,MAAO,KACPg7C,OAAQ,KACRlwC,SAAU,OAGR/N,EAAQC,IAAUuD,WACxB0Q,YAAiBlU,EAAO0jB,EAAIo5B,UAC5B5oC,YAAiBlU,EAAOo+C,EAActB,UArD5B,yBAAAt6C,EAAAZ,SAAAW,MAlPKrC,EA0SnB8+C,oBA1SmB7+C,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA0SG,SAAAm+C,IAAA,IAAAf,EAAA/3C,EAAA,OAAAypB,EAAA/uB,EAAAI,KAAA,SAAAi+C,GAAA,cAAAA,EAAA/9C,KAAA+9C,EAAA99C,MAAA,cAAA89C,EAAA99C,KAAA,EACEc,IAAgBkJ,KAAK,CACrCjC,QAAS,WACTg2C,aAAc,sBACdZ,eAAgB,EAChBzrB,MAAO,KALO,OAQlB,IAPMorB,EADYgB,EAAA5zC,KAQTnF,EAAI+3C,EAAMpB,SAASz2C,OAAS,EAAGF,GAAK,EAAGA,IAC5CjE,IAAgBkJ,KAAK,CACjBjC,QAAS,uBACT1C,QAASy3C,EAAMpB,SAAS32C,KAXd,wBAAA+4C,EAAAt9C,SAAAq9C,MA1SH/+C,EA0TnBk/C,yBAA2B,SAAAvzC,GACvBA,EAAMqa,kBAENhkB,IAAgBkJ,KAAK,CACjBjC,QAAS,4BAGbjJ,EAAK6kB,SAAS,CAAEq5B,cAAe,QAjUhBl+C,EAoUnBm/C,oBAAsB,SAACh4C,EAAQC,EAAWg4C,EAAaC,GAAa,IACxDC,EAAoBt/C,EAAK2f,MAAzB2/B,gBAEJF,GACAp9C,IAAgBkJ,KAAK,CACjBjC,QAAS,uBACT1C,QAASY,IAIjBm4C,EAAgBn4C,EAAQC,EAAWi4C,IA9UpBr/C,EAiVnBu/C,aAAe,WACX,IAAMvhB,EAAOh+B,EAAKw/C,QAAQzxB,QAEtBiQ,EAAKqN,UAAYrN,EAAKyhB,eAAiBzhB,EAAKsN,cAC5CtrC,EAAK0/C,kBArVM1/C,EAyVnB2/C,UAAY,SAAA9xC,GACR,IAAM1H,EAAS0H,EAAWA,EAASA,SAAS1H,OAAS,EAMrD,MAAO,CACHi4C,YALej4C,EAAS,EAAI0H,EAASA,SAAS1H,EAAS,GAAG2S,KAAO,EAMjEulC,eALiBl4C,EAAS,EAAI0H,EAASA,SAAS1H,EAAS,GAAGI,QAAU,EAMtE+3C,kBALoBn4C,EAAS,EAAI0H,EAASA,SAAS1H,EAAS,GAAGtD,GAAK,IA9VzD7C,EAuWnB4/C,eAAiB,SAAC/xC,EAAUvD,GACxB,OAAKA,GACAA,EAAOuD,SAAS1H,OAEhB0H,GACAA,EAASA,SAAS1H,OAEhB,CACHosB,YAAajoB,EAAOioB,YACpB1kB,SAAUA,EAASA,SAASxC,OAAOf,EAAOuD,WALxBvD,EAHFuD,GAxWL7N,EAoXnB0/C,eApXmBz/C,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAoXF,SAAAkK,IAAA,IAAA3D,EAAA+1C,EAAArvC,EAAA6d,EAAAphB,EAAA0zC,EAAAzsC,EAAAtL,EAAAnG,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAkK,GAAA,cAAAA,EAAAhK,KAAAgK,EAAA/J,MAAA,WACTlB,EAAK6/C,QADI,CAAA50C,EAAA/J,KAAA,eAAA+J,EAAAzJ,OAAA,oBAGL2F,EAAWnH,EAAK2f,MAAhBxY,OAEF+1C,EAAYl9C,EAAKk9C,UAEfrvC,EAAa7N,EAAKukB,MAAlB1W,SAEF6d,EAAS1rB,EAAK2/C,UAAU9xC,GAE9B7N,EAAK6/C,SAAU,EACXv1C,EAAS,IACTnD,EAbS,CAAA8D,EAAA/J,KAAA,gBAAA+J,EAAA/J,KAAA,GAcMc,IAAgBkJ,KAAK,CAChCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO1yB,EAAKge,KACZvM,eAAgB,EAChBkhB,gBAAiBjH,EAAO4yB,kBACxB1rB,MAAO,GACP5mB,OAAQ,OArBH,QAcT1B,EAdSW,EAAAG,KAAAH,EAAA/J,KAAA,wBAAA+J,EAAA/J,KAAA,GAwBMc,IAAgBkJ,KAAhBjL,OAAAuhB,EAAA,EAAAvhB,CAAA,CACXgJ,QAAS,iBACTypB,MAAO1yB,EAAKge,MACT0N,EAHQ,CAIXkH,MAAO,MA5BF,QAwBTtoB,EAxBSW,EAAAG,KAAA,WA+BbpL,EAAK6/C,SAAU,EAEfjyB,YAAetjB,EAAQuD,EAAWA,EAASA,SAAW,IAEtDE,IAAaC,SAAS1D,EAAOuD,UAEzBqvC,IAAcl9C,EAAKk9C,UArCV,CAAAjyC,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,kBA+Cb,IANAxB,EAAK6kB,SAAS,CACVhX,SAAU7N,EAAK4/C,eAAe/xC,EAAUvD,KAGtC0zC,EAAQ,IAAI30C,IACZkI,EAAQ,IAAIlI,IACTpD,EAAI,EAAGA,EAAIqE,EAAOuD,SAAS1H,OAAQF,IACxC+3C,EAAM58C,IAAIkJ,EAAOuD,SAAS5H,GAAGM,QAAS+D,EAAOuD,SAAS5H,GAAGM,SACrD+D,EAAOuD,SAAS5H,GAAGwL,gBACnBF,EAAMnQ,IAAIkJ,EAAOuD,SAAS5H,GAAGwL,eAAgBnH,EAAOuD,SAAS5H,GAAGwL,gBAIlE3R,EAAQC,IAAUuD,WACxB0Q,YAAiBlU,EAADG,OAAAypB,EAAA,EAAAzpB,CAAY+9C,EAAMlsC,SAClCF,YAAiB9R,EAADG,OAAAypB,EAAA,EAAAzpB,CAAYsR,EAAMO,SAxDrB,yBAAA7G,EAAAvJ,SAAAoJ,MApXE9K,EA+anB8/C,qBAAuB,SAAAn0C,GACnBA,EAAMqa,mBAhbShmB,EAmbnB4wC,YAAc,YAGV9mB,EAFoB9pB,EAAK2f,MAAjBmK,YAjbR9pB,EAAKw/C,QAAUn/B,IAAMqb,YAHN,IAAAhc,EAKU1f,EAAK2f,MAAtBxY,EALOuY,EAKPvY,OAAQ6W,EALD0B,EAKC1B,KAahB,GAXAhe,EAAKukB,MAAQ,CACTw7B,gBAAiB54C,EACjB64C,cAAehiC,EAEfwF,IAAK,KACL06B,cAAe,KACfn7C,MAAO,KACPg7C,OAAQ,KACRlwC,SAAU,MAGF,MAARmQ,GAAgBA,EAAK7X,OAAS,EAAG,CACjC,IAAMq2C,EAAcx+B,EAAKqZ,OAEpBmlB,EAGDx8C,EAAKgsB,WAAWwwB,GAFhBx8C,EAAKy8C,cAtBE,OAAAz8C,mFA+CfG,KAAKs8C,cAEL/jC,IAAiBmJ,GAAG,yBAA0B1hB,KAAKo8C,yEAInD7jC,IAAiBvW,eAAe,yBAA0BhC,KAAKo8C,2DAoY1D,IAAA3xC,EAAAzK,KAAA0gB,EACuB1gB,KAAKwf,MAAzBmB,EADHD,EACGC,QAAS3Z,EADZ0Z,EACY1Z,OADZmd,EAEmDnkB,KAAKokB,MAArDf,EAFHc,EAEGd,IAAK06B,EAFR55B,EAEQ45B,cAAen7C,EAFvBuhB,EAEuBvhB,MAAOg7C,EAF9Bz5B,EAE8By5B,OAAQlwC,EAFtCyW,EAEsCzW,SAErC3J,EAAOgP,IAAU9P,IAAI+D,GAErB84C,EACFz8B,GAAOA,EAAIo5B,SACLp5B,EAAIo5B,SAAS9uC,IAAI,SAAA/B,GAAC,OACdkU,EAAAtf,EAAAqM,cAACkzC,EAAD,CAAStoC,IAAK7L,EAAG5E,OAAQ4E,EAAGqqB,SAAU,kBAAMxrB,EAAKu0C,oBAAoBpzC,EAAG,MAAM,GAAO,QAEzF,GAEJo0C,EACFjC,GAAiBA,EAActB,SACzBsB,EAActB,SAAS9uC,IAAI,SAAA/B,GAAC,OACxBkU,EAAAtf,EAAAqM,cAACozC,EAAD,CACIxoC,IAAK7L,EACL5E,OAAQ4E,EACRqU,QAAS,kBAAMxV,EAAKu0C,oBAAoBpzC,EAAG,MAAM,GAAM,QAG/D,GAEJs0C,EAAat9C,EACbA,EAAM+K,IAAI,SAAA/B,GAAC,OACPkU,EAAAtf,EAAAqM,cAACozC,EAAD,CACIxoC,IAAK7L,EACL5E,OAAQ4E,EACRqU,QAAS,kBAAMxV,EAAKu0C,oBAAoBpzC,EAAG,MAAM,GAAM,QAG/D,GAEAu0C,EAAcvC,EACdA,EAAOjwC,IAAI,SAAA/B,GAAC,OACRkU,EAAAtf,EAAAqM,cAACuzC,EAAD,CAAiB3oC,IAAK7L,EAAG5E,OAAQ4E,EAAGqU,QAAS,kBAAMxV,EAAKu0C,oBAAoBpzC,EAAG,MAAM,GAAM,QAE/F,GAEAy0C,EACF3yC,GAAYA,EAASA,SACfA,EAASA,SAASC,IAAI,SAAA/B,GAAC,OACnBkU,EAAAtf,EAAAqM,cAACyzC,EAAD,CACI7oC,IAAG,GAAAvM,OAAKU,EAAExF,QAAP,KAAA8E,OAAkBU,EAAElJ,IACvBsE,OAAQ4E,EAAExF,QACVa,UAAW2E,EAAElJ,GACb84C,WAAYp+B,QAAQpW,GACpBiZ,QAAS,kBAAMxV,EAAKu0C,oBAAoBpzC,EAAExF,QAASwF,EAAElJ,IAAI,GAAO,QAGxE,GAEN69C,EAAkB,oBAKtB,OAJI7yC,GAAYA,EAAS0kB,cACrBmuB,EAA2C,IAAzB7yC,EAAS0kB,YAAoB,kBAA7B,SAAAlnB,OAA0DwC,EAAS0kB,YAAnE,cAIlBtS,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKq/C,QAASt/B,UAAWe,IAAWH,EAAQ6/B,OAAQ,UAAWC,SAAUzgD,KAAKo/C,cACnFr7C,GACG+b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,eACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAAQ,uBACvBrM,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAACu2B,EAAA,EAAD,CAAap8B,OAAQA,EAAQs8B,YAAY,KAE7CxjB,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQggC,sBACnBjX,aAAW,SACXlC,YAAaxnC,KAAKywC,aAClB3wB,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,SAKfs/C,EAAS95C,OAAS,GACf8Z,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAAQ,WACvBrM,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwB0gC,SAAUzgD,KAAK2/C,sBAClD7/B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iCACd+/B,EACDhgC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mCAI1BigC,EAAmBh6C,OAAS,GACzB8Z,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAAQ,SAASH,QAAQ,QAAQ/L,QAASjgB,KAAK++C,2BAC7DiB,GAGRE,EAAWl6C,OAAS,GACjB8Z,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAAQ,uBACtB+zB,GAGRC,EAAYn6C,OAAS,GAClB8Z,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAAQ,kBACtBg0B,GAGRzyC,GACGoS,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAAC6zC,EAAD,CAAev0B,QAASo0B,IACvBF,uDAvgBW7gC,EAAO4E,GACnC,OAAI5E,EAAMxY,SAAWod,EAAMw7B,iBAAmBpgC,EAAM3B,OAASuG,EAAMy7B,cACxD,CACHD,gBAAiBpgC,EAAMxY,OACvB64C,cAAergC,EAAM3B,KAErBwF,IAAK,KACL06B,cAAe,KACfn7C,MAAO,KACPg7C,OAAQ,KACRlwC,SAAU,MAIX,YA5CMwS,IAAMC,YAojBrB4G,GAAUC,YACZ7F,IAjkBW,SAAAC,GAAK,MAAK,CACrBu/B,sBAAuB,CACnBz5B,OAAQ,kBAEZ6qB,SAAU,CACNvuB,QAAS,OAEbg9B,OAAQ,CACJnrB,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,aAyjBhE,CAAEhO,WAAW,IAChCC,eAGWT,OAAQo1B,oOCzkBjByE,sBACF,SAAAA,EAAYphC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA4gD,IACf/gD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA8gD,GAAAzgD,KAAAH,KAAMwf,KA2CVqhC,MAAQ,WAAM,IACFtvB,EAAa1xB,EAAK2f,MAAlB+R,SAGM,IAFI1xB,EAAKukB,MAAf3O,OAGJ5V,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,IAGjBuJ,WAAW,WACiBl7B,EAAKukB,MAArBoN,aAEJ3xB,EAAK6kB,SAAS,CACVjP,MAAO5V,EAAKihD,SAAS,EAAGvvB,GAAU,MAG3CwvB,MAEHlhD,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACb/b,MAAO5V,EAAKihD,SAAS,EAAGvvB,GAAU,MAlE3B1xB,EAuEnBokC,uBAAyB,SAAAtjC,GAAU,IAAA4e,EACD1f,EAAK2f,MAA3BxY,EADuBuY,EACvBvY,OAAQC,EADesY,EACftY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAKghD,SA3EMhhD,EA+EnBklC,wBAA0B,SAAApkC,GAAU,IAAA+f,EACQ7gB,EAAK2f,MAArCxY,EADwB0Z,EACxB1Z,OAAQC,EADgByZ,EAChBzZ,UAAWsqB,EADK7Q,EACL6Q,SACnB2S,EAAWrkC,EAAKukB,MAAhB8f,OAEJl9B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CACV8M,YAAa7wB,EAAO6wB,YACpBD,SAAU5wB,EAAO4wB,UAAYA,EAC7B9b,MAAO5V,EAAKihD,SAASngD,EAAO6wB,YAAa7wB,EAAO4wB,UAAYA,EAAU2S,MAvF/DrkC,EA4FnBwkC,0BAA4B,SAAA1jC,GAAU,IAAA4nB,EACM1oB,EAAK2f,MAArCxY,EAD0BuhB,EAC1BvhB,OAAQC,EADkBshB,EAClBthB,UAAWsqB,EADOhJ,EACPgJ,SADOpN,EAEFtkB,EAAKukB,MAA7B8f,EAF0B/f,EAE1B+f,OAAQ1S,EAFkBrN,EAElBqN,YAEZxqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa0S,EAAS1S,EAAc,EACpC/b,MAAO5V,EAAKihD,SAAS5c,EAAS1S,EAAc,EAAGD,GAAU,KAEtD2S,GACPrkC,EAAKghD,SAvGMhhD,EA2GnBihD,SAAW,SAACtvB,EAAaD,EAAU2S,GAC/B,OAAOA,EAAS1S,EAAcD,EAAW,GA5G1B,IAGPjtB,EAAkBgsB,IAAlBhsB,QAASqsB,EAASL,IAATK,KAHF5H,EAIyBlpB,EAAK2f,MAArCxY,EAJO+hB,EAIP/hB,OAAQC,EAJD8hB,EAIC9hB,UAAWsqB,EAJZxI,EAIYwI,SAErB2S,EAAS5/B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEuqB,EAAc0S,GAAUvT,EAAOA,EAAKa,YAAc,EAClD4T,EAAgBlB,GAAUvT,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EARzD,OAUf1xB,EAAKukB,MAAQ,CACT8f,OAAQA,EACR1S,YAAaA,EACbD,SAAU6T,EACV3vB,MAAO5V,EAAKihD,SAAStvB,EAAa4T,EAAelB,IAdtCrkC,qFAkBGklB,EAAWC,GAAW,IAAA+d,EACd/iC,KAAKokB,MAAvB8f,EADgCnB,EAChCmB,OAAQzuB,EADwBstB,EACxBttB,MAEhB,OAAIuP,EAAUvP,QAAUA,GAIpBuP,EAAUkf,SAAWA,8CAQzB5T,IAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,IAAY5O,GAAG,wBAAyB1hB,KAAK+kC,yBAC7CzU,IAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5C3T,IAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,IAAYtuB,eAAe,wBAAyBhC,KAAK+kC,yBACzDzU,IAAYtuB,eAAe,uBAAwBhC,KAAKikC,yDAsEnD,IACGtjB,EAAY3gB,KAAKwf,MAAjBmB,QACAlL,EAAUzV,KAAKokB,MAAf3O,MAER,OACIqK,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,qBACXD,EAAAtf,EAAAqM,cAACm0C,EAAAxgD,EAAD,CACIuf,UAAWY,EAAQsgC,OACnBtgC,QAAS,CACLslB,MAAOtlB,EAAQslB,MACfib,aAAcvgC,EAAQugC,aACtBC,MAAOxgC,EAAQwgC,OAEnBC,IAAK,EACLt6B,IAAK,EACLrR,MAAOA,YA/HGyK,IAAMC,YA4IrBgB,MA3JA,CACX8/B,OAAQ,CACJI,SAAU,KAEdpb,MAAO,CACH5e,WAAY,yEAEhB65B,aAAc,CACV75B,WAAY,4BAEhB85B,MAAO,CACH95B,WAAY,wDAgJLlG,CAAmBy/B,GCtJ5B5zB,6BACF,SAAAA,EAAYxN,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAgtB,IACfntB,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAktB,GAAA7sB,KAAAH,KAAMwf,KAmDVykB,uBAAyB,SAAAtjC,GAAU,IAAA4e,EACD1f,EAAK2f,MAA3BxY,EADuBuY,EACvBvY,OAAQC,EADesY,EACftY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CACVwf,QAAQ,EACR/S,SAAS,EACTK,YAAa,KA3DN3xB,EAgEnBskC,wBAA0B,SAAAxjC,GAAU,IAAA+f,EACO7gB,EAAK2f,MAApCxY,EADwB0Z,EACxB1Z,OAAQC,EADgByZ,EAChBzZ,UADgByZ,EACLyQ,QAEvBnqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK6kB,SAAS,CAAEyM,SAAS,IAEzBtxB,EAAK6kB,SAAS,CAAEyM,SAAS,KAtEdtxB,EA0EnBukC,yBAA2B,SAAAzjC,GAAU,IAAA4nB,EACH1oB,EAAK2f,MAA3BxY,EADyBuhB,EACzBvhB,OAAQC,EADiBshB,EACjBthB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CAAEyM,SAAS,KA9EdtxB,EAkFnBwkC,0BAA4B,SAAA1jC,GAAU,IAAAooB,EACJlpB,EAAK2f,MAA3BxY,EAD0B+hB,EAC1B/hB,OAAQC,EADkB8hB,EAClB9hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKukB,MAAM8f,QACZrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbL,SAAS,IAGVtxB,EAAKukB,MAAM8f,QAClBrkC,EAAK6kB,SAAS,CACVwf,QAAQ,EACR1S,YAAa,EACbL,SAAS,KAjGF,IAGPnqB,EAAsBwY,EAAtBxY,OAAQC,EAAcuY,EAAdvY,UAER0pB,EAA2BL,IAA3BK,KAAMrsB,EAAqBgsB,IAArBhsB,QAAS6sB,EAAYb,IAAZa,QACjB+S,EAAS5/B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKukB,MAAQ,CACT8f,OAAQA,EACR/S,UAAS+S,GAAS/S,EAClBK,YAAa0S,GAAUvT,EAAOA,EAAKa,YAAc,EACjDD,SAAU2S,GAAUvT,EAAOA,EAAKY,SAAW,GAZhC1xB,qFAgBGklB,EAAWC,EAAWC,GAAa,IAAAd,EACFnkB,KAAKokB,MAAhD8f,EAD6C/f,EAC7C+f,OAAQ/S,EADqChN,EACrCgN,QAASK,EAD4BrN,EAC5BqN,YAAaD,EADepN,EACfoN,SAEtC,OAAIvM,EAAUkf,SAAWA,IAIrBlf,EAAUmM,UAAYA,IAItBnM,EAAUwM,cAAgBA,GAI1BxM,EAAUuM,WAAaA,gDAQ3BjB,IAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,IAAY5O,GAAG,wBAAyB1hB,KAAKmkC,yBAC7C7T,IAAY5O,GAAG,yBAA0B1hB,KAAKokC,0BAC9C9T,IAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5C3T,IAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,IAAYtuB,eAAe,wBAAyBhC,KAAKmkC,yBACzD7T,IAAYtuB,eAAe,yBAA0BhC,KAAKokC,0BAC1D9T,IAAYtuB,eAAe,uBAAwBhC,KAAKikC,yDAqDnD,IAAAK,EACwDtkC,KAAKwf,MAA1DxY,EADHs9B,EACGt9B,OAAQC,EADXq9B,EACWr9B,UAAWG,EADtBk9B,EACsBl9B,UAAWqY,EADjC6kB,EACiC7kB,UAC9B0R,GAFHmT,EAC4C3jB,QAC7B3gB,KAAKokB,MAAjB+M,SACR,IAAK/pB,EAAW,OAAO,KAHlB,IAKGmqB,EAA0BnqB,EAA1BmqB,SAAiBrwB,EAASkG,EAAhBC,MAIlB,OACIyY,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YACXD,EAAAtf,EAAAqM,cAACizB,EAAA,EAAD,CACIr5B,UAAW,KACXvF,KAAMA,EACNue,UAAWA,EACXuD,KAAMlD,EAAAtf,EAAAqM,cAAC+2B,EAAApjC,EAAD,MACNk6B,aAAcvJ,EAAUrR,EAAAtf,EAAAqM,cAACy0C,EAAA9gD,EAAD,MAAgBsf,EAAAtf,EAAAqM,cAAC00C,EAAA/gD,EAAD,QAE5Csf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBACXD,EAAAtf,EAAAqM,cAAC20C,EAAD,CAAiBx6C,OAAQA,EAAQC,UAAWA,EAAWsqB,SAAUA,EAAUrwB,KAAMA,IACjF4e,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAC+3B,EAAA,EAAD,CAAa59B,OAAQA,EAAQC,UAAWA,EAAWsqB,SAAUA,EAAUrwB,KAAMA,IAC7E4e,EAAAtf,EAAAqM,cAAC85B,EAAA,EAAD,CAAa3/B,OAAQA,EAAQC,UAAWA,EAAW+b,KAAM,yBA7HzD9C,IAAMC,YA4If6M,u/DCrIAy0B,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAA7hD,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2hD,GAAA7hD,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6hD,GAAAlgD,MAAAzB,KAAA0B,YAAA,OAAA5B,OAAA+hD,EAAA,EAAA/hD,CAAA6hD,EAAAC,GAAA9hD,OAAAgiD,EAAA,EAAAhiD,CAAA6hD,EAAA,EAAAlqC,IAAA,SAAAhC,MAAA,WAGzC,OACIqK,EAAAtf,EAAAqM,cAACk1C,EAAA,iBAAD,CAAkBC,SAAUC,KACxBniC,EAAAtf,EAAAqM,cAAC60C,EAAqB1hD,KAAKwf,YALMmiC,EAAA,CACdzhC,IAAMC,WAWzC,OAFAwhC,EAAqBO,YAArB,6BAAAh3C,OAAgEi3C,YAAeT,GAA/E,KAEOC,uKCKLS,2LACO,IAAA7iC,EAC2Cvf,KAAKwf,MAA7CmB,EADHpB,EACGoB,QAAS3Z,EADZuY,EACYvY,OAAQkY,EADpBK,EACoBL,SAAU+W,EAD9B1W,EAC8B0W,SAE7BukB,EAAav9B,YAAkBjW,GAAQ,GAE7C,OACI8Y,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,sBAAuB,CAAEuhC,+BAAgCnjC,IAC/Ee,QAASgW,GACTnW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,4BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQ2T,mBAAiB,KAErDuE,GAAYY,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,gCAAiCH,EAAQ2hC,UACjFxiC,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IACP,2BACA5B,EAAWyB,EAAQ4hC,aAAe5hC,EAAQ6hC,kBAGlD1iC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mCAEnBD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BAA6By6B,WAvB5Bt6B,IAAMC,YAmCvBgB,MAjDA,SAAAC,GAAK,MAAK,CACrBkhC,OAAQ,CACJ77B,YAAarF,EAAMkU,QAAQ4K,QAAQC,MAEvCoiB,aAAc,CACVE,UAAW,oBAAsBrhC,EAAMkU,QAAQ4K,QAAQC,KACvDmiB,OAAQ,aAAelhC,EAAMkU,QAAQD,WAAWqtB,OAEpDF,eAAgB,CACZC,UAAW,iBAAmBrhC,EAAMkU,QAAQ4K,QAAQC,KACpDmiB,OAAQ,2BAuCkB,CAAE/6B,WAAW,GAAhCpG,CAAwCihC,uECVjDO,sBACF,SAAAA,EAAYnjC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2iD,IACf9iD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6iD,GAAAxiD,KAAAH,KAAMwf,KAmBV88B,YApBmBx8C,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAoBL,SAAAC,IAAA,IAAAu8C,EAAA2F,EAAAtE,EAAAr8C,EAAAyI,EAAAmzC,EAAAb,EAAAr9C,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVlB,EAAKgjD,uBAEC5F,EAAW,GACX2F,EAAkB/gD,IAAgBkJ,KAAK,CACzCjC,QAAS,WACTg2C,aAAc,sBACdZ,eAAgB,EAChBzrB,MAAO,MAEXwqB,EAASzzC,KAAKo5C,GAERtE,EAAuBz8C,IAAgBkJ,KAAK,CAC9CjC,QAAS,oBACTmG,QAASC,IAAUiN,UACnBsiC,OAAO,IAEXxB,EAASzzC,KAAK80C,GAjBJz9C,EAAAE,KAAA,EAmB2B4I,QAAQqpC,IAAIiK,EAAStvC,IAAI,SAAA/B,GAAC,OAAIA,EAAElC,MAAM,SAAAygB,GAAC,OAAI,UAnBtE,OAAAloB,EAAApB,EAAAoK,KAAAP,EAAA5K,OAAA4+C,EAAA,EAAA5+C,CAAAmC,EAAA,GAmBH47C,EAnBGnzC,EAAA,GAmBIsyC,EAnBJtyC,EAAA,GAqBV7K,EAAK6kB,SAAS,CACVo+B,QAASjF,EAAMpB,SACfO,cAAeA,IAGbr9C,EAAQC,IAAUuD,WACxB0Q,YAAiBlU,EAAOk+C,EAAMpB,UA3BpB,yBAAA57C,EAAAU,SAAAb,MApBKb,EAkDnBgjD,qBAlDmB/iD,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAkDI,SAAAyB,IAAA,IAAAqd,EAAAvY,EAAAyG,EAAAtD,EAAA,OAAAolB,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAwe,EACY1f,EAAK2f,MAA5BxY,EADWuY,EACXvY,OAAQyG,EADG8R,EACH9R,WACXzG,EAFc,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAGdoM,EAHc,CAAAtL,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,sBAIfoM,EAAWzH,OAAS,GAJL,CAAA7D,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAKdqb,YAAa1V,GALC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAMdia,YAAgBtU,GANF,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAQEc,IAAgBkJ,KAAK,CACtCjC,QAAS,uBACT1C,QAASY,EACTsX,WAAY7Q,EAAW,GACvBs1C,WAAW,IAZI,QAQb54C,EARahI,EAAA8I,KAenBpL,EAAK6kB,SAAS,CACVs+B,kBAAmB74C,IAhBJ,yBAAAhI,EAAAZ,SAAAW,MAlDJrC,EAsEnB4wC,YAAc,WACV5uC,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,QAzEKpjD,EA6EnBqjD,eAAiB,WAAM,IACX1rC,EAAM3X,EAAK2f,MAAXhI,EACAwrC,EAAsBnjD,EAAKukB,MAA3B4+B,kBAER,GAAKA,GACAA,EAAkBG,KAAvB,CAEA,IAAM1rC,EAAG,aAAAvM,OAAgB83C,EAAkBG,MACrC7+C,EAAUkT,EAAE,cAGlB4rC,IAAKJ,EAAkBG,MAEvBtjD,EAAKwjD,sBAAsB5rC,EAAKnT,EAJjB,QAtFAzE,EA6FnBwjD,sBAAwB,SAAC5rC,EAAKnT,EAASoR,GACnC,GAAK+B,EAAL,CAD8C,IAAAiJ,EAGT7gB,EAAK2f,MAAlC8jC,EAHsC5iC,EAGtC4iC,gBAAiB3iC,EAHqBD,EAGrBC,QACzB,GAAK2iC,EAAL,CAII/qC,IAAiBgrC,mBAAmB9rC,EAAK+rC,IAAqC,IAAsB9tC,IAEpG4tC,EAAgBh/C,EAAS,CACrBm/C,iBAAkBD,IAClB9tC,OAAQ,CACJoK,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIiX,IAAI,QACJiyB,aAAW,QACXvnB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,IAAiBmrC,sBAAsBjsC,KACtDqI,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,aAhHDX,EAuHnB8jD,oBAAsB,SAAC38C,EAAQyG,GAC3B,GAA0B,IAAtBA,EAAWzH,OAAc,OAAO,KAEpC,IAAM1B,EAAUsJ,IAAa3K,IAAI+D,EAAQyG,EAAW,IACpD,IAAKnJ,EAAS,OAAO,KAJqB,IAMlCs/C,EAA8Bt/C,EAA9Bs/C,iBAAkBr/C,EAAYD,EAAZC,QAC1B,IAAKq/C,GAAyC,2BAArBr/C,EAAQ,SAAuC,KAC5DK,EAAUL,EAAVK,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DmB,EAAUnB,EAAVmB,MACR,GAAIA,GAASA,EAAMC,OACf,OAAOD,EAAMA,EAAMC,OAAS,GAIpC,OAAO,MAxIQnG,EA2InB+wC,WAAa,WACT/wC,EAAK4wC,cADU,IAAAloB,EAGiC1oB,EAAK2f,MAA7CxY,EAHOuhB,EAGPvhB,OAAQyG,EAHD8a,EAGC9a,WAAYxH,EAHbsiB,EAGatiB,UAAWk9C,EAHxB56B,EAGwB46B,KACvC,GAAKn8C,GAAWyG,GAAeA,GAAexH,GAAck9C,EAA5D,CAEA,IAAMtlC,EAAOhe,EAAKgkD,aAAahkD,EAAKikD,WAAWl2B,SAE/C/tB,EAAKkkD,YAAY3gD,QAAQ,SAAA4gD,GACrB,GAAIb,EAyCA,OAxCItlC,GACAhc,IAAgBkJ,KAAK,CACjBjC,QAAS,cACT1C,QAAS49C,EACTzyC,oBAAqB,EACrB0yC,uBAAuB,EACvBC,iBAAiB,EACjB3lC,aAAc,KACd+5B,sBAAuB,CACnBxvC,QAAS,mBACT+U,KAAM,CACF/U,QAAS,gBACT+U,KAAMA,EACNuN,SAAU,MAEdspB,0BAA0B,EAC1BC,aAAa,UAKzB9yC,IAAgBkJ,KAAK,CACjBjC,QAAS,cACT1C,QAAS49C,EACTzyC,oBAAqB,EACrB0yC,uBAAuB,EACvBC,iBAAiB,EACjB3lC,aAAc,KACd+5B,sBAAuB,CACnBxvC,QAAS,mBACT+U,KAAM,CACF/U,QAAS,gBACT+U,KAAMslC,EACN/3B,SAAU,MAEdspB,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMvoC,EAAOnG,GAAapG,EAAK8jD,oBAAoB38C,EAAQyG,GAC3D,GAAIrB,EAAJ,CAAU,IACEuD,EAAyBvD,EAAzBuD,MAAOE,EAAkBzD,EAAlByD,OAAQjL,EAAUwH,EAAVxH,MAEvB/C,IAAgBkJ,KAAK,CACjBjC,QAAS,cACT1C,QAAS49C,EACTzyC,oBAAqB,EACrB0yC,uBAAuB,EACvBC,iBAAiB,EACjB3lC,aAAc,KACd+5B,sBAAuB,CACnBxvC,QAAS,oBACTlE,MAAO,CACHkE,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd+D,UAAW,KACX09C,uBAAwB,GACxBx0C,MAAOA,EACPE,OAAQA,EACRsc,QAAS,CACLrjB,QAAS,gBACT+U,KAAMA,EACNuN,SAAU,MAEdyC,IAAK,UAObhQ,GACAhc,IAAgBkJ,KAAK,CACjBjC,QAAS,cACT1C,QAAS49C,EACTzyC,oBAAqB,EACrB0yC,uBAAuB,EACvBC,iBAAiB,EACjB3lC,aAAc,KACd+5B,sBAAuB,CACnBxvC,QAAS,mBACT+U,KAAM,CACF/U,QAAS,gBACT+U,KAAMA,EACNuN,SAAU,MAEdspB,0BAA0B,EAC1BC,aAAa,KAKzB9yC,IAAgBkJ,KAAK,CACjBjC,QAAS,kBACT1C,QAAS49C,EACTI,aAAcp9C,EACd+E,YAAa0B,EACbw2C,uBAAuB,EACvBC,iBAAiB,EACjBG,UAAU,QA7PHxkD,EAkQnBykD,sBAAwB,SAAAt9C,GAChBnH,EAAKkkD,YAAYjhD,IAAIkE,GACrBnH,EAAKkkD,YAAY7gD,OAAO8D,GAExBnH,EAAKkkD,YAAY9iD,IAAI+F,EAAQA,GAGjCtD,QAAQ4F,IAAIzJ,EAAKkkD,aAEjBlkD,EAAK4hB,eA3QU5hB,EA8QnBgkD,aAAe,SAAAU,GACX,IAAM1Y,EAAY0Y,EAAI1Y,UAChBgE,EAAY0U,EAAI1U,UAMtB,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE0U,EAAI1U,UAAY,IAGbhE,GAtRQhsC,EAyRnB2kD,oBAAsB,SAAAh5C,GACI,KAAlBA,EAAMigC,SACNjgC,EAAMod,kBA3RK/oB,EA+RnB4kD,kBAAoB,WAAM,IAAAtgC,EACatkB,EAAKukB,MAAhC0+B,EADc3+B,EACd2+B,QAAS9F,EADK74B,EACL64B,cAEXnN,EAAYhwC,EAAK6kD,UAAU92B,QAAQiiB,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtChwC,EAAK6kD,UAAU92B,QAAQiiB,UAAY,IAGvC,IAAMhE,EAAYhsC,EAAKgkD,aAAahkD,EAAK6kD,UAAU92B,SAASsJ,OAC5D,GAAK2U,EAAL,CAKA,IAAMsR,EAAYnW,YAAc6E,GAC1BwR,EAAetW,YAAiB8E,GAMhC8Y,GAJc3H,EACd,CAACA,EAAct6C,IAAIwI,OAAO43C,EAAQj3C,OAAO,SAAAD,GAAC,OAAIA,IAAMoxC,EAAct6C,MAAKmJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnGk3C,GAE4Bj3C,OAC9B,SAAAD,GAAC,OACG/L,EAAK+kD,cAAch5C,EAAGigC,IACrBsR,GAAat9C,EAAK+kD,cAAch5C,EAAGuxC,IACnCE,GAAgBx9C,EAAK+kD,cAAch5C,EAAGyxC,KAG/Cx9C,EAAK6kB,SAAS,CAAEmH,WAAYggB,EAAW8Y,cAAeA,SAlBlD9kD,EAAK6kB,SAAS,CAAEmH,WAAY,KAAM84B,cAAe,MAzStC9kD,EA8TnBglD,kBAAoB,SAAAr5C,GAChB,IAAMwsC,EAAYxsC,EAAMyhC,cAAcC,QAAQ,cAC1C8K,IACAxsC,EAAMod,iBACN9jB,SAASuoC,YAAY,cAAc,EAAO2K,KAlU/Bn4C,EAsUnBilD,mBAAqB,WACjB,IAAMjV,EAAYhwC,EAAKikD,WAAWl2B,QAAQiiB,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtChwC,EAAKikD,WAAWl2B,QAAQiiB,UAAY,KAzUzBhwC,EA6UnBklD,mBAAqB,SAAAv5C,GACjB,IAAMwsC,EAAYxsC,EAAMyhC,cAAcC,QAAQ,cAC1C8K,IACAxsC,EAAMod,iBACN9jB,SAASuoC,YAAY,cAAc,EAAO2K,KAjV/Bn4C,EAqVnB+kD,cAAgB,SAAC59C,EAAQ6kB,GAAe,IAC5BrU,EAAM3X,EAAK2f,MAAXhI,EACAwlC,EAAkBn9C,EAAKukB,MAAvB44B,cAER,GAAIA,GAAiBh2C,IAAWg2C,EAAct6C,KAE2B,KADvDwZ,YAAalV,GAAQ,EAAMwQ,IAAM,IACrCwtC,oBAAoBpP,QAAQ/pB,EAAWvX,eAC7C,OAAO,EAKf,OAAsE,KADvD4H,YAAalV,GAAQ,EAAOwQ,IAAM,IACtCwtC,oBAAoBpP,QAAQ/pB,EAAWvX,iBAKsB,KADvDgH,YAAgBtU,IAAW,IAC/Bg+C,oBAAoBpP,QAAQ/pB,EAAWvX,gBAtWrCzU,EA6WnBolD,eAAiB,WACblqB,WAAW,WACHl7B,EAAK6kD,UAAU92B,SACC/tB,EAAK6kD,UAAU92B,QAEvBwd,SAEb,MAjXHvrC,EAAKukB,MAAQ,CACT0+B,QAAS,GACT9F,cAAe,MAGnBn9C,EAAK6kD,UAAYxkC,IAAMqb,YACvB17B,EAAKikD,WAAa5jC,IAAMqb,YAExB17B,EAAKkkD,YAAc,IAAI76C,IAXRrJ,mFAefG,KAAKs8C,cAELt8C,KAAKilD,kDAsWA,IAAAx6C,EAAAzK,KAAA+oB,EACkB/oB,KAAKwf,MAApBmB,EADHoI,EACGpI,QAASnJ,EADZuR,EACYvR,EADZurB,EAE4E/iC,KAAKokB,MAA9E0+B,EAFH/f,EAEG+f,QAASj3B,EAFZkX,EAEYlX,WAAY84B,EAFxB5hB,EAEwB4hB,cAAe3H,EAFvCja,EAEuCia,cAAegG,EAFtDjgB,EAEsDigB,kBAMrDnF,GAJcb,EACd,CAACA,EAAct6C,IAAIwI,OAAO43C,EAAQj3C,OAAO,SAAAD,GAAC,OAAIA,IAAMoxC,EAAct6C,MAAKmJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnGk3C,GAEoBn1C,IAAI,SAAA/B,GAAC,OAC3BkU,EAAAtf,EAAAqM,cAACq4C,EAAD,CACIztC,IAAK7L,EACL5E,OAAQ4E,EACRsT,SAAUzU,EAAKs5C,YAAYjhD,IAAI8I,GAC/BqqB,SAAU,kBAAMxrB,EAAK65C,sBAAsB14C,QAI7Cu5C,GAAcR,GAAiB,IAAIh3C,IAAI,SAAA/B,GAAC,OAC1CkU,EAAAtf,EAAAqM,cAACq4C,EAAD,CACIztC,IAAK7L,EACL5E,OAAQ4E,EACRsT,SAAUzU,EAAKs5C,YAAYjhD,IAAI8I,GAC/BqqB,SAAU,kBAAMxrB,EAAK65C,sBAAsB14C,QAInD,OACIkU,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACIyJ,MAAI,EACJ0f,QAAS3pB,KAAKywC,YACdlmB,kBAAgB,uBAChB66B,mBAAiB,6BACjBrlC,UAAWY,EAAQ+G,QACnB5H,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,wBAAwB8U,EAAE,gBAC1CsI,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAK0kD,UACVhiD,GAAG,wBACH6qC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAaj2B,EAAE,UACfs2B,UAAW9tC,KAAKwkD,oBAChBlL,QAASt5C,KAAKykD,kBACd1W,QAAS/tC,KAAK6kD,oBAElB/kC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBAAuB89B,GACrChyB,GACG/L,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ0kC,WAAY,+BAAgCF,IAGtFnlD,KAAK+jD,YAAY33C,KAAO,GACrB0T,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAK8jD,WACVphD,GAAG,yBACH6qC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAaj2B,EAAE,gBACf8hC,QAASt5C,KAAK8kD,mBACd/W,QAAS/tC,KAAK+kD,qBAGtBjlC,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKywC,YAAatuB,MAAM,WACpC3K,EAAE,WAENxX,KAAK+jD,YAAY33C,KAAO,GACrB0T,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAK4wC,WAAYzuB,MAAM,UAAUmjC,WAAS,GACtD9tC,EAAE,UAGTxX,KAAK+jD,YAAY33C,MAAQ42C,GACvBljC,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKkjD,eAAgB/gC,MAAM,WACvC3K,EAAE,sBAhcH0I,IAAMC,YAqdnB4G,GANCC,YACZ7F,IAleW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB2wB,MAAO,CACHjN,QAASpC,EAAMmkC,QAAQC,KAAO,GAElC99B,OAAQ,CACJvF,MAAOf,EAAMkU,QAAQzX,KAAKqiB,SAE9BulB,cAAe,CACXjiC,QAAS,EACTzW,QAAS,OACTqW,SAAU,YAEdiiC,WAAY,CACRhwB,WAAYjU,EAAMkU,QAAQD,WAAWqtB,QAEtCp7B,YAAYlG,KAmdI,CAAEmG,WAAW,IAChCC,cACAk+B,eAGW3+B,CAAQ47B,oWChcRgD,uBA7DX,SAAAA,EAAYnmC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2lD,IACf9lD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6lD,GAAAxlD,KAAAH,KAAMwf,KAeVomC,YAAc,WACV,IAAM5sC,EAAM,IAAIJ,KACV+lB,EAAU9+B,EAAKgmD,OAAS7sC,EACxBvD,EAAQ,IAAOkpB,EAAU9+B,EAAK2f,MAAMsmC,QAAW,IAErDjmD,EAAK6kB,SAAS,CACVia,QAASA,EAAU,EAAIA,EAAU,EACjClpB,MAAOA,EAAQ,IAAM,IAAMA,IAG3BuD,GAAOnZ,EAAKgmD,QACRhmD,EAAKkmD,UACLC,cAAcnmD,EAAKkmD,SACnBlmD,EAAKkmD,QAAU,OA1BvBlmD,EAAKukB,MAAQ,CACTua,QAAS9+B,EAAK2f,MAAMsmC,QAAU,IAC9BrwC,MAAO,GALI5V,mFAUfG,KAAKqkB,UAAY,IAAIzL,KACrB5Y,KAAK6lD,OAAS7lD,KAAKqkB,UACnBrkB,KAAK6lD,OAAOI,gBAAgBjmD,KAAK6lD,OAAOK,kBAAoBlmD,KAAKwf,MAAMsmC,SACvE9lD,KAAK+lD,QAAUI,YAAYnmD,KAAK4lD,YAAa,oDAsBzC5lD,KAAK+lD,UACLC,cAAchmD,KAAK+lD,SACnB/lD,KAAK+lD,QAAU,uCAId,IAAA5hC,EACsBnkB,KAAKokB,MAAxB3O,EADH0O,EACG1O,MAAOkpB,EADVxa,EACUwa,QAEf,OACI7e,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,2BACXD,EAAAtf,EAAAqM,cAACqhC,GAAA,EAAD,CAAY/rB,MAAM,YAAYwc,EAAU,KAAMtyB,YAElDyT,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BACXD,EAAAtf,EAAAqM,cAACoW,GAAAziB,EAAD,CAAkB4L,KAAM,GAAIqJ,MAAO,IAAMA,EAAOoR,QAAQ,oBAnD5C3G,IAAMC,gCCwBhCimC,WAAmB,CACrBr8B,SAAU,SACVC,WAAY,UAGVq8B,GAAsB,CACxBt8B,SAAU,MACVC,WAAY,SAGVs8B,8MACFC,oBAAsB,SAAAv/C,GAClB,IAAMjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,8CAAA7G,OAA+CnH,EAAKgX,MAApD,KAEJ,IAAK,qBACD,IAAMZ,EAAaC,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAX,0CAAApP,OACyCnH,EAAKgX,MAD9C,6CAAA7P,OAEuCnH,EAAKgX,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAA7P,OAAoD+R,YAAkBjW,GAAtE,KAIR,OAAO,8EAGF,IAAAuY,EACiCvf,KAAKwf,MAAnCmK,EADHpK,EACGoK,QAAS3iB,EADZuY,EACYvY,OAAWw/C,EADvB1mD,OAAA2mD,GAAA,EAAA3mD,CAAAyf,EAAA,sBAGL,OACIO,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAADV,OAAAk9B,OAAA,CACI1S,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZi8B,GACJ1mC,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,uBAAuBua,YAAkBjW,IACzD8Y,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,yBACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,IACzB8Y,EAAAtf,EAAAqM,cAAC6d,GAAAlqB,EAAD,CAAmBkC,GAAG,6BACjB1C,KAAKumD,oBAAoBv/C,MAItC8Y,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUmjC,WAAS,GAA/D,eAnDUplC,IAAMC,WA4D9BumC,oLACO,IAAAhmC,EACiC1gB,KAAKwf,MAAnCmK,EADHjJ,EACGiJ,QAAS3iB,EADZ0Z,EACY1Z,OAAWw/C,EADvB1mD,OAAA2mD,GAAA,EAAA3mD,CAAA4gB,EAAA,sBAGL,OACIZ,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAADV,OAAAk9B,OAAA,CACI1S,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZi8B,GACJ1mC,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,uBAAuBua,YAAkBjW,IACzD8Y,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,yBACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,IACzB8Y,EAAAtf,EAAAqM,cAAC6d,GAAAlqB,EAAD,CAAmBkC,GAAG,6BAAtB,0CAKRod,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUmjC,WAAS,GAA/D,eAvBaplC,IAAMC,WAgCjCwmC,eACF,SAAAA,EAAYnnC,GAAO,IAAA/U,EAAA,OAAA3K,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2mD,IACfl8C,EAAA3K,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6mD,GAAAxmD,KAAAH,KAAMwf,KASVonC,kBAAoB,SAAAp7C,GAChBf,EAAKia,SAAS,CAAEokB,SAAUt9B,EAAMw9B,iBAXjBv+B,EAcnBw+B,gBAAkB,WACdx+B,EAAKia,SAAS,CAAEokB,SAAU,QAfXr+B,EAkBnBo8C,eAAiB,WACbp8C,EAAKw+B,kBACLlO,WAAW,kBAAMtwB,EAAK+U,MAAMsnC,mBAAmB,MApBhCr8C,EAuBnBs8C,mBAAqB,WACjBt8C,EAAKw+B,kBAELx+B,EAAKia,SAAS,CAAEsiC,kBAAkB,KA1BnBv8C,EA6BnBw8C,2BAA6B,SAAA98C,GAGzB,GAFAM,EAAKia,SAAS,CAAEsiC,kBAAkB,IAE7B78C,EAAL,CAEA,IAAMnD,EAASuR,IAAiBwT,YAE1BjiB,EAAU,CACZhB,QAAS,oBACT1C,QAASY,EACTozC,uBAAuB,GAG3B3vC,EAAK44C,sBAAsBr8C,EAAQ,2BAPnB,mBAOwD8C,KA1CzDW,EA6CnBy8C,YAAc,WACVz8C,EAAKw+B,kBAELx+B,EAAKia,SAAS,CAAEyiC,YAAY,KAhDb18C,EAmDnB28C,oBAAsB,SAAAj9C,GAGlB,GAFAM,EAAKia,SAAS,CAAEyiC,YAAY,IAEvBh9C,EAAL,CAEA,IAAMnD,EAASuR,IAAiBwT,YAC1BznB,EAAUmG,EAAK48C,yBAAyBrgD,GACxC8C,EAAU+R,YAAc7U,GACxB,CAAE8B,QAAS,oBAAqB1C,QAASY,EAAQozC,uBAAuB,GACxE,CAAEtxC,QAAS,YAAa1C,QAASY,GAEvCyD,EAAK44C,sBAAsBr8C,EAAQ,wBAAyB1C,EAASwF,KA9DtDW,EAiEnB44C,sBAAwB,SAACr8C,EAAQsgD,EAAkBhjD,EAASwF,GACxD,GAAKw9C,EAAL,CAEA,IAAM7vC,EAAG,GAAAvM,OAAMo8C,EAAN,YAAAp8C,OAAiClE,GACpC0O,EAAM,eAAArV,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAAG,SAAAC,IAAA,OAAA6uB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDc,IAAgBkJ,KAAKjB,GAFpB,cAAAjJ,EAAAC,KAAA,EAIPe,IAAgBgH,aAAa,CAAEC,QAASw+C,EAAkBtgD,OAAQA,EAAQ6zB,YAAY,IAJ/Eh6B,EAAA0mD,OAAA,2BAAA1mD,EAAAU,SAAAb,EAAA,oBAAH,yBAAAL,EAAAoB,MAAAzB,KAAA0B,YAAA,GAJwD8lD,EAe/B/8C,EAAK+U,MAAlC8jC,EAf4DkE,EAe5DlE,gBAf4DkE,EAe3C7mC,QACzB,GAAK2iC,EAAL,CAGI/qC,IAAiBgrC,mBAAmB9rC,EAAK+rC,IAAoC9tC,EARlE,WACX7T,IAAgBgH,aAAa,CAAEC,QAASw+C,EAAkBtgD,OAAQA,EAAQ6zB,YAAY,QAQtFh5B,IAAgBgH,aAAa,CAAEC,QAASw+C,EAAkBtgD,OAAQA,EAAQ6zB,YAAY,IACtFyoB,EAAgBh/C,EAAS,CACrBm/C,iBAAkBD,IAAqC,IACvD9tC,OAAQ,CACJoK,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYiX,IAAI,WAAW0K,MAAM,UAAUpC,UAAU,mBACjDD,EAAAtf,EAAAqM,cAAC46C,GAAD,CAAmB3B,QAAStC,OAEhC1jC,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CACIiX,IAAI,OACJ0K,MAAM,UACN/V,KAAK,QACL6T,QAAS,kBAAM1H,IAAiBmrC,sBAAsBjsC,KAJ1D,eA5FGhN,EAwGnBi9C,kBAAoB,SAAA1gD,GAChB,IAAMjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAKgO,KAAM,OAAO,KAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQ7P,EAkInB48C,yBAA2B,SAAArgD,GACvB,IAAMjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,MAAO,eAClB,IAAKA,EAAKgO,KAAM,MAAO,eAEvB,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJP7P,EAAK2Z,MAAQ,CACT0kB,SAAU,KACVqe,YAAY,EACZH,kBAAkB,GANPv8C,wEA4JV,IACGkW,EAAY3gB,KAAKwf,MAAjBmB,QADHwD,EAE8CnkB,KAAKokB,MAAhD0kB,EAFH3kB,EAEG2kB,SAAUqe,EAFbhjC,EAEagjC,WAAYH,EAFzB7iC,EAEyB6iC,iBAExBhgD,EAASuR,IAAiBwT,YAC1B47B,EAAexqC,YAAgBnW,GAC/B4gD,EAAavqC,YAAcrW,GAC3B6gD,EAAiB7nD,KAAK0nD,kBAAkB1gD,GAE9C,OACI8Y,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIsnD,YAAWhf,EAAW,cAAgB,KACtCif,gBAAc,OACdhoC,UAAWY,EAAQqnC,eACnBte,aAAW,OACXzpB,QAASjgB,KAAK4mD,mBACd9mC,EAAAtf,EAAAqM,cAACo7C,GAAAznD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAAC+8B,GAAAppC,EAAD,CACIkC,GAAG,YACHomC,SAAUA,EACV7+B,KAAMmT,QAAQ0rB,GACdnf,QAAS3pB,KAAKipC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBjgB,aAAcs8B,GACdn8B,gBAAiBo8B,IACjBvmC,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAK6mD,gBAAxB,aACCc,GAAgB7nC,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAK+mD,oBAAxB,iBAChBa,GAAcC,GAAkB/nC,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKknD,aAAcW,IAE3E/nC,EAAAtf,EAAAqM,cAACq7C,GAAD,CAAiBlhD,OAAQA,EAAQiD,KAAMk9C,EAAYx9B,QAAS3pB,KAAKonD,sBACjEtnC,EAAAtf,EAAAqM,cAACs7C,GAAD,CAAoBnhD,OAAQA,EAAQiD,KAAM+8C,EAAkBr9B,QAAS3pB,KAAKinD,qCA/L7D/mC,IAAMC,WA0MpB4G,GALCC,YACZ7F,IAlTW,SAAAC,GAAK,MAAK,CACrB4mC,eAAgB,CACZ9gC,OAAQ,qBAiTZw+B,eAGW3+B,CAAQ4/B,kCC9TjByB,uBACF,SAAAA,EAAY5oC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAooD,IACfvoD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAsoD,GAAAjoD,KAAAH,KAAMwf,KA0DVyV,mBAAqB,SAAAt0B,GAAU,IACnBsL,EAAWpM,EAAK2f,MAAhBvT,OACF7H,EAAO8K,IAAUjM,IAAIgJ,GAEvBA,IAAWtL,EAAOsO,SAClBpP,EAAK6kB,SAAS,CAAE9K,OAAQM,aAAc9V,GAAOo+B,SAAUpnB,aAAahX,MAhEzD,IAGP6H,EAAWpM,EAAK2f,MAAhBvT,OACF7H,EAAO8K,IAAUjM,IAAIgJ,GAJZ,OAMfpM,EAAKukB,MAAQ,CACTikC,WAAYp8C,EACZ2N,OAAQM,aAAc9V,GACtBo+B,SAAUpnB,aAAahX,IATZvE,qFA4BGklB,EAAWC,GAAW,IAAAzF,EACdvf,KAAKwf,MAAvBvT,EADgCsT,EAChCtT,OAAQmV,EADwB7B,EACxB6B,MADwB+C,EAEXnkB,KAAKokB,MAA1BxK,EAFgCuK,EAEhCvK,OAAQ4oB,EAFwBre,EAExBqe,SAEhB,OAAIzd,EAAU3D,QAAUA,IAIpB2D,EAAU9Y,SAAWA,IAIrB+Y,EAAUpL,SAAWA,GAIrBoL,EAAUwd,WAAaA,gDAQ3BtzB,IAAUwS,GAAG,mBAAoB1hB,KAAKi1B,mEAItC/lB,IAAUlN,eAAe,mBAAoBhC,KAAKi1B,qDAY7C,IACGtU,EAAY3gB,KAAKwf,MAAjBmB,QADHoiB,EAEwB/iC,KAAKokB,MAA1BxK,EAFHmpB,EAEGnpB,OAAQ4oB,EAFXO,EAEWP,SAEhB,OACI1iB,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,iBAAkBH,EAAQ2nC,mBAA3BxoD,OAAA0mB,GAAA,EAAA1mB,CAAA,CACjByoD,eAAgB/lB,GACf7hB,EAAQ6nC,yBAA2BhmB,KAEvC5oB,sDAjEmB4F,EAAO4E,GACnC,GAAI5E,EAAMvT,SAAWmY,EAAMikC,WAAY,KAC3Bp8C,EAAWuT,EAAXvT,OACF7H,EAAO8K,IAAUjM,IAAIgJ,GAE3B,MAAO,CACHo8C,WAAYp8C,EACZ2N,OAAQM,aAAc9V,GACtBo+B,SAAUpnB,aAAahX,IAI/B,OAAO,YA1BiB8b,IAAMC,YAqFvBgB,OA9FA,SAAAC,GAAK,MAAK,CACrBknC,mBAAoB,CAChBnmC,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqlB,UAAY,WAE1EslB,yBAA0B,CACtBrmC,MAAOf,EAAMkU,QAAQ4K,QAAQiD,KAAO,gBAyFV,CAAE5b,WAAW,GAAhCpG,CAAwCinC,ICjDxCK,sNAvCX9iC,YAAc,WAAM,IAAApG,EACa1f,EAAK2f,MAA1BvT,EADQsT,EACRtT,OAAQgqB,EADA1W,EACA0W,SAEV7xB,EAAO8K,IAAUjM,IAAIgJ,GACtB7H,GACA6xB,GAELA,EAAS7xB,yFAXS2gB,EAAWC,GAC7B,OAAOD,EAAU9Y,SAAWjM,KAAKwf,MAAMvT,wCAalC,IACGA,EAAWjM,KAAKwf,MAAhBvT,OACF7H,EAAO8K,IAAUjM,IAAIgJ,GAErB0T,EAAWzI,aAAgB9S,GAEjC,OACI0b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,OAAOE,QAASjgB,KAAK2lB,aAChC7F,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQA,IACzB6T,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBJ,IAEnCG,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAC67C,GAAD,CAAmBz8C,OAAQA,eA9B7BiU,IAAMC,2CCW1BwoC,uBACF,SAAAA,EAAYnpC,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2oD,GAAA7oD,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6oD,GAAAxoD,KAAAH,KACVwf,0EAGD,IAAAD,EACwDvf,KAAKwf,MAA1DmB,EADHpB,EACGoB,QAAS3Z,EADZuY,EACYvY,OAAQwQ,EADpB+H,EACoB/H,EAAGoxC,EADvBrpC,EACuBqpC,WAAY3oC,EADnCV,EACmCU,QAAS0J,EAD5CpK,EAC4CoK,QAE7Cs5B,EAAOzrC,EAAE,YAOb,OANIqE,YAAc7U,GACdi8C,EAAOzrC,EAAE,QACFuE,YAAc/U,KACrBi8C,EAAOzrC,EAAE,gBAITsI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACV6oC,GACG9oC,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQkoC,eAAgB5oC,QAAS0J,GACpD7J,EAAAtf,EAAAqM,cAACi8C,GAAAtoD,EAAD,OAGRsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyBkjC,KAE3C2F,GACE9oC,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQooC,gBAAiB9oC,QAAS0J,GACrD7J,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,eA3BQ0f,IAAMC,YAwCvB4G,GALCC,YACZQ,cACArG,IA9CW,CACX0nC,eAAgB,CACZ3hC,OAAQ,qBAEZ6hC,gBAAiB,CACb7hC,OAAQ,sBAyCO,CAAEK,WAAW,IAGrBR,CAAQ4hC,wFCvCjBK,eACF,SAAAA,EAAYxpC,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAgpD,GAAAlpD,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAkpD,GAAA7oD,KAAAH,KACVwf,0EAGD,IAAAD,EACkBvf,KAAKwf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EACTywB,EAAYjoC,KAAKokB,MAAjB6jB,QAER,OACInoB,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAKooC,4BACxDtoB,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KAAgBynC,EAAwCnoB,EAAAtf,EAAAqM,cAACo8C,GAAAzoD,EAAD,MAA9Bsf,EAAAtf,EAAAqM,cAACq8C,GAAA1oD,EAAD,OAC1Bsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B3xC,EAAE,oBAIfsI,EAAAtf,EAAAqM,cAACu8C,GAAA5oD,EAAD,KACIsf,EAAAtf,EAAAqM,cAACw8C,GAAA7oD,EAAD,CAAQ2hB,MAAM,UAAUK,SAAUxiB,KAAKooC,2BAA4BvlB,SAAUolB,oBApB7DF,GAgCrBhhB,GALCC,YACZQ,cACArG,IAnCW,CACX4wB,SAAU,CACNvuB,QAAS,cAiCM,CAAE+D,WAAW,IAGrBR,CAAQiiC,wFC3BjBM,eACF,SAAAA,EAAY9pC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAspD,IACfzpD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAwpD,GAAAnpD,KAAAH,KAAMwf,KAoBV+pC,gBAAkB,WACd1pD,EAAK6kB,SAAS,CAAE8kC,UAAW3pD,EAAKukB,MAAMolC,YAtBvB3pD,EAyBnB4pD,kBAAoB,WAChB,IAAM/V,EAAgBn7B,IAAiBwT,YAC/B/kB,EAAWnH,EAAK2f,MAAhBxY,OACJ0sC,IAAkB1sC,GAGlBnF,IAAgB6nD,UAAU1iD,IA/BfnH,EAmCnB8pD,YAAc,WAAM,IACR3iD,EAAWnH,EAAKukB,MAAhBpd,OAEFjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAKgO,KAAV,CALgB,IAOR9C,EAAYlL,EAAKgO,KAAjB9C,QACHA,GAELpN,IAAgBkJ,KAAK,CACjBjC,QAASuqB,aAAcpkB,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGPjI,EAAWnH,EAAK2f,MAAhBxY,OAHO,OAIfnH,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZwiD,UAAU,GANC3pD,wEAmDV,IAAA0f,EAC0Bvf,KAAKwf,MAA5BhI,EADH+H,EACG/H,EAAGxQ,EADNuY,EACMvY,OAAQ2Z,EADdpB,EACcoB,QACX6oC,EAAaxpD,KAAKokB,MAAlBolC,SAEFzlD,EAAOgP,KAAU9P,IAAI+D,GAErB4iD,EAAU9tC,YAAY9U,GACxB6iD,GAAY,GACXD,GAAW7lD,EAAKgO,OACjB83C,EAAYx2B,aAActvB,EAAKgO,KAAK9C,UAExC,IAAM66C,EAAW9tC,YAAahV,GACxBs3B,EAAYviB,YAAc/U,GAEhC,OACI8Y,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAKupD,iBACxDzpC,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACk9C,GAAAvpD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B3xC,EAAE,WAIdgyC,EAAW1pC,EAAAtf,EAAAqM,cAACm9C,GAAAxpD,EAAD,MAAiBsf,EAAAtf,EAAAqM,cAACo9C,GAAAzpD,EAAD,OAEjCsf,EAAAtf,EAAAqM,cAACq9C,GAAA1pD,EAAD,CAAU2pD,GAAIX,EAAU1D,QAAQ,OAAOsE,eAAa,GAChDtqC,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,CAAM6pD,UAAU,MAAMC,gBAAc,IAC9BV,GACE9pC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAKypD,mBACxD3pC,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B3xC,EAAE,mBAKnBsI,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAK2pD,aACxD7pC,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,YAAY0E,QAAQ,UAAUsiC,QAAM,GACrC3xC,EAAZqyC,EAAc,UAAe,qBAOrDD,GAAWE,GACRhqC,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,UAChCjyB,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,YAAY0E,QAAQ,UAAUsiC,QAAM,GACrC3xC,EAAZ8mB,EAAc,eAAoB,kBAMtDsrB,IAAYE,GACThqC,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,UAChCjyB,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,YAAY0E,QAAQ,UAAUsiC,QAAM,GACjD3xC,EAAE,wEAlHXgI,EAAO4E,GACnC,OAAI5E,EAAMxY,SAAWod,EAAM0e,WAChB,CACHA,WAAYtjB,EAAMxY,OAClBwiD,UAAU,GAIX,YAnBYtpC,IAAMC,WA+IlB4G,GALCC,YACZQ,cACArG,IAlJW,CACX4wB,SAAU,CACNvuB,QAAS,cAgJM,CAAE+D,WAAW,IAGrBR,CAAQuiC,0CCjGjBkB,uBACF,SAAAA,EAAYhrC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAwqD,IACf3qD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA0qD,GAAArqD,KAAAH,KAAMwf,KAmGVkjB,2BAA6B,SAAA/hC,GACzB,IAAMoD,EAAOgP,KAAU9P,IAAIpD,EAAK2f,MAAMxY,QACjCjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAK4H,iBAAmBhZ,EAAOgZ,iBAEpC9Z,EAAK4qD,mBAEL5qD,EAAK4hB,gBA/GM5hB,EAmHnB8iC,2BAA6B,SAAAhiC,GACzB,IAAMoD,EAAOgP,KAAU9P,IAAIpD,EAAK2f,MAAMxY,QACjCjD,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAKsI,gBAAkB1Z,EAAO0Z,eAEnCxa,EAAK4hB,eA5HM5hB,EAgInB4iC,qBAAuB,SAAA9hC,GACnB,IAAMoD,EAAOgP,KAAU9P,IAAIpD,EAAK2f,MAAMxY,QACjCjD,KAGDA,EAAKgO,MACmB,oBAAvBhO,EAAKgO,KAAK,UAAyD,mBAAvBhO,EAAKgO,KAAK,UACvDhO,EAAKgO,KAAK9C,UAAYtO,EAAOsO,SAE7BpP,EAAK4hB,gBAzIM5hB,EA6InBo1B,mBAAqB,SAAAt0B,GACbd,EAAKyc,QAAQxZ,IAAInC,EAAOsO,UACxBpP,EAAK4hB,eA/IM5hB,EAmJnB4qD,iBAAmB,WACf5qD,EAAK2a,cAEL3a,EAAK6qD,oBAEL7qD,EAAK8qD,oBAxJU9qD,EA2JnB8qD,iBAAmB,WAAM,IACb3jD,EAAWnH,EAAK2f,MAAhBxY,OAEFrH,EAAQC,IAAUuD,WAExB0Q,YAAiBlU,EAAO,CAACqH,IACzB,IAAMsV,EAAUF,YAAoBpV,GAAQ2G,IAAI,SAAA/B,GAAC,OAAIA,EAAEqD,UACvDwC,YAAiB9R,EAAO2c,IAlKTzc,EAqKnB2a,YAAc,WAAM,IACRxT,EAAWnH,EAAK2f,MAAhBxY,OAERuV,YAAgBvV,IAxKDnH,EA2KnB6qD,kBA3KmB5qD,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA2KC,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAAolB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRiG,EAAWnH,EAAK2f,MAAhBxY,QAEQ8U,YAAY9U,GAHZ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,qBAMHuZ,YAAS5T,GANN,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EASKc,IAAgBkJ,KAAK,CACtCjC,QAAS,oBACTmG,QAASoE,YAAcrM,GACvBk3C,eAAgB,EAChBzrB,MAAO,IAbK,OASVtoB,EATUtJ,EAAAoK,KAgBhBpL,EAAK6kB,SAAS,CAAEkmC,kBAAmBzgD,EAAOsyC,SAASz2C,OAAS,IAhB5C,yBAAAnF,EAAAU,SAAAb,MA3KDb,EA8LnBgrD,mBAAqB,WAAM,IAAAtrC,EACD1f,EAAK2f,MAAnBhI,EADe+H,EACf/H,EAAGxQ,EADYuY,EACZvY,OACLuU,EAAWD,YAAgBtU,GACjC,GAAKuU,EAAL,CAEA,IAAMuvC,EAAoBC,KAAY9nD,IAAI,YACpC+nD,EAAeF,EAAoBA,EAAkBr1C,MAAQ,wBAEnE2tC,IAAK4H,EAAezvC,GAEpB,IAAM9D,EAAG,GAAAvM,OAAMlE,EAAN,kBACH1C,EAAUkT,EAAE,cAGlB3X,EAAKwjD,sBAAsB5rC,EAAKnT,EAFjB,QA1MAzE,EA+MnBwjD,sBAAwB,SAAC5rC,EAAKnT,EAASoR,GACnC,GAAK+B,EAAL,CAD8C,IAAAiJ,EAGT7gB,EAAK2f,MAAlC8jC,EAHsC5iC,EAGtC4iC,gBAAiB3iC,EAHqBD,EAGrBC,QACzB,GAAK2iC,EAAL,CAII/qC,IAAiBgrC,mBAAmB9rC,EAAK+rC,IAAqC,IAAsB9tC,IAEpG4tC,EAAgBh/C,EAAS,CACrBm/C,iBAAkBD,IAClB9tC,OAAQ,CACJoK,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIiX,IAAI,QACJiyB,aAAW,QACXvnB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,IAAiBmrC,sBAAsBjsC,KACtDqI,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,aAlODX,EAyOnBorD,gBAAkB,WAAM,IAAA1iC,EACE1oB,EAAK2f,MAAnBhI,EADY+Q,EACZ/Q,EAAGxQ,EADSuhB,EACTvhB,OACLkkD,EAAc1vC,YAAmBxU,GACvC,GAAKkkD,EAAL,CAEA9H,IAAKvjC,aAAkBqrC,IAEvB,IAAMzzC,EAAG,GAAAvM,OAAMlE,EAAN,eACH1C,EAAUkT,EAAE,eAGlB3X,EAAKwjD,sBAAsB5rC,EAAKnT,EAFjB,QAlPAzE,EAuPnBsrD,kBAAoB,WAChBtrD,EAAKurD,mBAAmBx9B,QAAQsd,UAAY,GAxP7BrrC,EA2PnBwrD,iBAAmB,WAAM,IACbrkD,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,KAAU9P,IAAI+D,GACtBjD,GACAA,EAAKa,OAEV2T,IAAiB+yC,6BAA6B,CAAEtkD,OAAQA,KAjQzCnH,EAoQnB0rD,eAAiB,WAAM,IAAAxiC,EACOlpB,EAAK2f,MAAvBxY,EADW+hB,EACX/hB,OAAQosB,EADGrK,EACHqK,MAEhBJ,aAAShsB,EAAQ,MAAM,GAEnBosB,GACAvxB,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KA5QDnH,EAiRnB2rD,iBAAmB,WACf,OAAK3rD,EAAKurD,mBAEHvrD,EAAKurD,mBAAmBx9B,QAAQ69B,aAFF,GA/QrC5rD,EAAKurD,mBAAqBlrC,IAAMqb,YAHjB,IAKPv0B,EAAWnH,EAAK2f,MAAhBxY,OALO,OAOfnH,EAAKyc,QAAU,IAAIpT,IACnBrJ,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZ4jD,mBAAmB,GAVR/qD,uFAyBKslB,EAAWC,GAAW,IAClCpe,EAAWhH,KAAKwf,MAAhBxY,OAEF62B,EAAO79B,KAAKorD,mBAAmBx9B,QAC7Bsd,EAA0CrN,EAA1CqN,UAAWC,EAA+BtN,EAA/BsN,aAAcmU,EAAiBzhB,EAAjByhB,aAC3Bj6B,EAAW,CACb6lB,UAAWA,EACXC,aAAcA,EACdmU,aAAcA,GAOlB,OAJA57C,QAAQ4F,IAAR,gDAAA4B,OACoDlE,EADpD,eAAAkE,OACwEggC,EADxE,kBAAAhgC,OACkGigC,EADlG,kBAAAjgC,OAC+Ho0C,IAGxHj6B,gDAGWN,EAAWC,GAAW,IAAAsf,EACdtkC,KAAKwf,MAAvBxY,EADgCs9B,EAChCt9B,OAAQoa,EADwBkjB,EACxBljB,MACRwpC,EAAsB5qD,KAAKokB,MAA3BwmC,kBAER,OAAI7lC,EAAU/d,SAAWA,IAIrB+d,EAAU3D,QAAUA,GAIpB4D,EAAU4lC,oBAAsBA,8CAOrBzlC,EAAWC,EAAWC,GAAU,IACvCre,EAAWhH,KAAKwf,MAAhBxY,OACJme,EAAUne,SAAWA,GACrBhH,KAAKyqD,mBAGT/mD,QAAQ4F,IAAI,qBAAsBtJ,KAAKorD,oBACvC,IAAMvtB,EAAO79B,KAAKorD,mBAAmBx9B,QAC7Bsd,EAA0C7lB,EAA1C6lB,UAAWC,EAA+B9lB,EAA/B8lB,aAA+B9lB,EAAjBi6B,aACjC57C,QAAQ4F,IAAR,kDAAA4B,OACsDlE,EADtD,oBAAAkE,OAEQ2yB,EAAKqN,UAFb,uBAAAhgC,OAG0B2yB,EAAKyhB,aAH/B,uBAAAp0C,OAGiE2yB,EAAKsN,eAEtEtN,EAAKqN,UAAYA,GAAarN,EAAKsN,aAAeA,GAClDznC,QAAQ4F,IAAR,iDAAA4B,OACqDlE,EADrD,oBAAAkE,OAEQ2yB,EAAKqN,UAFb,uBAAAhgC,OAG0B2yB,EAAKyhB,aAH/B,uBAAAp0C,OAGiE2yB,EAAKsN,2DAKtEnrC,KAAKyqD,mBAELv7C,IAAUwS,GAAG,mBAAoB1hB,KAAKi1B,oBACtC/lB,IAAUwS,GAAG,qBAAsB1hB,KAAKyiC,sBACxC/oB,KAAgBgI,GAAG,2BAA4B1hB,KAAK0iC,4BACpDtoB,KAAgBsH,GAAG,2BAA4B1hB,KAAK2iC,2EAIpDzzB,IAAUlN,eAAe,mBAAoBhC,KAAKi1B,oBAClD/lB,IAAUlN,eAAe,qBAAsBhC,KAAKyiC,sBACpD/oB,KAAgB1X,eAAe,2BAA4BhC,KAAK0iC,4BAChEtoB,KAAgBpY,eAAe,2BAA4BhC,KAAK2iC,6DAsL3D,IAAAl4B,EAAAzK,KAAAkmC,EAWDlmC,KAAKwf,MATLhI,EAFC0uB,EAED1uB,EACAuI,EAHCmmB,EAGDnmB,UACA/Y,EAJCk/B,EAIDl/B,OACA2Z,EALCulB,EAKDvlB,QACA+qC,EANCxlB,EAMDwlB,kBACAC,EAPCzlB,EAODylB,qBACAv4B,EARC8S,EAQD9S,MACAw1B,EATC1iB,EASD0iB,WACAj/B,EAVCuc,EAUDvc,QAEIihC,EAAsB5qD,KAAKokB,MAA3BwmC,kBAEF7mD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EACD,OACI+b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAAC++C,GAAD,CAAmBjiC,QAASA,IAC5B7J,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKorD,mBAAoBrrC,UAAU,uBAKzD,IAAMxE,EAAWD,YAAgBtU,GAC3BkkD,EAAc1vC,YAAmBxU,GACjC2U,EAAMD,YAAW1U,GACjB4iD,EAAU9tC,YAAY9U,GACtB6kD,EAAOjxC,YAAS5T,GAEhBsV,EAAUF,YAAoBpV,GAC9BoK,EAAQ,GACdpR,KAAKsc,QAAU,IAAIpT,IACnBoT,EAAQlZ,QAAQ,SAAA0oD,GACZ,IAAM1nD,EAAO8K,IAAUjM,IAAI6oD,EAAO78C,SAC9B7K,IACAqG,EAAK6R,QAAQrb,IAAImD,EAAK1B,GAAI0B,EAAK1B,IAC/B0O,EAAM5H,KAAKpF,MAInB,IAGMpB,EAHcoO,EAAMurC,KAAK,SAAC/wC,EAAGmgD,GAC/B,OAAOx4B,aAAmBw4B,GAAKx4B,aAAmB3nB,KAE5B+B,IAAI,SAAAvJ,GAAI,OAC9B0b,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAUt6B,IAAKrT,EAAK1B,IACpDod,EAAAtf,EAAAqM,cAACm/C,GAAD,CAAa//C,OAAQ7H,EAAK1B,GAAIuzB,SAAUxrB,EAAKwhD,sBAI7CrnD,EAAUb,EAAVa,MAEFL,EACFub,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC++C,GAAD,CACI5kD,OAAQA,EACR4hD,WAAYA,EACZj/B,QAASA,EACT1J,QAASjgB,KAAKmrD,oBAElBrrC,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKorD,mBAAoBrrC,UAAU,qBACzCD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,qBACXD,EAAAtf,EAAAqM,cAACu2B,GAAA,EAAD,CACIp8B,OAAQA,EACRs8B,WAAYlQ,EACZzY,mBAAoByY,EACpBiQ,aAAcz+B,EAAQ5E,KAAKqrD,iBAAmB,SAGpD9vC,GAAY2vC,GAAevvC,IACzBmE,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,KACK+a,GACGuE,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAK6qD,oBACxD/qC,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACq/C,GAAA1rD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B5tC,MAMpB2vC,GACGprC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAKirD,iBACxDnrC,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACs/C,GAAA3rD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/BtpC,aAAkBqrC,QAO1CvvC,GACGmE,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUuf,UAAWY,EAAQoxB,UACzBjyB,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACu/C,GAAA5rD,EAAD,CAAkBuf,UAAU,4BAEhCD,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QAASvkB,EACT7O,MAAO,CAAEu/C,WAAY,WAAYC,SAAU,kBAM/DxsC,EAAAtf,EAAAqM,cAAC6kC,GAAAlxC,EAAD,MACAsf,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,MACMqrD,GAAQ/rC,EAAAtf,EAAAqM,cAAC0/C,GAAD,CAAuBvlD,OAAQA,IACxC4iD,GAAW9pC,EAAAtf,EAAAqM,cAAC2/C,GAAD,CAAcxlD,OAAQA,KAChC4iD,GACE9pC,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAASjgB,KAAKurD,gBACxDzrC,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAY2hB,MAAM,UAAU0E,QAAQ,UAAUsiC,QAAM,GAC/C3xC,EAAE,eAAesmC,mBAO1Ch+B,EAAAtf,EAAAqM,cAAC6kC,GAAAlxC,EAAD,MACAsf,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAAChI,UAAQ,EAACjqB,UAAWY,EAAQoxB,SAAU9xB,QAASyrC,GAC5D5rC,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACq9B,GAAA1pC,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI0/B,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B3xC,EAAE,mBAKlBozC,GACG9qC,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACjyB,UAAWY,EAAQoxB,SAAU9xB,QAAS0rC,GACnD7rC,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CACI+pD,OAAK,EACLrqB,QACIpgB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,UAAUsiC,QAAM,GAC/B3xC,EAAE,uBAO1BxU,EAAMgD,OAAS,GACZ8Z,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC6kC,GAAAlxC,EAAD,MACAsf,EAAAtf,EAAAqM,cAAC+kC,GAAApxC,EAAD,KAAOwC,MAO3B,OAAOowB,EAAQtT,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGhhB,GAAcub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBf,IAAaxb,sDAjb5Dib,EAAO4E,GACnC,OAAI5E,EAAMxY,SAAWod,EAAM0e,WAChB,CACHA,WAAYtjB,EAAMxY,OAClB4jD,mBAAmB,GAIpB,YAvBW1qC,IAAMC,YAodjB4G,GARCC,YACZqnB,cACA7mB,cACArG,IA9dW,SAAAC,GAAK,MAAK,CACrBmxB,gBAAiB,CACbrrB,OAAQ,qBAEZulC,OAAQ,GAGRh8B,MAAO,CACHjN,QAASpC,EAAMmkC,QAAQC,KAAO,GAElCzT,SAAU,CACNvuB,QAAS,eAmdM,CAAE+D,WAAW,IAChCm+B,eACAlX,cAGWznB,CAAQyjC,IC9gBjBkC,uBACF,SAAAA,EAAYltC,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA0sD,GAAA5sD,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA4sD,GAAAvsD,KAAAH,KACVwf,0EAGD,IAAAD,EACwBvf,KAAKwf,MAA1BmB,EADHpB,EACGoB,QAASgJ,EADZpK,EACYoK,QAEjB,OACI7J,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACXD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQgsC,eAAgB1sC,QAAS0J,GACpD7J,EAAAtf,EAAAqM,cAACi8C,GAAAtoD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,qCACXD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAhB,6BAdeG,IAAMC,YAyB1BgB,OA/BA,CACXwrC,eAAgB,CACZzlC,OAAQ,sBA6BD/F,CAAmBurC,IC1B5BE,uBACF,SAAAA,EAAYptC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA4sD,IACf/sD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA8sD,GAAAzsD,KAAAH,KAAMwf,KA0BVwW,aAAe,SAAAjyB,GAAQ,IACXqvB,EAAUvzB,EAAK2f,MAAf4T,MAERJ,aAASjvB,EAAKrB,IAEV0wB,GACAvxB,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KAhChBnH,EAAKukB,MAAQ,CACT0+B,QAAS,IAJEjjD,mFAQC,IAAA4K,EAAAzK,KACRgH,EAAWhH,KAAKwf,MAAhBxY,OAEFiF,EAASoH,YAAcrM,GACxBiF,GAELpK,IAAgBkJ,KAAK,CACjBjC,QAAS,oBACTmG,QAAShD,EACTiyC,eAAgB,EAChBzrB,MAAO,MACRpnB,KAAK,SAAAlB,GACJ,IAAMxK,EAAQC,IAAUuD,WACxB0Q,YAAiBlU,EAAOwK,EAAOsyC,UAE/BhyC,EAAKia,SAAS,CAAEo+B,QAAS34C,EAAOsyC,8CAiB/B,IAAAxL,EAAAjxC,KAAAuf,EACiCvf,KAAKwf,MAAnCqtC,EADHttC,EACGstC,UAAWljC,EADdpK,EACcoK,QAASyJ,EADvB7T,EACuB6T,MAGtByqB,EAFc79C,KAAKokB,MAAjB0+B,QAEcn1C,IAAI,SAAA/B,GAAC,OACvBkU,EAAAtf,EAAAqM,cAACilC,GAAAtxC,EAAD,CAAUwxC,QAAM,EAACv6B,IAAK7L,GAClBkU,EAAAtf,EAAAqM,cAACu2B,GAAA,EAAD,CAAap8B,OAAQ4E,EAAGqqB,SAAUgb,EAAKjb,kBAIzCzxB,EACFub,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACigD,GAAD,CAAsBnjC,QAASA,IAC/B7J,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBjT,MAAO,CAAE+/C,cAC3ChP,IAKb,OAAOzqB,EAAQtT,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGhhB,GAAcub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBAAoBxb,UA5D9C2b,IAAMC,YAuEnCysC,GAAe3rC,aAAe,CAC1BmS,OAAO,EACPy5B,UAAW,GAGAD,oDC5ETG,uBACF,SAAAA,EAAYvtC,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA+sD,GAAAjtD,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAitD,GAAA5sD,KAAAH,KACVwf,0EAGD,IAAAD,EACsBvf,KAAKwf,MAAxBmB,EADHpB,EACGoB,QAAS8P,EADZlR,EACYkR,MAEjB,OACI3Q,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iBACXD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQgsC,eAAgB1sC,QAASwQ,GACpD3Q,EAAAtf,EAAAqM,cAACi8C,GAAAtoD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,qCACXD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAhB,yBAdmBG,IAAMC,YAqB9BgB,OA3BA,CACXwrC,eAAgB,CACZzlC,OAAQ,sBAyBD/F,CAAmB4rC,ICzB5BC,sNACF5oC,MAAQ,CACJ3O,MAAO,KAGXw3C,aAAe,SAACzhD,EAAOiK,GACnB5V,EAAK6kB,SAAS,CAAEjP,mFAGX,IAAA8J,EACsBvf,KAAKwf,MAAxBmK,EADHpK,EACGoK,QAASyJ,EADZ7T,EACY6T,MACT3d,EAAUzV,KAAKokB,MAAf3O,MAEFlR,EACFub,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACqgD,GAAD,CAA0Bz8B,MAAO9G,IACjC7J,EAAAtf,EAAAqM,cAACsgD,GAAA3sD,EAAD,CACIiV,MAAOA,EACP+M,SAAUxiB,KAAKitD,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT1tC,EAAAtf,EAAAqM,cAAC4gD,GAAAjtD,EAAD,CAAKktD,MAAM,QAAQ5gD,MAAO,CAAEwhC,SAAU,UACtCxuB,EAAAtf,EAAAqM,cAAC4gD,GAAAjtD,EAAD,CAAKktD,MAAM,OAAO5gD,MAAO,CAAEwhC,SAAU,UACrCxuB,EAAAtf,EAAAqM,cAAC4gD,GAAAjtD,EAAD,CAAKktD,MAAM,QAAQ5gD,MAAO,CAAEwhC,SAAU,UACtCxuB,EAAAtf,EAAAqM,cAAC4gD,GAAAjtD,EAAD,CAAKktD,MAAM,QAAQ5gD,MAAO,CAAEwhC,SAAU,YAKlD,OAAOlb,EAAQtT,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGhhB,GAAcub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBxb,UAhC7C2b,IAAMC,YA2ChC6sC,GAAY/rC,aAAe,CACvBmS,OAAO,EACPy5B,UAAW,GAGAG,UCrCTW,uBACF,SAAAA,EAAYnuC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2tD,IACf9tD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6tD,GAAAxtD,KAAAH,KAAMwf,KAmBVo0B,qBAAuB,SAAAjzC,GACDd,EAAK2f,MAAf4T,OAGRvzB,EAAK6kB,SAAS,CACV1d,OAAQrG,EAAOkzC,WACf+Z,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BTjuD,EAgCnBkuD,sBAAwB,WACpBluD,EAAK6kB,SAAS,CAAEmpC,iBAAiB,KAjClBhuD,EAoCnBmuD,uBAAyB,WACrBnuD,EAAK6kB,SAAS,CAAEmpC,iBAAiB,KArClBhuD,EAwCnBouD,yBAA2B,SAAAp+C,GACvBnM,QAAQ4F,IAAI,oCAAqCuG,GACjDhQ,EAAK6kB,SAAS,CAAEopC,oBAAoB,KA1CrBjuD,EA6CnBquD,0BAA4B,WACxBruD,EAAK6kB,SAAS,CAAEopC,oBAAoB,KA9CrBjuD,EAiDnBsuD,uBAAyB,WAAM,IACnB/6B,EAAUvzB,EAAK2f,MAAf4T,MACevzB,EAAKukB,MAApBwpC,WAEJ/tD,EAAK6kB,SAAS,CAAEkpC,WAAY,OACrBx6B,EACPvxB,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,IAGZuR,IAAiB61C,6BAA4B,IA5DlCvuD,EAgEnBosD,iBAhEmB,eAAA5rD,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAgEA,SAAAC,EAAM0D,GAAN,IAAAL,EAAA,OAAAwrB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVqD,EADU,CAAAvD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGEc,IAAgBkJ,KAAK,CAClCjC,QAAS,oBACTmG,QAAS7K,EAAK1B,GACd+7C,OAAO,IANI,UAGX16C,EAHWlD,EAAAoK,KASflH,EAAOgP,KAAU9P,IAAIc,EAAKrB,KAAOqB,EATlB,CAAAlD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAYfxB,EAAK6kB,SAAS,CAAEkpC,WAAY7pD,EAAKrB,KAZlB,wBAAA7B,EAAAU,SAAAb,MAhEA,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKwuD,WAAanuC,IAAMqb,YAHT,IAKPnI,EAAU5T,EAAV4T,MALO,OAOfvzB,EAAKukB,MAAQ,CACTpd,OAAQosB,EAAQ7a,IAAiB+1C,aAAe/1C,IAAiBvR,QARtDnH,mFAaf0Y,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,qEAI/Cr7B,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,uDA8DtD,IAAAr0B,EACiCvf,KAAKwf,MAAnCmB,EADHpB,EACGoB,QAASZ,EADZR,EACYQ,UAAWqT,EADvB7T,EACuB6T,MADvBjP,EAE+DnkB,KAAKokB,MAAjEpd,EAFHmd,EAEGnd,OAAQ4mD,EAFXzpC,EAEWypC,WAAYC,EAFvB1pC,EAEuB0pC,gBAAiBC,EAFxC3pC,EAEwC2pC,mBACvCpa,EAAgB1sC,GAAU4mD,EAC1Bf,EAAY7sD,KAAKquD,YAAcruD,KAAKquD,WAAWzgC,QAAU5tB,KAAKquD,WAAWzgC,QAAQ49B,mBAAqB,EAExGjnD,EAAU,KAiCd,OA/BIA,EADAspD,EAEI/tC,EAAAtf,EAAAqM,cAAC0hD,GAAD,CACIvnD,OAAQ0sC,EACRtgB,MAAOA,EACPy5B,UAAWA,EACXljC,QAAS3pB,KAAKguD,yBAGfF,EAEHhuC,EAAAtf,EAAAqM,cAAC2hD,GAAD,CACIxnD,OAAQ0sC,EACRtgB,MAAOA,EACPy5B,UAAWA,EACXljC,QAAS3pB,KAAKkuD,4BAKlBpuC,EAAAtf,EAAAqM,cAAC4hD,GAAD,CACI3yB,IAAK97B,KAAKquD,WACVrnD,OAAQ0sC,EACRtgB,MAAOA,EACPw1B,WAAYgF,IAAe5mD,EAC3B0kD,kBAAmB1rD,KAAK+tD,sBACxBpC,qBAAsB3rD,KAAKiuD,yBAC3BtkC,QAAS3pB,KAAKmuD,yBAKnB/6B,EACHtT,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGhhB,GAEHub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,CAAEioC,gBAAiBt7B,GAASrT,IAAaxb,UA1H9E2b,IAAMC,YAqI7BwtC,GAAS1sC,aAAe,CACpBlB,UAAW,KACXY,QAAS,KACTyS,OAAO,GAGIjS,WAAWmG,IAAXnG,CAAwBwsC,2VCtFjCgB,eACF,SAAAA,EAAYnvC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2uD,IACf9uD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6uD,GAAAxuD,KAAAH,KAAMwf,KASVytC,aAAe,SAAAzhD,GACX3L,EAAK6kB,SAAS,CAAE3S,KAAMvG,EAAMC,OAAOgK,QAEnC8C,IAAiBnX,KAAK,4BAA6B,CAC/C2Q,KAAMvG,EAAMC,OAAOgK,MACnByqB,QAASrgC,EAAK+uD,SAAS/uD,EAAKukB,MAAMjC,UAfvBtiB,EAmBnBgvD,mBAAqB,SAAArjD,GACjB3L,EAAK6kB,SAAS,CAAEvC,MAAO3W,EAAMC,OAAOgK,QAEpC8C,IAAiBnX,KAAK,4BAA6B,CAC/C2Q,KAAMlS,EAAKukB,MAAMrS,KACjBmuB,QAASrgC,EAAK+uD,SAASpjD,EAAMC,OAAOgK,UAxBzB5V,EA4BnBivD,eAAiB,SAAAr5C,GACb,OAAQA,GACJ,KAAKs5C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQxvD,EAiDnB+uD,SAAW,SAAAn5C,GACP,OAAQA,GACJ,IAAK,MACD,OAAOs5C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQxvD,EAsEnB4wC,YAAc,WACV5wC,EAAK6kB,SAAS,CAAEza,MAAM,KAvEPpK,EA0EnBoK,KAAO,WACHpK,EAAK6kB,SAAS,CAAEza,MAAM,KAxEtBpK,EAAKukB,MAAQ,CACTna,MAAM,EACN8H,KAAMlS,EAAK2f,MAAM4B,MAAMkU,QAAQvjB,KAC/BoQ,MAAOtiB,EAAKivD,eAAejvD,EAAK2f,MAAM4B,MAAMkU,QAAQ4K,QAAQC,OANjDtgC,wEA8EV,IACG8gB,EAAY3gB,KAAKwf,MAAjBmB,QADHwD,EAEmBnkB,KAAKokB,MAArBrS,EAFHoS,EAEGpS,KAAMoQ,EAFTgC,EAEShC,MAEd,OACIrC,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAMjK,KAAKokB,MAAMna,KACjB0f,QAAS3pB,KAAKywC,YACdlmB,kBAAgB,qBAChB66B,mBAAiB,4BACjBtlC,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,sBAAhB,cACAod,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAACyiD,GAAA9uD,EAAD,CAAa6pD,UAAU,WAAWtqC,UAAWY,EAAQ4uC,aACjDzvC,EAAAtf,EAAAqM,cAAC2iD,GAAAhvD,EAAD,CAAW+/B,SAAO,EAAC8pB,UAAU,UAA7B,SAGAvqC,EAAAtf,EAAAqM,cAAC4iD,GAAAjvD,EAAD,CACIkpC,aAAW,QACX4N,KAAK,SACLv3B,UAAWY,EAAQyb,MACnB3mB,MAAO1D,EACPyQ,SAAUxiB,KAAKitD,cACfntC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CAAkBiV,MAAM,QAAQk6C,QAAS7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CAAO2hB,MAAM,YAAcurC,MAAM,UAC1E5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CAAkBiV,MAAM,OAAOk6C,QAAS7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CAAO2hB,MAAM,YAAcurC,MAAM,WAGjF5tC,EAAAtf,EAAAqM,cAACyiD,GAAA9uD,EAAD,CAAa6pD,UAAU,WAAWtqC,UAAWY,EAAQ4uC,aACjDzvC,EAAAtf,EAAAqM,cAAC2iD,GAAAhvD,EAAD,CAAW+/B,SAAO,EAAC8pB,UAAU,UAA7B,UAGAvqC,EAAAtf,EAAAqM,cAAC4iD,GAAAjvD,EAAD,CACIkpC,aAAW,SACX4N,KAAK,UACLv3B,UAAWY,EAAQyb,MACnB3mB,MAAO0M,EACPK,SAAUxiB,KAAK6uD,oBACf/uC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,MACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQivC,QACd/sC,QAASlC,EAAQkC,WAI7B6qC,MAAM,QAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,SACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQkvC,WACdhtC,QAASlC,EAAQkC,WAI7B6qC,MAAM,WAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,QACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQmvC,UACdjtC,QAASlC,EAAQkC,WAI7B6qC,MAAM,UAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,QACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQovC,UACdltC,QAASlC,EAAQkC,WAI7B6qC,MAAM,UAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,OACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQqvC,SACdntC,QAASlC,EAAQkC,WAI7B6qC,MAAM,SAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,SACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQsvC,WACdptC,QAASlC,EAAQkC,WAI7B6qC,MAAM,WAEV5tC,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiV,MAAM,aACNk6C,QACI7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CACImgB,QAAS,CACLgC,KAAMhC,EAAQuvC,eACdrtC,QAASlC,EAAQkC,WAI7B6qC,MAAM,2BAtMZxtC,IAAMC,WAkNjBgB,OAtQA,SAAAC,GAAK,MAAK,CACrBmuC,YAAa,CACTroC,OAA6B,EAArB9F,EAAMmkC,QAAQC,MAE1BppB,MAAO,CACHlV,OAAM,GAAAhc,OAAKkW,EAAMmkC,QAAQC,KAAnB,SAEVoK,QAAS,CACLztC,MAAO4sC,KAAI,KACXoB,YAAa,CACThuC,MAAO4sC,KAAI,OAGnBc,WAAY,CACR1tC,MAAO6sC,KAAO,KACdmB,YAAa,CACThuC,MAAO6sC,KAAO,OAGtBc,UAAW,CACP3tC,MAAO8sC,KAAM,KACbkB,YAAa,CACThuC,MAAO8sC,KAAM,OAGrBc,UAAW,CACP5tC,MAAO+sC,KAAM,KACbiB,YAAa,CACThuC,MAAO+sC,KAAM,OAGrBc,SAAU,CACN7tC,MAAOgtC,KAAK,KACZgB,YAAa,CACThuC,MAAOgtC,KAAK,OAGpBc,WAAY,CACR9tC,MAAOitC,KAAO,KACde,YAAa,CACThuC,MAAOitC,KAAO,OAGtBc,eAAgB,CACZ/tC,MAAOktC,KAAW,KAClBc,YAAa,CACThuC,MAAOktC,KAAW,OAG1BxsC,QAAS,KAqNqB,CAAE0E,WAAW,GAAhCpG,CAAwCwtC,aCjQjDyB,eACF,SAAAA,EAAY5wC,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAowD,IACfvwD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAswD,GAAAjwD,KAAAH,KAAMwf,KAWVytC,aAAe,SAAAzhD,GACX3L,EAAK6kB,SAAS,CAAE+xB,SAAUjrC,EAAMC,OAAOgK,QAEvC5T,IAAgBgH,aAAa,CAAEC,QAAS,6BAA8B2tC,SAAUjrC,EAAMC,OAAOgK,SAf9E5V,EAkBnB4wC,YAAc,WACV5wC,EAAK6kB,SAAS,CAAEza,MAAM,KAnBPpK,EAsBnBoK,KAAO,WACHpK,EAAK6kB,SAAS,CAAEza,MAAM,KAvBP,IAGPomD,EAAS7wC,EAAT6wC,KACF5Z,EAAW4Z,EAAOA,EAAK5Z,SAAW,KAJzB,OAMf52C,EAAKukB,MAAQ,CACTna,MAAM,EACNwsC,SAAUA,GAAY,MARX52C,wEA0BV,IAAA0f,EACkBvf,KAAKwf,MAAXhI,GADZ+H,EACGoB,QADHpB,EACY/H,GADZ2M,EAEsBnkB,KAAKokB,MAAxBna,EAFHka,EAEGla,KAAMwsC,EAFTtyB,EAESsyB,SAGR6Z,GAFOC,KAAkBtN,MAAQ,CAAEuN,eAAgB,KAElCA,eAAe7iD,IAAI,SAAA/B,GAAC,OACvCkU,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIiX,IAAK7L,EAAElJ,GACP+S,MAAO7J,EAAElJ,GACTitD,QAAS7vC,EAAAtf,EAAAqM,cAAC6V,GAAAliB,EAAD,CAAO2hB,MAAM,YACtBurC,MAAK,GAAAxiD,OAAKU,EAAE0rC,KAAP,SAAApsC,OAAmBU,EAAE6kD,YAArB,SAIb,OACI3wC,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAMA,EACN0f,QAAS3pB,KAAKywC,YACdlmB,kBAAgB,wBAChB66B,mBAAiB,+BACjBtlC,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,yBAAyB8U,EAAE,aAC3CsI,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAACyiD,GAAA9uD,EAAD,CAAa6pD,UAAU,YACnBvqC,EAAAtf,EAAAqM,cAAC4iD,GAAAjvD,EAAD,CACIkpC,aAAW,WACX4N,KAAK,YACL7hC,MAAOghC,EACPj0B,SAAUxiB,KAAKitD,cACdqD,aAxDApwC,IAAMC,WA0EpB4G,GAPCC,YACZqnB,cACA7mB,cACArG,IA/EW,SAAAC,GAAK,MAAK,CACrBmuC,YAAa,CACTroC,OAA6B,EAArB9F,EAAMmkC,QAAQC,MAE1BppB,MAAO,CACHlV,OAAM,GAAAhc,OAAKkW,EAAMmkC,QAAQC,KAAnB,WA0ES,CAAEj+B,WAAW,IAChCinB,cAGWznB,CAAQqpC,aC5EjBhK,GAAmB,CACrBr8B,SAAU,SACVC,WAAY,QAGV28B,eACF,SAAAA,EAAYnnC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2mD,IACf9mD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6mD,GAAAxmD,KAAAH,KAAMwf,KAgBVle,2BAA6B,SAAAX,GACzBd,EAAK6kB,SAAS,CAAEgsC,mBAAoB/vD,EAAOyB,uBAlB5BvC,EAqBnB8wD,eAAiB,SAAAnlD,GAAS,IACdklD,EAAuB7wD,EAAKukB,MAA5BssC,mBACHE,aAAqBF,IAE1B7wD,EAAK6kB,SAAS,CAAEokB,SAAUt9B,EAAMw9B,iBAzBjBnpC,EA4BnBopC,gBAAkB,WACdppC,EAAK6kB,SAAS,CAAEokB,SAAU,QA7BXjpC,EAgCnBgxD,aAAe,WACXhxD,EAAKopC,kBAELppC,EAAK2f,MAAMsxC,YAnCIjxD,EAsCnBkxD,mBAtCmBjxD,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAsCE,SAAAC,IAAA,OAAA6uB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBlB,EAAKopC,kBADYpoC,EAAAE,KAAA,EAGXJ,eAHW,wBAAAE,EAAAU,SAAAb,MAtCFb,EA4CnBmxD,iBAAmB,SAAAxlD,GACf3L,EAAKopC,kBAELppC,EAAKoxD,YAAYhnD,QA/CFpK,EAkDnBqxD,eAAiB,SAAA1lD,GACb3L,EAAKopC,kBAELppC,EAAKsxD,eAAelnD,QArDLpK,EAwDnBuxD,OAAS,SAAAt1B,GACLp4B,QAAQ4F,IAARxJ,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,KACAA,EAAKsxD,eAAiBr1B,GAvDtBj8B,EAAKukB,MAAQ,CACTssC,mBAAoBn4C,IAAiB+4C,wBACrCxoB,SAAU,MALCjpC,mFAUf0Y,IAAiBmJ,GAAG,2BAA4B1hB,KAAKsB,2EAIrDiX,IAAiBvW,eAAe,2BAA4BhC,KAAKsB,6DA+C5D,IAAAmJ,EAAAzK,KAAAuf,EACkBvf,KAAKwf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAEoCnkB,KAAKokB,MAAtC0kB,EAFH3kB,EAEG2kB,SAAU4nB,EAFbvsC,EAEausC,mBAEZa,EAAkBX,aAAqBF,GACzC5wC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC+8B,GAAAppC,EAAD,CACIkC,GAAG,YACHomC,SAAUA,EACV7+B,KAAMmT,QAAQ0rB,GACdnf,QAAS3pB,KAAKipC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBjgB,aAAcs8B,IACdtmC,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAK+wD,oBAAqBv5C,EAAE,mBAC/CsI,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKgxD,kBAAmBx5C,EAAE,eAC7CsI,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKkxD,gBAAiB15C,EAAE,aAC3CsI,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAK6wD,cAAer5C,EAAE,aAGjD,KAEJ,OACIsI,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIsnD,YAAWhf,EAAW,cAAgB,KACtCif,gBAAc,OACdhoC,UAAWY,EAAQqnC,eACnBte,aAAW,OACXzpB,QAASjgB,KAAK2wD,gBACd7wC,EAAAtf,EAAAqM,cAAC2kD,GAAAhxD,EAAD,OAEH+wD,EACDzxC,EAAAtf,EAAAqM,cAAC4kD,GAAD,CAAaC,SAAU,SAAA51B,GAAG,OAAKrxB,EAAKwmD,YAAcn1B,KAClDhc,EAAAtf,EAAAqM,cAAC8kD,GAAD,CAAgB71B,IAAK,SAAAA,GAAG,OAAKrxB,EAAK0mD,eAAiBr1B,aAjGtC5b,IAAMC,WA4GpB4G,GALCC,YACZQ,cACArG,IAvHW,CACX6mC,eAAgB,CACZ9gC,OAAQ,qBAEZ0qC,iBAAkB,CACd1qC,OAAQ,mBAkHO,CAAEK,WAAW,IAGrBR,CAAQ4/B,ICxGjBkL,uBACF,SAAAA,EAAYryC,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA6xD,IACfhyD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA+xD,GAAA1xD,KAAAH,KAAMwf,KA8BVle,2BAA6B,SAAAX,GACzBd,EAAK6kB,SAAS,CAAEgsC,mBAAoB/vD,EAAOyB,uBAhC5BvC,EAmCnBgxD,aAAe,WACXhxD,EAAK6kB,SAAS,CAAEza,MAAM,KApCPpK,EAuCnBiyD,WAAa,WACTjyD,EAAK4wC,cACL5uC,IAAgBkwD,SAChBh3B,WAAWhxB,OAAO7E,SAAS8sD,OAAQ,MA1CpBnyD,EA6CnB4wC,YAAc,WACV5wC,EAAK6kB,SAAS,CAAEza,MAAM,KA9CPpK,EAiDnBoyD,aAAe,WAAM,IAAA1yC,EACgB1f,EAAK2f,MAA9B0yC,EADS3yC,EACT2yC,SAAUC,EADD5yC,EACC4yC,WACVzB,EAAuB7wD,EAAKukB,MAA5BssC,mBACHE,aAAqBF,IAE1BwB,GAAUC,IAtDKtyD,EAyDnBusC,cAAgB,SAAA5gC,GACU,KAAlBA,EAAMigC,SACNjgC,EAAMod,kBA3DK/oB,EA+DnBu3C,YAAc,WACV,IAAMvL,EAAYhsC,EAAKuyD,YAAYxkC,QAAQie,UACrCgE,EAAYhwC,EAAKuyD,YAAYxkC,QAAQiiB,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtChwC,EAAKuyD,YAAYxkC,QAAQiiB,UAAY,IAGzCt3B,IAAiBnX,KAAK,yBAA0B,CAAEyc,KAAMguB,KAvEzChsC,EA0EnBitC,YAAc,SAAAthC,GACV,IAAMwsC,EAAYxsC,EAAMyhC,cAAcC,QAAQ,cAC1C8K,IACAxsC,EAAMod,iBACN9jB,SAASuoC,YAAY,cAAc,EAAO2K,KA3E9Cn4C,EAAKuyD,YAAclyC,IAAMqb,YAEzB17B,EAAKukB,MAAQ,CACTssC,mBAAoBn4C,IAAiB+4C,wBACrCrnD,MAAM,GAGVpK,EAAKmsC,YAAcrD,aAAS9oC,EAAKmsC,YAAa,KAV/BnsC,kFAaAslB,EAAWC,EAAWC,GAAU,IAAA5a,EAAAzK,KAC3CA,KAAKwf,MAAM2yC,YAAcnyD,KAAKwf,MAAM2yC,aAAehtC,EAAUgtC,YAC7Dp3B,WAAW,WACHtwB,EAAK2nD,YAAYxkC,SACjBnjB,EAAK2nD,YAAYxkC,QAAQwd,SAE9B,iDAKP7yB,IAAiBmJ,GAAG,2BAA4B1hB,KAAKsB,2EAIrDiX,IAAiBvW,eAAe,2BAA4BhC,KAAKsB,6DAsD5D,IAAAof,EACuC1gB,KAAKwf,MAAzCmB,EADHD,EACGC,QAASV,EADZS,EACYT,QAASkyC,EADrBzxC,EACqByxC,WAAY36C,EADjCkJ,EACiClJ,EAC9BvN,EAASjK,KAAKokB,MAAdna,KAEFooD,EAAsBpoD,EACxB6V,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CAAQhoC,mBAAoB,EAAGrgB,KAAMA,EAAM0f,QAAS3pB,KAAKywC,YAAalmB,kBAAgB,qBAClFzK,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CAAa5vD,GAAG,qBAAqB8U,EAAE,YACvCsI,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,KACIxyC,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CAAmBvyC,UAAWY,EAAQ4xC,YAAa/6C,EAAE,sBAEzDsI,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,KACIxyC,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CAAQryC,QAASjgB,KAAKywC,YAAatuB,MAAM,WACpC3K,EAAE,WAEPsI,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CAAQryC,QAASjgB,KAAK8xD,WAAY3vC,MAAM,WACnC3K,EAAE,SAIf,KAEJ,OACIsI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgB+b,IAAK97B,KAAKwf,MAAMgzC,cACzCL,EASEryC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,4BACXD,EAAAtf,EAAAqM,cAAA,OACInK,GAAG,yBACHo5B,IAAK97B,KAAKoyD,YACV3kB,YAAaj2B,EAAE,UACfC,IAAKmB,OACL20B,iBAAe,EACfC,gCAA8B,EAC9BM,UAAW9tC,KAAKosC,cAChBkN,QAASt5C,KAAKo3C,YACdrJ,QAAS/tC,KAAK8sC,aACb9sC,KAAKwf,MAAMqM,cApBxB/L,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC4lD,GAAD,CAAgB3B,SAAU9wD,KAAK6wD,eAC9BwB,EACDvyC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyBvI,EAAE,cAqBvDsI,EAAAtf,EAAAqM,cAACylD,GAAA,EAAD,CACIvyC,UAAWY,EAAQ+xC,iBACnBhpB,aAAYlyB,EAAE,UACdgwB,YAAaxnC,KAAKiyD,cAClBnyC,EAAAtf,EAAAqM,cAAC8lD,GAAAnyD,EAAD,CAAeyJ,KAAMkoD,EAAYnvC,KAAMlD,EAAAtf,EAAAqM,cAAC+lD,GAAApyD,EAAD,MAAgBqyD,SAAU/yC,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,iBAxIzD0f,IAAMC,YA2JnB4G,GALCC,YACZQ,cACArG,IAjKW,CACXuxC,iBAAkB,CACdxrC,OAAQ,kBAEZqrC,WAAY,CACRlG,WAAY,cA+JLtlC,CAAQ8qC,IC/KjBiB,6NA+BFC,2BAA6B,SAAApyD,GACNd,EAAK2f,MAAhBxY,SAEOrG,EAAOqG,SAClBnH,EAAK8nD,aAAehnD,EAAOk6B,WAC3Bh7B,EAAK4hB,kBAIbmU,uBAAyB,SAAAj1B,GACrBd,EAAK4hB,iBAGTrhB,SAAW,SAAAO,GACYd,EAAK2f,MAAhBxY,SAEOrG,EAAOyF,SAEtBvG,EAAK4hB,oGAhDasD,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,QAIhC+d,EAAUvN,IAAMxX,KAAKwf,MAAMhI,8CAQ/BzE,KAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtD7iB,KAAU2O,GAAG,2BAA4B1hB,KAAK+yD,4BAC9ChgD,KAAU2O,GAAG,yBAA0B1hB,KAAKI,UAC5C2S,KAAU2O,GAAG,wBAAyB1hB,KAAKI,UAC3C2S,KAAU2O,GAAG,sBAAuB1hB,KAAKI,UACzC2S,KAAU2O,GAAG,uBAAwB1hB,KAAKI,yDAI1C2S,KAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClE7iB,KAAU/Q,eAAe,2BAA4BhC,KAAK+yD,4BAC1DhgD,KAAU/Q,eAAe,yBAA0BhC,KAAKI,UACxD2S,KAAU/Q,eAAe,wBAAyBhC,KAAKI,UACvD2S,KAAU/Q,eAAe,sBAAuBhC,KAAKI,UACrD2S,KAAU/Q,eAAe,uBAAwBhC,KAAKI,2CAwBjD,IAAAmf,EACiBvf,KAAKwf,MAAnBxY,EADHuY,EACGvY,OAAQwQ,EADX+H,EACW/H,EAEhB,GAAIxX,KAAK2nD,aAAc,OAAO7nC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkB,QAE/D,IAAMhc,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO+b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkB,QAEnD,IAAIizC,EAAiB,KACf39C,EAAeH,YAAoBlO,GAKzC,GAJIqO,IACA29C,EAAiBlzC,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyB1K,KAGzD29C,EAAgB,CACjB,IAAM/e,EAAQt2B,YAAa3W,GAC3B,GAAIuS,YAAcvS,GAAS,CACvB,IAAM6W,EAAOo2B,EAAMp2B,MAAQ,OAE3Bm1C,EACIlzC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,wBAAwBvI,EAAE,SAAW,MACpDqG,IAMjB,IAAKm1C,EAAgB,CACjB,IAAMzuD,EAAUgT,YAAsBxT,EAAMyT,IAAM,OAC5CkkC,EAAarkC,YAAyBtT,GAC5CivD,EACIlzC,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKm2B,GAAc57B,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyB27B,EAAzC,MACdn3C,GAKb,OAAOub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBizC,UA3Fb9yC,IAAMC,YA+F1BqH,iBAAkBsrC,ICpF3BG,sNAyCFF,2BAA6B,SAAApyD,GACNd,EAAK2f,MAAhBxY,SAEOrG,EAAOqG,SAClBnH,EAAK8nD,aAAehnD,EAAOk6B,WAC3Bh7B,EAAK4hB,kBAIbmU,uBAAyB,SAAAj1B,GACrBd,EAAK4hB,iBAGTrhB,SAAW,SAAAO,GAAU,IACTqG,EAAWnH,EAAK2f,MAAhBxY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAK4hB,iBAGTymB,kCAAoC,SAAAvnC,GAAU,IAClCqG,EAAWnH,EAAK2f,MAAhBxY,OAEFjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAOwnC,MAAM,UACjB,IAAK,sCAC0B,uBAAvBpkC,EAAKgO,KAAK,UAA4D,uBAAvBhO,EAAKgO,KAAK,UACzDlS,EAAK4hB,cAET,MAEJ,IAAK,wCAC0B,oBAAvB1d,EAAKgO,KAAK,UAAyD,mBAAvBhO,EAAKgO,KAAK,UACtDlS,EAAK4hB,qGA5ECsD,EAAWC,GAAW,IAAAzF,EACdvf,KAAKwf,MAAvBxY,EADgCuY,EAChCvY,OAAQoa,EADwB7B,EACxB6B,MAEhB,OAAI2D,EAAU/d,SAAWA,GAIrB+d,EAAU3D,QAAUA,8CAQxBrO,KAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtD7iB,KAAU2O,GAAG,2BAA4B1hB,KAAK+yD,4BAC9ChgD,KAAU2O,GAAG,yBAA0B1hB,KAAKI,UAC5C2S,KAAU2O,GAAG,6BAA8B1hB,KAAKI,UAChD2S,KAAU2O,GAAG,qBAAsB1hB,KAAKI,UACxC2S,KAAU2O,GAAG,iCAAkC1hB,KAAKI,UACpD2S,KAAU2O,GAAG,sBAAuB1hB,KAAKI,UACzC2S,KAAU2O,GAAG,uBAAwB1hB,KAAKI,UAC1C2S,KAAU2O,GAAG,+BAAgC1hB,KAAKI,UAClDmY,IAAiBmJ,GAAG,kCAAmC1hB,KAAKkoC,kFAI5Dn1B,KAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClE7iB,KAAU/Q,eAAe,2BAA4BhC,KAAK+yD,4BAC1DhgD,KAAU/Q,eAAe,yBAA0BhC,KAAKI,UACxD2S,KAAU/Q,eAAe,6BAA8BhC,KAAKI,UAC5D2S,KAAU/Q,eAAe,qBAAsBhC,KAAKI,UACpD2S,KAAU/Q,eAAe,iCAAkChC,KAAKI,UAChE2S,KAAU/Q,eAAe,sBAAuBhC,KAAKI,UACrD2S,KAAU/Q,eAAe,uBAAwBhC,KAAKI,UACtD2S,KAAU/Q,eAAe,+BAAgChC,KAAKI,UAC9DmY,IAAiBvW,eAAe,kCAAmChC,KAAKkoC,oEA+CxE,GAAIloC,KAAK2nD,aAAc,OAAO,KADzB,IAAAjnC,EAGuB1gB,KAAKwf,MAAzBmB,EAHHD,EAGGC,QAAS3Z,EAHZ0Z,EAGY1Z,OAEXjD,EAAOgP,KAAU9P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,IAAMmvD,EAAoBv7C,YAAyB5T,GAC7CovD,EAAcr7C,YAAmB/T,GACjCqvD,EAAqBp7C,YAA0BjU,GAC/CsvD,EAAkBF,EAAc,GAAsB,IAAhBA,GAAqBC,EAAqB,EAChFE,EAAgB/5C,YAAcxV,EAAKrB,IAEzC,OACIod,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACK2tC,IAAsBI,GAAiBxzC,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,wBACpDqzC,GACGtzC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBH,EAAQ4yC,cAC/CzzC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAf,MAGPszC,EACGvzC,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAWhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GACf6gB,EAAQ6yC,iBAAmBt7C,YAAYnU,IAC1C,eACA4c,EAAQ4yC,cAEZzzC,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,qBAAqBozC,IAEzCpvD,EAAK0vD,YAAcP,EACnBpzC,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,wBACb,aArHaG,IAAMC,YA2HxBgB,OApIA,SAAAC,GAAK,MAAK,CACrBmyC,YAAa,CACTl+B,WAAYjU,EAAMkU,QAAQ4K,QAAQC,MAEtCqzB,iBAAkB,CACdn+B,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKmsB,SAAW,aA+HhD,CAAEziB,WAAW,GAAhCpG,CAAwC8xC,cC5ExCS,uBAhEX,SAAAA,EAAYl0C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA0zD,IACf7zD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA4zD,GAAAvzD,KAAAH,KAAMwf,KA+BVuzC,2BAA6B,SAAApyD,GACNd,EAAK2f,MAAhBxY,SAEOrG,EAAOqG,SAClBnH,EAAK8nD,aAAehnD,EAAOk6B,WAC3Bh7B,EAAK4hB,gBArCM5hB,EAyCnB+1B,uBAAyB,SAAAj1B,GACrBd,EAAK4hB,eA1CU5hB,EA6CnBO,SAAW,SAAAO,GACYd,EAAK2f,MAAhBxY,SAEOrG,EAAOyF,SAEtBvG,EAAK4hB,eAlDU5hB,qFAIGklB,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,mDAQpC+L,KAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtD7iB,KAAU2O,GAAG,2BAA4B1hB,KAAK+yD,4BAC9ChgD,KAAU2O,GAAG,yBAA0B1hB,KAAKI,UAC5C2S,KAAU2O,GAAG,wBAAyB1hB,KAAKI,UAC3C2S,KAAU2O,GAAG,sBAAuB1hB,KAAKI,UACzC2S,KAAU2O,GAAG,+BAAgC1hB,KAAKI,UAClD2S,KAAU2O,GAAG,2BAA4B1hB,KAAKI,yDAI9C2S,KAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClE7iB,KAAU/Q,eAAe,2BAA4BhC,KAAK+yD,4BAC1DhgD,KAAU/Q,eAAe,yBAA0BhC,KAAKI,UACxD2S,KAAU/Q,eAAe,wBAAyBhC,KAAKI,UACvD2S,KAAU/Q,eAAe,sBAAuBhC,KAAKI,UACrD2S,KAAU/Q,eAAe,+BAAgChC,KAAKI,UAC9D2S,KAAU/Q,eAAe,2BAA4BhC,KAAKI,2CAyB1D,GAAIJ,KAAK2nD,aAAc,OAAO,KADzB,IAGG3gD,EAAWhH,KAAKwf,MAAhBxY,OAEFjD,EAAOgP,KAAU9P,IAAI+D,GACrB2R,EAAOW,YAAmBvV,GAEhC,OAAO+b,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAG5M,GAAQmH,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBAAoBpH,WA9D7BuH,IAAMC,YC2ChCwzC,uBACF,SAAAA,EAAYn0C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2zD,IACf9zD,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6zD,GAAAxzD,KAAAH,KAAMwf,KAkCVo0B,qBAAuB,SAAAjzC,GAAU,IACrBqG,EAAWnH,EAAK2f,MAAhBxY,OAEJA,IAAWrG,EAAOk6C,gBAAkB7zC,IAAWrG,EAAOkzC,YACtDh0C,EAAK4hB,eAvCM5hB,EA2CnBm2B,aAAe,WACXhD,aAASnzB,EAAK2f,MAAMxY,SAzCpBnH,EAAK6nB,OAASxH,IAAMqb,YAEpB,IAAMx3B,EAAOgP,KAAU9P,IAAIpD,EAAK2f,MAAMxY,QALvB,OAMfnH,EAAKukB,MAAQ,CACTrgB,KAAMA,GAPKlE,qFAWGklB,EAAWC,GAC7B,OAAID,EAAU/d,SAAWhH,KAAKwf,MAAMxY,SAIhC+d,EAAU3D,QAAUphB,KAAKwf,MAAM4B,OAI/B2D,EAAUxC,SAAWviB,KAAKwf,MAAM+C,oDAQpChK,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,qEAI/Cr7B,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,uDAetD,IAAAr0B,EACkDvf,KAAKwf,MAApDmB,EADHpB,EACGoB,QAAS3Z,EADZuY,EACYvY,OAAQ2T,EADpB4E,EACoB5E,kBAEzB,GAHK4E,EACuCgD,OAEhC,OAAO,KAEnB,IACMqxC,EADgBr7C,IAAiBwT,cACF/kB,EAErC,OACI8Y,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAK0nB,OACV3H,UAAWe,IACP8yC,EAAajzC,EAAQkzC,aAAelzC,EAAQ+G,OAC5CksC,EAAa,gBAAkB,UAEnCpsB,YAAaxnC,KAAKg2B,cAClBlW,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CACI3uB,OAAQA,EACR2T,kBAAmBA,EACnBub,YAAU,EACVvV,QAAS,CAAE6V,WAAY7V,EAAQ6V,WAAYC,WAAY9V,EAAQ8V,cAEnE3W,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACXD,EAAAtf,EAAAqM,cAAC2vB,GAAA,EAAD,CAAoBx1B,OAAQA,IAC5B8Y,EAAAtf,EAAAqM,cAACinD,GAAD,CAAmB9sD,OAAQA,KAE/B8Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAACknD,GAAD,CAAsB/sD,OAAQA,IAC9B8Y,EAAAtf,EAAAqM,cAACmnD,GAAD,CAAoBhtD,OAAQA,eA9E5BmZ,cA6F5BwzC,GAAc1yC,aAAe,CACzBsB,QAAQ,EACR5H,mBAAmB,GAGRwG,WApIA,SAAAC,GAAK,MAAK,CACrBoV,WAAY,CACRpT,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACRsP,OAAQ,GAEZD,WAAY,GACZo9B,aAAc,CACV1xC,MAAO,OACP8E,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KACvC3K,aAAc,EACdy+B,OAAQ,UACR/sC,OAAQ,SACRgtC,gBAAiB,CACb7+B,WAAYjU,EAAMkU,QAAQ4K,QAAQC,OAG1CzY,OAAQ,CACJ8N,aAAc,EACdy+B,OAAQ,UACR/sC,OAAQ,SACRitC,UAAW,CACPltC,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KAAO,KAC9C+zB,gBAAiB,CACb7+B,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,WAEnF6+B,gBAAiB,CACb/+B,WAAYjU,EAAMkU,QAAQ4K,QAAQC,KAAO,UAwGvB,CAAE5Y,WAAW,GAAhCpG,CAAwCwyC,IC0MxCU,uBA5UX,SAAAA,EAAY70C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAq0D,IACfx0D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAu0D,GAAAl0D,KAAAH,KAAMwf,KA0DV80C,wBAA0B,SAAA3zD,GAClBA,EAAOk6B,WACPh7B,EAAK00D,YAAYtzD,IAAIN,EAAOqG,OAAQrG,EAAOqG,QAE3CnH,EAAK00D,YAAYrxD,OAAOvC,EAAOqG,QAGnCnH,EAAK4hB,eAlEU5hB,EAqEnByB,2BAA6B,SAAAX,GAAU,IAC3ByB,EAAwBzB,EAAxByB,oBAERvC,EAAK6kB,SAAS,CAAEgsC,mBAAoBtuD,GAAuB,kBAAMvC,EAAK20D,oBAxEvD30D,EA2EnB+1B,uBAAyB,SAAAj1B,GACrBd,EAAK40D,YAAW,IA5ED50D,EAgFnB60D,wBAA0B,SAAA/zD,GACtB,IAAMg0D,EAAqBh0D,EAAOyjB,MAC1BwwC,EAAoB/0D,EAAKukB,MAAzBwwC,iBAER/0D,EAAK6kB,SAAS,CAAEkwC,gBAAiBD,IAG7BC,GAC6B,4BAA7BA,EAAgB,UACgB,4BAAhCD,EAAmB,YAGG5hD,KAAU8hD,eAAe7uD,OAAS,IAG5D+M,KAAU8hD,eAAiB,GAC3Bh1D,EAAK6kB,SAAS,CAAEm5B,MAAO,IAAM,kBAAMh+C,EAAK40D,YAAW,QAhGpC50D,EAmGnB20D,eAnGmB10D,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAmGF,SAAAC,IAAA,IAAAgwD,EAAA,OAAAnhC,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACL2vD,EAAuB7wD,EAAKukB,MAA5BssC,qBACkD,4BAAhCA,EAAmB,SAFhC,CAAA7vD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGHnB,IAAUyC,OAAO,kBAAMxC,EAAK40D,eAHzB,wBAAA5zD,EAAAU,SAAAb,MAnGEb,EA0GnBi1D,kBAAoB,SAAAn0D,GAIhB,GAAqB,MAAjBA,EAAOm8C,OACE/pC,KAAU9P,IAAItC,EAAOyF,SAClC,CAKIzF,EAAOyF,UAAYmS,IAAiBwT,cACpClqB,IAAgB6nD,UAAU,GAC1BnxC,IAAiB61C,6BAA4B,IAIjD,IADA,IAAItL,EAAU,GACLh9C,EAAI,EAAGA,EAAIjG,EAAKukB,MAAMy5B,MAAM73C,OAAQF,IAAK,CAC9C,IAAI/B,EAAOgP,KAAU9P,IAAIpD,EAAKukB,MAAMy5B,MAAM/3C,IAC1C,GAAI/B,GAAuB,MAAfA,EAAK+4C,MACb,OAAQ/4C,EAAKgO,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBzW,IAAIc,EAAKgO,KAAK4H,gBAClCC,OAAO,UAClBkpC,EAAQt5C,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDogD,EAAQt5C,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhB0X,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eAClCT,OAAO,UAClBkpC,EAAQt5C,KAAKzF,EAAKrB,KAQtC7C,EAAKk1D,aAAajS,KAzJHjjD,EA4JnBO,SAAW,SAAAO,GAAU,IACTyF,EAAmBzF,EAAnByF,QACR,GAAc,MADazF,EAAVm8C,MACjB,CACA,IAAM/4C,EAAOgP,KAAU9P,IAAImD,GAC3B,GAAKrC,GAAuB,MAAfA,EAAK+4C,MAAlB,CAJiB,IAQTe,EAAUh+C,EAAKukB,MAAfy5B,MAEJmX,EAAa,GACjB,GAAInX,EAAM73C,OAAS,EAEf,IADqB63C,EAAMvb,KAAK,SAAA12B,GAAC,OAAIA,IAAMxF,IACxB,CACf,IAAM6uD,EAAeliD,KAAU9P,IAAI46C,EAAMA,EAAM73C,OAAS,IAAI82C,MAC5D,GAA+C,IAA3CD,aAAaoY,EAAclxD,EAAK+4C,OAChC,OAEJkY,EAAWxrD,KAAKzF,EAAKrB,IAM7B,IADA,IAAIogD,EAAU,GACLh9C,EAAI,EAAGA,EAAI+3C,EAAM73C,OAAQF,IAAK,CACnC,IAAI/B,EAAOgP,KAAU9P,IAAI46C,EAAM/3C,IAC/B,GAAI/B,GAAuB,MAAfA,EAAK+4C,MACb,OAAQ/4C,EAAKgO,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBzW,IAAIc,EAAKgO,KAAK4H,gBAClCC,OAAO,UAClBkpC,EAAQt5C,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDogD,EAAQt5C,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhB0X,KAAgBnX,IAAIc,EAAKgO,KAAKsI,eAClCT,OAAO,UAClBkpC,EAAQt5C,KAAKzF,EAAKrB,KAQtC7C,EAAKk1D,aAAajS,EAASkS,EAAY,WACnCn1D,EAAK8qD,iBAAiBqK,QAnNXn1D,EA+OnBu/C,aAAe,WACX,IAAMvhB,EAAOh+B,EAAKw/C,QAAQzxB,QAC1B/tB,EAAK2f,MAAM01C,eAAer3B,EAAKqN,WAE3BrN,GAAQA,EAAKqN,UAAYrN,EAAKyhB,cAAgBzhB,EAAKsN,cACnDtrC,EAAK40D,cApPM50D,EAwPnB40D,WAxPmB30D,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAwPN,SAAAyB,IAAA,IAAAirC,EAAA0Q,EAAAsX,EAAAC,EAAArxD,EAAAoG,EAAAkrD,EAAA3zD,UAAA,OAAA6tB,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAOosC,EAAPkoB,EAAArvD,OAAA,QAAAyI,IAAA4mD,EAAA,IAAAA,EAAA,GACDxX,EAAUh+C,EAAKukB,MAAfy5B,OAEJh+C,EAAK6/C,QAHA,CAAAv9C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,wBAKL8zD,EAAc,sBACdC,EAAe,GACdjoB,GAAW0Q,GAASA,EAAM73C,OAAS,IAC9BjC,EAAOgP,KAAU9P,IAAI46C,EAAMA,EAAM73C,OAAS,OAE5CmvD,EAAcpxD,EAAK+4C,MACnBsY,EAAerxD,EAAKrB,IAI5B7C,EAAK6/C,SAAU,EAfNv9C,EAAApB,KAAA,GAgBYc,IAAgBkJ,KAAK,CACtCjC,QAAS,WACTo1C,eAAgBkX,EAChBtW,aAAcqW,EACd1iC,MAAO6iC,MACRC,QAAQ,WACP11D,EAAK6/C,SAAU,IAtBV,SAgBHv1C,EAhBGhI,EAAA8I,MA2BEwxC,SAASz2C,OAAS,GAAKmE,EAAOsyC,SAAS,KAAO2Y,GACrDjrD,EAAOsyC,SAAS+Y,QAGhBroB,EACAttC,EAAK41D,aAAatrD,EAAOsyC,SAAU,kBAAM58C,EAAK8qD,iBAAiBxgD,EAAOsyC,YAEtE58C,EAAK61D,YAAYvrD,EAAOsyC,SAAU,kBAAM58C,EAAK8qD,iBAAiBxgD,EAAOsyC,YAlChE,yBAAAt6C,EAAAZ,SAAAW,MArPTrC,EAAK00D,YAAc,IAAIrrD,IAEvBrJ,EAAKw/C,QAAUn/B,IAAMqb,YAErB17B,EAAKukB,MAAQ,CACTy5B,MAAO,GACP6S,mBAAoBn4C,IAAiB+4C,wBACrCsD,gBAAiBr8C,IAAiBo9C,sBAVvB91D,qFAcGklB,EAAWC,GAC7B,OAAIA,EAAU64B,QAAU79C,KAAKokB,MAAMy5B,sDAOf14B,EAAWC,GAG/B,MAAO,CAAE8lB,UAFiBlrC,KAAKq/C,QAAvBzxB,QAEiBsd,sDAGV/lB,EAAWC,EAAWC,GAAU,IAC9BwY,EAAS79B,KAAKq/C,QAAvBzxB,QACAsd,EAAc7lB,EAAd6lB,UAERrN,EAAKqN,UAAYA,8CAIjBlrC,KAAKw0D,iBAELj8C,IAAiBmJ,GAAG,2BAA4B1hB,KAAKsB,4BAErDyR,KAAU2O,GAAG,mCAAoC1hB,KAAK41B,wBACtD7iB,KAAU2O,GAAG,yBAA0B1hB,KAAKI,UAC5C2S,KAAU2O,GAAG,qBAAsB1hB,KAAKI,UACxC2S,KAAU2O,GAAG,wBAAyB1hB,KAAKI,UAC3C2S,KAAU2O,GAAG,kBAAmB1hB,KAAK80D,mBACrC/hD,KAAU2O,GAAG,wBAAyB1hB,KAAKs0D,wEAI3C/7C,IAAiBvW,eAAe,2BAA4BhC,KAAKsB,4BAEjEyR,KAAU/Q,eAAe,mCAAoChC,KAAK41B,wBAClE7iB,KAAU/Q,eAAe,yBAA0BhC,KAAKI,UACxD2S,KAAU/Q,eAAe,qBAAsBhC,KAAKI,UACpD2S,KAAU/Q,eAAe,wBAAyBhC,KAAKI,UACvD2S,KAAU/Q,eAAe,kBAAmBhC,KAAK80D,mBACjD/hD,KAAU/Q,eAAe,wBAAyBhC,KAAKs0D,8DA+J9CxR,GAAoC,IAA3BkS,EAA2BtzD,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAd,GAAI2H,EAAU3H,UAAAsE,OAAA,EAAAtE,UAAA,QAAA+M,EACvCmnD,EAAiB9S,EAAQ53C,OAAO8pD,GAAYrY,KAAK,SAACn8C,EAAGo8C,GACvD,OAAOC,aAAa9pC,KAAU9P,IAAI25C,GAAGE,MAAO/pC,KAAU9P,IAAIzC,GAAGs8C,SAG5DuX,EAAYwB,iBAAiB71D,KAAKokB,MAAMy5B,MAAO+X,IAIpD51D,KAAK0kB,SAAS,CAAEm5B,MAAO+X,GAAkBvsD,4CA8D5Bw0C,GACb,IAAMl+C,EAAQC,IAAUuD,WACxB0Q,YAAiBlU,EAAOk+C,uCAGhBA,EAAOx0C,GACM,IAAjBw0C,EAAM73C,QAEVhG,KAAK0kB,SAAS,CAAEm5B,MAAO79C,KAAKokB,MAAMy5B,MAAM3yC,OAAO2yC,IAAUx0C,wCAGhDw0C,EAAOx0C,GAChBrJ,KAAK0kB,SAAS,CAAEm5B,MAAOA,GAASx0C,yCAInBrJ,KAAKq/C,QAAQzxB,QACrBsd,UAAY,mCAGZ,IAAAzgC,EAAAzK,KAGC81D,EAFY91D,KAAKokB,MAAfy5B,MAEclwC,IAAI,SAAA/B,GAAC,OAAIkU,EAAAtf,EAAAqM,cAACkpD,GAAD,CAAet+C,IAAK7L,EAAG5E,OAAQ4E,EAAG2W,OAAQ9X,EAAK8pD,YAAYzxD,IAAI8I,OAW9F,OACIkU,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKq/C,QAASt/B,UAAU,eAAe0gC,SAAUzgD,KAAKo/C,cAC3D0W,8CA/FWE,EAAYhB,GAChC,GAAIgB,EAAWhwD,SAAWgvD,EAAWhvD,OAAQ,CACzC,IAAK,IAAIF,EAAI,EAAGA,EAAIkwD,EAAWhwD,OAAQF,IACnC,GAAIkwD,EAAWlwD,KAAOkvD,EAAWlvD,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,SA7OWoa,IAAMC,YCC1B81C,eACF,SAAAA,EAAYz2C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAi2D,IACfp2D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAm2D,GAAA91D,KAAAH,KAAMwf,KAeV02C,kCAAoC,WAChCr2D,EAAK6kB,SAAS,CAAEyxC,qBAAqB,KAjBtBt2D,EAoBnBu2D,aAAe,WACPv2D,EAAKw2D,UAETx2D,EAAKw2D,SAAU,EACft7B,WAAW,WACPhxB,OAAO7E,SAAS8sD,UACjB,OAvBHnyD,EAAKukB,MAAQ,CACT+xC,qBAAqB,GAJVt2D,mFASf0Y,IAAiBmJ,GAAG,kCAAmC1hB,KAAKk2D,kFAI5D39C,IAAiBvW,eAAe,kCAAmChC,KAAKk2D,oEAgBnE,IACGC,EAAwBn2D,KAAKokB,MAA7B+xC,oBACAx1C,EAAY3gB,KAAKwf,MAAjBmB,QAEFpc,EAAU4xD,EACZr2C,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQqmB,QAAQ,YAAY1E,MAAM,UAAUpC,UAAWY,EAAQgC,KAAM1C,QAASjgB,KAAKo2D,cAAnF,UAGA,KAEJ,OAAOt2C,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAGhhB,UAxCQ2b,IAAMC,WA4CjBgB,OAvDA,CACXwB,KAAM,CACFuE,OAAQ,EACR1D,QAAS,OACT7T,MAAO,OACP6lB,aAAc,EACdrT,MAAO,QACPm0C,UAAW,SAgDJn1C,CAAmB80C,IC3C5BM,uBACF,SAAAA,EAAY/2C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAu2D,IACf12D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAy2D,GAAAp2D,KAAAH,KAAMwf,KA+CVg3C,4BAA8B,SAAA71D,GAC1Bd,EAAK6kB,SAAS,CACVytC,YAAY,EACZsE,aAAc91D,EAAOqG,OACrB6kB,WAAYlrB,EAAOkd,QApDRhe,EAwDnB62D,0BAA4B,SAAA/1D,GACxBd,EAAK4hB,eAzDU5hB,EA4DnB82D,oCAAsC,SAAAh2D,GAClCd,EAAK6kB,SAAS,CACVkyC,qBAAsBr+C,IAAiBq+C,wBA9D5B/2D,EAkEnBg3D,yBAA2B,SAAAl2D,GACvBd,EAAK6kB,SAAS,CACVytC,YAAY,EACZsE,aAAc91D,EAAOqG,OACrB6kB,WAAY,QAtEDhsB,EA0EnBsrD,kBAAoB,WAChBtrD,EAAKi3D,YAAYlpC,QAAQmpC,eA3EVl3D,EA8EnBoyD,aAAe,SAAA+E,GACXn3D,EAAK6kB,SAAS,CACVytC,WAAY6E,EACZP,aAAc,EACd5qC,WAAY,QAlFDhsB,EAsFnBm/C,oBAAsB,SAACh4C,EAAQC,EAAWkrD,GAAe,IAC7C8E,EAAiBp3D,EAAK2f,MAAtBy3C,aAERjkC,aAAShsB,EAAQC,GAEjBgwD,EAAajwD,EAAQC,GAErB,IAAMwvD,EAAetE,EAAatyD,EAAKukB,MAAMqyC,aAAe,EACtD5qC,EAAasmC,EAAatyD,EAAKukB,MAAMyH,WAAa,KAExDhsB,EAAK6kB,SAAS,CACVytC,WAAYA,EACZsE,aAAcA,EACd5qC,WAAYA,KAnGDhsB,EAuGnB4wC,YAAc,WACV5wC,EAAK6kB,SAAS,CACVytC,YAAY,EACZsE,aAAc,EACd5qC,WAAY,QA3GDhsB,EA+GnBq3D,uBAAyB,SAAAr5C,GACrBhe,EAAK6kB,SAAS,CACVmH,WAAYhO,KAjHDhe,EAqHnBu/C,aAAe,SAAA2M,GACPlsD,EAAKs3D,cAAcvpC,UACnB/tB,EAAKs3D,cAAcvpC,QAAQ7N,UAAY,kBAAoBgsC,EAAI,EAAI,GAAK,iBApH5ElsD,EAAKs3D,cAAgBj3C,IAAMqb,YAC3B17B,EAAKi3D,YAAc52C,IAAMqb,YAEzB17B,EAAKukB,MAAQ,CACTwyC,qBAAsBr+C,IAAiBq+C,qBACvCzE,YAAY,EACZsE,aAAc,EACd5qC,WAAY,MAVDhsB,qFAcGklB,EAAWC,GAC7B,OAAIA,EAAU4xC,uBAAyB52D,KAAKokB,MAAMwyC,uBAI9C5xC,EAAUmtC,aAAenyD,KAAKokB,MAAM+tC,aAIpCntC,EAAUyxC,eAAiBz2D,KAAKokB,MAAMqyC,cAItCzxC,EAAU6G,aAAe7rB,KAAKokB,MAAMyH,yDAQxCtT,IAAiBmJ,GAAG,oCAAqC1hB,KAAK22D,qCAC9Dp+C,IAAiBmJ,GAAG,yBAA0B1hB,KAAK62D,0BACnDt+C,IAAiBmJ,GAAG,0BAA2B1hB,KAAK02D,2BACpDn+C,IAAiBmJ,GAAG,4BAA6B1hB,KAAKw2D,4EAItDj+C,IAAiBvW,eAAe,oCAAqChC,KAAK22D,qCAC1Ep+C,IAAiBvW,eAAe,yBAA0BhC,KAAK62D,0BAC/Dt+C,IAAiBvW,eAAe,0BAA2BhC,KAAK02D,2BAChEn+C,IAAiBvW,eAAe,4BAA6BhC,KAAKw2D,8DA6E7D,IACG71C,EAAY3gB,KAAKwf,MAAjBmB,QADHwD,EAEkEnkB,KAAKokB,MAApEwyC,EAFHzyC,EAEGyyC,qBAAsBzE,EAFzBhuC,EAEyBguC,WAAYsE,EAFrCtyC,EAEqCsyC,aAAc5qC,EAFnD1H,EAEmD0H,WAExD,OACI/L,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ8F,YAAa,UAAW,CAClD2wC,uBAAwBR,KAE5B92C,EAAAtf,EAAAqM,cAACwqD,GAAD,CACI7E,aAAcxyD,KAAKm3D,cACnBhF,WAAYA,EACZtmC,WAAYA,EACZ5L,QAASjgB,KAAKmrD,kBACd+G,SAAUlyD,KAAKiyD,aACfqF,mBAAoBt3D,KAAKk3D,yBAE7Bp3C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAC0qD,GAAD,CAAaz7B,IAAK97B,KAAK82D,YAAa5B,eAAgBl1D,KAAKo/C,eACxD+S,GACGryC,EAAAtf,EAAAqM,cAACsvC,GAAA,EAAD,CACIn1C,OAAQyvD,EACR54C,KAAMgO,EACNszB,gBAAiBn/C,KAAKg/C,oBACtBr1B,QAAS3pB,KAAKywC,eAI1B3wB,EAAAtf,EAAAqM,cAAC2qD,GAAD,cAvJMr3C,cAiKPgB,OArKA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,GACbwnB,YAAYlG,KAoKJD,CAAmBo1C,ICzJ5BkB,sNACFrzC,MAAQ,CACJpd,OAAQuR,IAAiB+1C,gBAiB7BoJ,+BAAiC,SAAA/2D,GAAU,IAC/BqG,EAAWrG,EAAXqG,OAERnH,EAAK6kB,SAAS,CAAE1d,cAGpBypC,YAAc,WACV5uC,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,0FAvBM+d,EAAWC,EAAWC,GAAa,IAC7Cje,EAAWhH,KAAKokB,MAAhBpd,OAER,OAAOge,EAAUhe,SAAWA,8CAI5BuR,IAAiBmJ,GAAG,2BAA4B1hB,KAAK03D,+EAIrDn/C,IAAiBvW,eAAe,2BAA4BhC,KAAK03D,iEAgB5D,IACG/2C,EAAY3gB,KAAKwf,MAAjBmB,QACA3Z,EAAWhH,KAAKokB,MAAhBpd,OACR,OAAKA,EAGD8Y,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACIyJ,MAAI,EACJqgB,mBAAoB,EACpBX,QAAS3pB,KAAKywC,YACd9vB,QAAS,CAAEgC,KAAMhC,EAAQ0wB,WAAYsmB,UAAWh3C,EAAQi3C,cAAelV,MAAO/hC,EAAQk3C,YACtF/3C,EAAAtf,EAAAqM,cAACirD,GAAD,CAAU/3C,UAAWY,EAAQo3C,aAAc/wD,OAAQA,EAAQosB,OAAK,KARpD,YAnCClT,IAAMC,YAmDpBgB,OAnEA,SAAAC,GAAK,MAAK,CACrB22C,aAAc,CACVpoD,MAAO,KAEXioD,cAAe,CACXI,WAAY,SAEhB3mB,WAAY,CACRlvB,MAAOf,EAAMkU,QAAQzX,KAAKqiB,QAC1BxJ,OAAQtV,EAAMsV,OAAOuhC,OAEzBJ,UAAW,CACPloD,MAAO,OAuDAwR,CAAmBs2C,mCC3C5BS,uBACF,SAAAA,EAAY14C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAk4D,IACfr4D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAo4D,GAAA/3D,KAAAH,KAAMwf,KAOVsG,aAAe,WACXjkB,IAAgBgH,aAAa,CAAEC,QAAS,gCATzBjJ,EAYnBisC,aAAe,WACX,IAAIqsB,GAA0B,EADbriD,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAEjB,QAAAwH,EAAAC,EAAkCtI,IAAauR,cAAc3J,SAA7DW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAnV,QAAAsV,MAAAP,GAAA,EAAuE,KAAA7T,EAAAgU,EAAAR,MAA5DzO,EAA4D/E,EAA5D+E,OAAQC,EAAoDhF,EAApDgF,UACT3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACV6zD,GAA0B,EAC1B,MAEJ,IAAK7zD,EAAQ8zD,6BAA8B,CACvCD,GAA0B,EAC1B,QAVS,MAAA7hD,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAcjBnW,EAAK6kB,SAAS,CACV2zC,kBAAkB,EAClBF,wBAAyBA,EACzBnsD,OAAQmsD,KA7BGt4D,EAiCnBy4D,qBAAuB,WAAM,IAGrB51D,EAFIsJ,EAAWnM,EAAKukB,MAAhBpY,OAGFyB,EAAa,GAJMiJ,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IAKzB,QAAAoI,EAAAC,EAAkClJ,IAAauR,cAAc3J,SAA7DW,OAAAC,cAAAM,GAAAG,EAAAC,EAAA/V,QAAAsV,MAAAK,GAAA,EAAuE,KAAA6nC,EAAA1nC,EAAApB,MAA5DzO,EAA4Du3C,EAA5Dv3C,OAAQC,EAAoDs3C,EAApDt3C,UACfvE,EAAKsE,EACLyG,EAAWjE,KAAKvC,IAPK,MAAAqP,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAUzB/W,EAAKimB,eAELjkB,IAAgBkJ,KAAK,CACjBjC,QAAS,iBACT1C,QAAS1D,EACTqJ,YAAa0B,EACbzB,OAAQA,KAjDGnM,EAqDnB04D,mBAAqB,WACjB14D,EAAK6kB,SAAS,CAAE1Y,QAASnM,EAAKukB,MAAMpY,UAtDrBnM,EAyDnB24D,kBAAoB,WAChB34D,EAAK6kB,SAAS,CAAE2zC,kBAAkB,KA1DnBx4D,EA6DnB44D,cAAgB,WACZ,IAAI/1D,EACE+K,EAAa,GAFDirD,GAAA,EAAAC,GAAA,EAAAC,OAAAnqD,EAAA,IAGlB,QAAAoqD,EAAAC,EAAkClrD,IAAauR,cAAc3J,SAA7DW,OAAAC,cAAAsiD,GAAAG,EAAAC,EAAA/3D,QAAAsV,MAAAqiD,GAAA,EAAuE,KAAAK,EAAAF,EAAApjD,MAA5DzO,EAA4D+xD,EAA5D/xD,OAAQC,EAAoD8xD,EAApD9xD,UACfvE,EAAKsE,EACLyG,EAAWjE,KAAKvC,IALF,MAAAqP,GAAAqiD,GAAA,EAAAC,EAAAtiD,EAAA,YAAAoiD,GAAA,MAAAI,EAAAviD,QAAAuiD,EAAAviD,SAAA,WAAAoiD,EAAA,MAAAC,GAQlB/4D,EAAKimB,eAELjkB,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,CACFj8C,OAAQtE,EACR+K,WAAYA,MA3EL5N,EAgFnBm5D,YAAc,WACV,GAAwC,IAApCprD,IAAauR,cAAc/S,KAA/B,CADgB,IAAA6sD,EAGcrrD,IAAauR,cAAc3J,SAASzU,OAAO0U,MAAjEzO,EAHQiyD,EAGRjyD,OAAQC,EAHAgyD,EAGAhyD,UAEhBpH,EAAKimB,eAELjkB,IAAgBgH,aAAa,CAAEC,QAAS,oBAAqB9B,OAAQA,EAAQC,UAAWA,MApFxFpH,EAAKukB,MAAQ,CACTi0C,kBAAkB,GAJPx4D,wEA0FV,IAAA0f,EACyBvf,KAAKwf,MAA3BmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EAAGqC,EADf0F,EACe1F,MADfsK,EAEyDnkB,KAAKokB,MAA3Di0C,EAFHl0C,EAEGk0C,iBAAkBF,EAFrBh0C,EAEqBg0C,wBAAyBnsD,EAF9CmY,EAE8CnY,OAE7ChF,EAASuR,IAAiBwT,YAE5BmtC,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAA5qD,EAAA,IAOL,QAAA6qD,EAAAC,EAAkC3rD,IAAauR,cAAc3J,SAA7DW,OAAAC,cAAA+iD,GAAAG,EAAAC,EAAAx4D,QAAAsV,MAAA8iD,GAAA,EAAuE,KAAAK,EAAAF,EAAA7jD,MAA5DzO,EAA4DwyD,EAA5DxyD,OAAQC,EAAoDuyD,EAApDvyD,UACT3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACV40D,GAAe,EACf,MAEJ,IAAK50D,EAAQm1D,+BAAiCn1D,EAAQ8zD,6BAA8B,CAChFc,GAAe,EACf,QAfH,MAAA5iD,GAAA8iD,GAAA,EAAAC,EAAA/iD,EAAA,YAAA6iD,GAAA,MAAAI,EAAAhjD,QAAAgjD,EAAAhjD,SAAA,WAAA6iD,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAprD,EAAA,IAoBL,QAAAqrD,EAAAC,EAAkCnsD,IAAauR,cAAc3J,SAA7DW,OAAAC,cAAAujD,GAAAG,EAAAC,EAAAh5D,QAAAsV,MAAAsjD,GAAA,EAAuE,KAAAK,EAAAF,EAAArkD,MAA5DzO,EAA4DgzD,EAA5DhzD,OAAQC,EAAoD+yD,EAApD/yD,UACT3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVo1D,GAAiB,EACjB,MAEJ,IAAKp1D,EAAQs/C,iBAAkB,CAC3BsV,GAAe,EACf,QA5BH,MAAA5iD,GAAAsjD,GAAA,EAAAC,EAAAvjD,EAAA,YAAAqjD,GAAA,MAAAI,EAAAxjD,QAAAwjD,EAAAxjD,SAAA,WAAAqjD,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVpgD,GAAe4D,YAAgBzW,GAEpD,OACI8Y,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC3CizC,GACG55C,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUpC,UAAWY,EAAQu5C,WAAYj6C,QAASjgB,KAAKy4D,eAChE5+C,GAAS,EAAIrC,EAAE,WAAf,GAAAtM,OAA+BsM,EAAE,WAAjC,KAAAtM,OAA+C2O,IAGvDq/C,GACGp5C,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUpC,UAAWY,EAAQu5C,WAAYj6C,QAASjgB,KAAK8rC,cAChEjyB,GAAS,EAAIrC,EAAE,UAAf,GAAAtM,OAA8BsM,EAAE,UAAhC,KAAAtM,OAA6C2O,IAGrDogD,GACGn6C,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUpC,UAAWY,EAAQu5C,WAAYj6C,QAASjgB,KAAKg5D,aAChExhD,EAAE,UAGXsI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,yBACfD,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUpC,UAAWY,EAAQw5C,YAAal6C,QAASjgB,KAAK8lB,cACjEtO,EAAE,YAGXsI,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAMouD,EACN1uC,QAAS3pB,KAAKw4D,kBACdjuC,kBAAgB,uBAChBzK,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,uBAAhB,WACAod,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC6d,GAAAlqB,EAAD,KACe,IAAVqZ,EACK,6CADL,mCAAA3O,OAEwC2O,EAFxC,eAIJs+C,GACGr4C,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACImvD,QACI7vC,EAAAtf,EAAAqM,cAACutD,GAAA55D,EAAD,CAAUqiB,QAAS7W,EAAQwW,SAAUxiB,KAAKu4D,mBAAoBp2C,MAAM,YAExEurC,MACI7xC,YAAc7U,GAAd,cAAAkE,OAAsC+R,YAAkBjW,IAAY,oBAKpF8Y,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKw4D,kBAAmBr2C,MAAM,WAA/C,UAGArC,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKs4D,qBAAsBn2C,MAAM,WAAlD,gBA/KIjC,IAAMC,YAkMnB4G,GALCC,YACZ7F,IA1MW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChBo6D,WAAY,CACRhzC,OAAQ,mBACRonB,SAAU,SAEd6rB,YAAa,CACTjzC,OAAQ,mBACRonB,SAAU,UAEXhnB,YAAYlG,KAiMI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQmxC,IC1LjBmC,eACF,SAAAA,EAAY76C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAq6D,IACfx6D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAu6D,GAAAl6D,KAAAH,KAAMwf,KA8DV86C,8BAAgC,SAAA35D,GAC5B,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAK4hB,eApEU5hB,EAuEnB06D,8BAAgC,SAAA55D,GAC5Bd,EAAK6kB,SAAS,CAAE81C,eAAgB5sD,IAAauR,cAAc/S,QAxE5CvM,EA2EnB+zC,qBAAuB,SAAAjzC,GACnBd,EAAK4hB,eA5EU5hB,EA+EnB60D,wBAA0B,SAAA/zD,GACtBd,EAAK6kB,SAAS,CAAEkwC,gBAAiBj0D,EAAOyjB,SAhFzBvkB,EAmFnByB,2BAA6B,SAAAX,GACzBd,EAAK6kB,SAAS,CAAEgsC,mBAAoB/vD,EAAOyB,uBApF5BvC,EAuFnBk2B,kBAAoB,SAAAp1B,GAChB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAK4hB,eA5FU5hB,EA+FnBo1B,mBAAqB,SAAAt0B,GACjB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aAC5C,GAAKhoB,GACAA,EAAKgO,KAEV,OAAQhO,EAAKgO,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,KAAgBc,YAAYzW,EAAKgO,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQgmB,KAAK,SAAA12B,GAAC,OAAIA,EAAEqD,UAAYtO,EAAOsO,WAE3DpP,EAAK4hB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACG1d,EAAKgO,KAAK9C,UAAYtO,EAAOsO,SAC7BpP,EAAK4hB,gBAvHF5hB,EAiInB46D,uBAAyB,SAAA95D,GACC4X,IAAiBwT,cAEjBprB,EAAOyF,SACzBvG,EAAK4hB,eArIM5hB,EAyInB+iC,mBAAqB,SAAAjiC,GACjB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAK4H,iBAAmBhZ,EAAOs7B,YAAYv5B,IAEhD7C,EAAK4hB,eAlJM5hB,EAsJnBgjC,mBAAqB,SAAAliC,GACjB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAKsI,gBAAkB1Z,EAAOwZ,WAAWzX,IAE9C7C,EAAK4hB,eA/JM5hB,EAmKnB6iC,2BAA6B,SAAA/hC,GACzB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAK4H,iBAAmBhZ,EAAOgZ,gBAEpC9Z,EAAK4hB,eA5KM5hB,EAgLnB8iC,2BAA6B,SAAAhiC,GACzB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,GAGDA,EAAKgO,MACkB,uBAAvBhO,EAAKgO,KAAK,UACVhO,EAAKgO,KAAKsI,gBAAkB1Z,EAAO0Z,eAEnCxa,EAAK4hB,eAzLM5hB,EA6LnB4iC,qBAAuB,SAAA9hC,GACnB,IAAMoD,EAAOgP,KAAU9P,IAAIsV,IAAiBwT,aACvChoB,KAGDA,EAAKgO,MACmB,oBAAvBhO,EAAKgO,KAAK,UAAyD,mBAAvBhO,EAAKgO,KAAK,UACvDhO,EAAKgO,KAAK9C,UAAYtO,EAAOsO,SAE7BpP,EAAK4hB,gBAtMM5hB,EA0MnBinD,gBAAkB,WACd,IAAM9/C,EAASuR,IAAiBwT,YACnBhZ,KAAU9P,IAAI+D,IAG3BuR,IAAiB61C,6BAA4B,IA/M9BvuD,EAkNnB66D,iBAAmB,WACf,IAAM1zD,EAASuR,IAAiBwT,YACnBhZ,KAAU9P,IAAI+D,IAG3BuR,IAAiBoiD,WAAW3zD,IAvNbnH,EA0NnB+6D,SAAW,SAAAC,GAGP,OAAOrjD,EAFO3X,EAAK2f,MAAXhI,GAECqjD,GACJ1tB,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlBttC,EAAKukB,MAAQ,CACTssC,mBAAoBn4C,IAAiB+4C,wBACrCsD,gBAAiBr8C,IAAiBo9C,sBALvB91D,qFASGklB,EAAWC,GAC7B,OAAIA,IAAchlB,KAAKokB,QAInBW,EAAU3D,QAAUphB,KAAKwf,MAAM4B,OAI/B2D,EAAUvN,IAAMxX,KAAKwf,MAAMhI,+CAQ/Be,IAAiBmJ,GAAG,wBAAyB1hB,KAAK00D,yBAClDn8C,IAAiBmJ,GAAG,2BAA4B1hB,KAAKsB,4BACrDiX,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,sBAE/ChmC,IAAa8T,GAAG,8BAA+B1hB,KAAKu6D,+BACpD3sD,IAAa8T,GAAG,6BAA8B1hB,KAAKu6D,+BAEnDxnD,KAAU2O,GAAG,8BAA+B1hB,KAAKs6D,+BACjDvnD,KAAU2O,GAAG,kBAAmB1hB,KAAK+1B,mBACrC7mB,IAAUwS,GAAG,mBAAoB1hB,KAAKi1B,oBACtCliB,KAAU2O,GAAG,uBAAwB1hB,KAAKy6D,wBAC1CvrD,IAAUwS,GAAG,qBAAsB1hB,KAAKyiC,sBACxC/oB,KAAgBgI,GAAG,2BAA4B1hB,KAAK0iC,4BACpDtoB,KAAgBsH,GAAG,2BAA4B1hB,KAAK2iC,4BACpDjpB,KAAgBgI,GAAG,mBAAoB1hB,KAAK4iC,oBAC5CxoB,KAAgBsH,GAAG,mBAAoB1hB,KAAK6iC,mEAI5CtqB,IAAiBvW,eAAe,wBAAyBhC,KAAK00D,yBAC9Dn8C,IAAiBvW,eAAe,2BAA4BhC,KAAKsB,4BACjEiX,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,sBAE3DhmC,IAAa5L,eAAe,8BAA+BhC,KAAKu6D,+BAChE3sD,IAAa5L,eAAe,6BAA8BhC,KAAKu6D,+BAE/DxnD,KAAU/Q,eAAe,8BAA+BhC,KAAKs6D,+BAC7DvnD,KAAU/Q,eAAe,kBAAmBhC,KAAK+1B,mBACjD7mB,IAAUlN,eAAe,mBAAoBhC,KAAKi1B,oBAClDliB,KAAU/Q,eAAe,uBAAwBhC,KAAKy6D,wBACtDvrD,IAAUlN,eAAe,qBAAsBhC,KAAKyiC,sBACpD/oB,KAAgB1X,eAAe,2BAA4BhC,KAAK0iC,4BAChEtoB,KAAgBpY,eAAe,2BAA4BhC,KAAK2iC,4BAChEjpB,KAAgB1X,eAAe,mBAAoBhC,KAAK4iC,oBACxDxoB,KAAgBpY,eAAe,mBAAoBhC,KAAK6iC,qDAsKnD,IAAAtjB,EACkBvf,KAAKwf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAE2DnkB,KAAKokB,MAA7DssC,EAFHvsC,EAEGusC,mBAAoBkE,EAFvBzwC,EAEuBywC,gBAAiB4F,EAFxCr2C,EAEwCq2C,eAE7C,GAAIA,EACA,OAAO16C,EAAAtf,EAAAqM,cAACiuD,GAAD,CAAejhD,MAAO2gD,IAGjC,IAAMxzD,EAASuR,IAAiBwT,YAC1BhoB,EAAOgP,KAAU9P,IAAI+D,GAErB+zD,EAAmB1/C,YAAqBrU,GAC1C+T,EAAQmB,YAAalV,GAAQ,EAAMwQ,GACnC+qB,EAAW7nB,YAAgB1T,GAAQ,GACnCg0D,GAAwB,EAE5B,GAAIpG,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACD75C,EAAQ/a,KAAK46D,SAAS,cACtBr4B,EAAW,GACXy4B,GAAwB,EACxB,MACJ,IAAK,mCACDjgD,EAAQ/a,KAAK46D,SAAS,uBACtBr4B,EAAW,GACXy4B,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDjgD,EAAQ/a,KAAK46D,SAAS,YACtBr4B,EAAW,GACXy4B,GAAwB,EACxB,MACJ,IAAK,mCACDjgD,EAAQ/a,KAAK46D,SAAS,uBACtBr4B,EAAW,GACXy4B,GAAwB,OAG7B,GAAItK,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD31C,EAAQ/a,KAAK46D,SAAS,eACtBr4B,EAAW,GACXy4B,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDjgD,EAAQ/a,KAAK46D,SAAS,WACtBr4B,EAAW,GACXy4B,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDjgD,EAAQ/a,KAAK46D,SAAS,WACtBr4B,EAAW,GACXy4B,GAAwB,OAIhCjgD,EAAQ/a,KAAK46D,SAAS,WACtBr4B,EAAW,GACXy4B,GAAwB,EAG5B,OACIl7C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC5C3G,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,gBAAiB,OAAQ/c,EAAO,iBAAmB,kBACzEkc,QAASjgB,KAAK8mD,iBACdhnC,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,yBAAyBhF,GACxCigD,GACGl7C,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,mBAAhB,KACAD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,mBAAhB,KACAD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,mBAAhB,MAGRD,EAAAtf,EAAAqM,cAAA,QACIkT,UAAWe,IAAW,sBAADhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAChB6gB,EAAQs6C,wBAA0BF,KAEtCx4B,GAELziB,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,wBAEnBhc,GACG+b,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQu6C,wBACnBxxB,aAAW,SACXzpB,QAASjgB,KAAK06D,kBACd56C,EAAAtf,EAAAqM,cAAC+lD,GAAApyD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACsuD,GAAD,CAAgBrU,gBAAiB9mD,KAAK8mD,2BA7UzC3mC,aA0VN4G,GALCC,YACZQ,cACArG,IA7WW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChBkyC,OAAQ,CACJ9qB,OAAQ,QAEZ8gC,eAAgB,CACZ9gC,OAAQ,qBAEZ0qC,iBAAkB,CACd1qC,OAAQ,kBAEZg0C,wBAAyB,CACrBh0C,OAAQ,kBAEZk0C,eAAgB,CACZl0C,OAAQ,kBAEZ+zC,wBAAyB,CACrB94C,MAAOf,EAAMkU,QAAQ4K,QAAQiD,KAAO,eAErC7b,YAAYlG,KA0VI,CAAEmG,WAAW,IAGrBR,CAAQszC,2MChWjBgB,sNACFj3C,MAAQ,CACJ0kB,SAAU,KACVrzB,MAAO6a,KAAYQ,OACnBwqC,UAAWhrC,KAAYQ,OACvByqC,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAA/6D,GAAU,IAC1BmwB,EAAuBnwB,EAAvBmwB,OAAQ6qC,EAAeh7D,EAAfg7D,gBAEGltD,IAAfktD,EACA97D,EAAK6kB,SAAS,CAAEjP,MAAOqb,IAEvBjxB,EAAK6kB,SAAS,CAAEjP,MAAOqb,EAAQwqC,UAAWK,OAIlDC,kBAAoB,SAAA9yB,GAChBjpC,EAAK6kB,SAAS,CAAEokB,SAAUA,OAG9B+yB,mBAAqB,WAAM,IAAA13C,EACqBtkB,EAAKukB,MAAzCm3C,EADep3C,EACfo3C,SAAUC,EADKr3C,EACLq3C,WAAYC,EADPt3C,EACOs3C,UAE1BF,GACAC,GACAC,GAEJ57D,EAAK6kB,SAAS,CAAEokB,SAAU,UAG9BgzB,iBAAmB,SAACtwD,EAAOuwD,GACvBl8D,EAAK6kB,SAAS,CAAE82C,YAAY,IAExBO,GACAl8D,EAAK+7D,kBAAkBpwD,EAAMw9B,kBAIrCgzB,iBAAmB,WACfn8D,EAAK6kB,SAAS,CAAE82C,YAAY,GAAS,WACjC37D,EAAKg8D,0BAIbI,sBAAwB,WACpBp8D,EAAK6kB,SAAS,CAAE+2C,WAAW,GAAS,WAChC57D,EAAKg8D,0BAIbK,iBAAmB,WAAM,IAAAn5B,EACQljC,EAAKukB,MAA1B3O,EADastB,EACbttB,MAAO6lD,EADMv4B,EACNu4B,UACTa,EAAY1mD,EAAQ,EAAI,EAAI6lD,GAAaxoC,IAE/CjxB,IAAgBgH,aAAa,CACzBC,QAAS,0BACTgoB,OAAQqrC,OAIhBlP,aAAe,SAACzhD,EAAOiK,GAAU,IAAAuvB,EACGnlC,EAAKukB,MAA7Bm3C,EADqBv2B,EACrBu2B,SAAUD,EADWt2B,EACXs2B,UAEdC,EACA15D,IAAgBgH,aAAa,CACzBC,QAAS,0BACTgoB,OAAQrb,IAGZ5T,IAAgBgH,aAAa,CACzBC,QAAS,0BACT6yD,WAAYlmD,EAAQ,EAAIA,EAAQ6lD,EAChCxqC,OAAQrb,OAKpB2mD,gBAAkB,WAAM,IACZ3mD,EAAU5V,EAAKukB,MAAf3O,MAER5V,EAAK6kB,SAAS,CACV62C,UAAU,EACVD,UAAW7lD,OAInB4mD,cAAgB,WAAM,IAAAh3B,EACWxlC,EAAKukB,MAA1B3O,EADU4vB,EACV5vB,MAAO6lD,EADGj2B,EACHi2B,UAEfz7D,EAAK6kB,SACD,CACI62C,UAAU,EACVD,UAAW7lD,EAAQ,EAAIA,EAAQ6lD,GAEnC,WACIz7D,EAAKg8D,0BAKjBS,cAAgB,SAAA7mD,GACZ,OAAc,IAAVA,EACOqK,EAAAtf,EAAAqM,cAAC0vD,GAAA/7D,EAAD,CAAe0hB,SAAS,UAG/BzM,EAAQ,IACDqK,EAAAtf,EAAAqM,cAAC2vD,GAAAh8D,EAAD,CAAgB0hB,SAAS,UAGhCzM,EAAQ,GACDqK,EAAAtf,EAAAqM,cAAC4vD,GAAAj8D,EAAD,CAAgB0hB,SAAS,UAG7BpC,EAAAtf,EAAAqM,cAAC6vD,GAAAl8D,EAAD,CAAc0hB,SAAS,8FAlH9BoO,KAAY5O,GAAG,0BAA2B1hB,KAAK07D,0EAI/CprC,KAAYtuB,eAAe,0BAA2BhC,KAAK07D,4DAiHtD,IAAAjxD,EAAAzK,KACG2gB,EAAY3gB,KAAKwf,MAAjBmB,QADH2kB,EAEuBtlC,KAAKokB,MAAzB0kB,EAFHxD,EAEGwD,SAAUrzB,EAFb6vB,EAEa7vB,MACZxL,EAAOmT,QAAQ0rB,GAErB,OACIhpB,EAAAtf,EAAAqM,cAAA,OACI8vD,aAAc,SAAAxyC,GAAC,OAAI1f,EAAKqxD,iBAAiB3xC,GAAG,IAC5CyyC,aAAc58D,KAAKg8D,iBACnBlvD,MAAO,CACHsW,SAAU,WACViS,WAAY,gBAEhBvV,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYtnB,MAAM,UAAUlC,QAASjgB,KAAKk8D,kBACpEl8D,KAAKs8D,cAAc7mD,IAExBqK,EAAAtf,EAAAqM,cAAA,OACIC,MAAO,CACHsW,SAAU,WACViS,WAAY,cACZwnC,WAAY5yD,EAAO,UAAY,SAC/BysB,OAAQ,GAEZimC,aAAc,SAAAxyC,GAAC,OAAI1f,EAAKqxD,iBAAiB3xC,GAAG,IAC5CyyC,aAAc58D,KAAKi8D,uBACnBn8C,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ8F,YAAa9F,EAAQgC,MACnD7V,MAAO,CACHgwD,UAAW,EACXC,YAAa,EACbz1C,YAAa,UAEjBxH,EAAAtf,EAAAqM,cAACm0C,GAAAxgD,EAAD,CACImgB,QAAS,CAAEg3C,UAAWh3C,EAAQsgC,OAAQE,MAAOxgC,EAAQwgC,OACrDC,IAAK,EACLt6B,IAAK,EACLrR,MAAOA,EACP+M,SAAUxiB,KAAKitD,aACf+P,YAAah9D,KAAKo8D,gBAClBa,UAAWj9D,KAAKq8D,cAChBtyC,UAAQ,cAxKT7J,IAAMC,YAiLlBgB,OArMA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB2pC,WAAY,CACRjmB,QAAS,GAEbb,KAAM,CACF5V,QAAS,OACT8C,OAAQ,IACRF,MAAO,GACP6T,QAAS,SACT6R,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,WAEnF0rB,OAAQ,CACJz9B,QAAS,UAEb29B,MAAO,CACH+b,QAAS,IAEV51C,YAAYlG,KAoLe,CAAEmG,WAAW,GAAhCpG,CAAwCk6C,8CCtMjD8B,eACF,SAAAA,EAAY39C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAm9D,IACft9D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAq9D,GAAAh9D,KAAAH,KAAMwf,KAiBV49C,0BAA4B,SAAAz8D,GAAU,IAC1BqwB,EAAWrwB,EAAXqwB,OAERnxB,EAAK6kB,SAAS,CAAEsM,YArBDnxB,EAwBnBw9D,aAAe,WAAM,IACTrsC,EAAWnxB,EAAKukB,MAAhB4M,OAEJssC,EAAatsC,EACjB,OAAQA,GACJ,KAAKf,KAAWE,KACZmtC,EAAartC,KAAWG,OACxB,MAEJ,KAAKH,KAAWG,OACZktC,EAAartC,KAAWI,WACxB,MAEJ,KAAKJ,KAAWI,WACZitC,EAAartC,KAAWE,KAKhCtuB,IAAgBgH,aAAa,CACzBC,QAAS,0BACTkoB,OAAQssC,KA7CGz9D,EAiDnB09D,QAAU,SAAAvsC,GACN,OAAQA,GACJ,KAAKf,KAAWE,KAGhB,KAAKF,KAAWG,OACZ,OAAOtQ,EAAAtf,EAAAqM,cAAC2wD,GAAAh9D,EAAD,CAAY0hB,SAAS,UAEhC,KAAK+N,KAAWI,WACZ,OAAOvQ,EAAAtf,EAAAqM,cAAC4wD,GAAAj9D,EAAD,CAAe0hB,SAAS,UAEnC,QACI,OAAOpC,EAAAtf,EAAAqM,cAAC2wD,GAAAh9D,EAAD,CAAY0hB,SAAS,YA7DrB,IAGP8O,EAAWV,KAAXU,OAHO,OAKfnxB,EAAKukB,MAAQ,CACT4M,UANWnxB,mFAWfywB,KAAY5O,GAAG,0BAA2B1hB,KAAKo9D,0EAI/C9sC,KAAYtuB,eAAe,0BAA2BhC,KAAKo9D,4DAmDtD,IACGz8C,EAAY3gB,KAAKwf,MAAjBmB,QACAqQ,EAAWhxB,KAAKokB,MAAhB4M,OAER,OACIlR,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WACnBtnB,MAAO6O,IAAWf,KAAWE,KAAO,UAAY,UAChDlQ,QAASjgB,KAAKq9D,cACbr9D,KAAKu9D,QAAQvsC,WA5EH9Q,IAAMC,WAkFlBgB,OAxFA,CACXsoB,WAAY,CACRjmB,QAAS,IAsFFrC,CAAmBg8C,yBCnF5BO,eACF,SAAAA,EAAYl+C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA09D,IACf79D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA49D,GAAAv9D,KAAAH,KAAMwf,KAiBVm+C,2BAA6B,SAAAh9D,GAAU,IAC3BswB,EAAYtwB,EAAZswB,QAERpxB,EAAK6kB,SAAS,CAAEuM,aArBDpxB,EAwBnB+9D,cAAgB,WAAM,IACV3sC,EAAYpxB,EAAKukB,MAAjB6M,QAERpvB,IAAgBgH,aAAa,CACzBC,QAAS,2BACTmoB,SAAUA,KA7BC,IAGPA,EAAYX,KAAZW,QAHO,OAKfpxB,EAAKukB,MAAQ,CACT6M,WANWpxB,mFAWfywB,KAAY5O,GAAG,2BAA4B1hB,KAAK29D,2EAIhDrtC,KAAYtuB,eAAe,2BAA4BhC,KAAK29D,6DAkBvD,IACGh9C,EAAY3gB,KAAKwf,MAAjBmB,QACAsQ,EAAYjxB,KAAKokB,MAAjB6M,QAER,OACInR,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WACnBtnB,MAAQ8O,EAAsB,UAAZ,UAClBhR,QAASjgB,KAAK49D,eACd99C,EAAAtf,EAAAqM,cAACgxD,GAAAr9D,EAAD,CAAa0hB,SAAS,kBA3CVhC,IAAMC,WAiDnBgB,OAvDA,CACXsoB,WAAY,CACRjmB,QAAS,IAqDFrC,CAAmBu8C,IClD5BI,eACF,SAAAA,EAAYt+C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA89D,IACfj+D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAg+D,GAAA39D,KAAAH,KAAMwf,KAiBVu+C,gCAAkC,SAAAp9D,GAAU,IAChCuwB,EAAiBvwB,EAAjBuwB,aAERrxB,EAAK6kB,SAAS,CAAEwM,kBArBDrxB,EAwBnBm+D,mBAAqB,WAAM,IAGjBC,EAFmBp+D,EAAKukB,MAAtB8M,eAGa2B,IAA6BqrC,IAA2BrrC,IAE7EhxB,IAAgBgH,aAAa,CACzBC,QAAS,gCACTooB,aAAc+sC,KAhCH,IAGP/sC,EAAiBZ,KAAjBY,aAHO,OAKfrxB,EAAKukB,MAAQ,CACT8M,gBANWrxB,mFAWfywB,KAAY5O,GAAG,gCAAiC1hB,KAAK+9D,gFAIrDztC,KAAYtuB,eAAe,gCAAiChC,KAAK+9D,kEAqB5D,IACGp9C,EAAY3gB,KAAKwf,MAAjBmB,QACAuQ,EAAiBlxB,KAAKokB,MAAtB8M,aAER,OACIpR,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WACnBtnB,MAAO+O,EAAe2B,IAA6B,UAAY,UAC/D5S,QAASjgB,KAAKg+D,oBACdl+C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BAAf,cA9CiBG,IAAMC,WAoDxBgB,OAzDA,CACXsoB,WAAY,CACRjmB,QAAS,IAuDFrC,CAAmB28C,ICdnBK,eA7CX,SAAAA,EAAY3+C,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAm+D,IACft+D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAq+D,GAAAh+D,KAAAH,KAAMwf,KAiBVulB,wBAA0B,SAAApkC,GAAU,IACxB6wB,EAAgB7wB,EAAhB6wB,YAER3xB,EAAK6kB,SAAS,CACV8M,YAAaA,EACb2T,kBAAmBD,aAAkBtgB,KAAKC,MAAM2M,GAAe,OAvBpD3xB,EA2BnBilC,cAAgB,SAACtT,EAAaD,GAGH2T,aAAkBtgB,KAAKC,MAAM0M,GAAY,IAKhE,OAJ0B2T,aAAkBtgB,KAAKC,MAAM2M,GAAe,KA5BtE3xB,EAAKukB,MAAQ,CACToN,YAAa,EACbD,SAAU,EACVsT,WAAYhlC,EAAKilC,cAAc,EAAG,IANvBjlC,mFAWfywB,KAAY5O,GAAG,wBAAyB1hB,KAAK+kC,wEAI7CzU,KAAYtuB,eAAe,wBAAyBhC,KAAK+kC,0DAuBpD,IACGI,EAAsBnlC,KAAKokB,MAA3B+gB,kBAER,OAAOrlB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KAAG4f,UA1CCjlB,IAAMC,8BCanBi+C,uBACF,SAAAA,EAAY5+C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAo+D,IACfv+D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAs+D,GAAAj+D,KAAAH,KAAMwf,KA0BV6+C,eAAiB,WACb,IAAMxgC,EAAOh+B,EAAKw/C,QAAQzxB,QAC1B,GAAKiQ,EAAL,CAFmB,IAIX52B,EAJWnH,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,IAIXoH,UACR,GAAKA,EAAL,CAEA,IAAM5D,EAAOxD,EAAKy+D,WAAWr7D,IAAIgE,GACjC,GAAK5D,EAAL,CAEA,IAAMinC,EAAOi0B,eAAqBl7D,GAC7BinC,IAELzM,EAAKqN,UAAYZ,EAAKk0B,UAAY,QAxCnB3+D,EAyDnB4+D,kCAAoC,SAAA99D,GAAU,IAClC+9D,EAAS/9D,EAAT+9D,KAEJA,EACA7+D,EAAK6kB,SACD,CACIi6C,kBAAmBD,GAEvB,WACI7+D,EAAK++D,YAIb/+D,EAAK6kB,SACD,CACIi6C,kBAAmBD,GAEvB,WACI7+D,EAAKg/D,cA3EFh/D,EAiFnBwkC,0BAA4B,SAAA1jC,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEhBpH,EAAKmH,OAASA,EACdnH,EAAKoH,UAAYA,GArFFpH,EAwFnBi/D,mCAAqC,SAAAn+D,GAAU,IAAAo+D,EAAAj/D,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,IACnCmH,EADmC+3D,EACnC/3D,OAAQC,EAD2B83D,EAC3B93D,UAEZtG,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GACjDpH,EAAK6kB,SAAS,CACVgM,SAAU,QA7FH7wB,EAkGnBm/D,4BAA8B,SAAAr+D,GAAU,IAAAs+D,EAAAn/D,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,IAC5BmH,EAD4Bi4D,EAC5Bj4D,OAAQC,EADoBg4D,EACpBh4D,UACRypB,EAAa/vB,EAAb+vB,SAEJ1pB,IAAW0pB,EAAS1pB,QAAUC,IAAcypB,EAASzpB,WACrDpH,EAAK6kB,SAAS,CACVgM,SAAUA,KAxGH7wB,EA6GnB++D,QAAU,WACNM,aAAar/D,EAAKs/D,aAElBt/D,EAAKs/D,YAAcpkC,WAAW,WAAM,IAAA5W,EACctkB,EAAKukB,MAA3Cg7C,EADwBj7C,EACxBi7C,eAAgBT,EADQx6C,EACRw6C,kBACxB9+D,EAAK6kB,SAAS,CACVza,KAAMm1D,GAAkBT,KAE7B,MArHY9+D,EAwHnBg/D,SAAW,WACPK,aAAar/D,EAAKimD,SAElBjmD,EAAKimD,QAAU/qB,WAAW,WAAM,IAAAgI,EACkBljC,EAAKukB,MAA3Cg7C,EADoBr8B,EACpBq8B,eAAgBT,EADI57B,EACJ47B,kBACxB9+D,EAAK6kB,SAAS,CACVza,KAAMm1D,GAAkBT,KAE7B,MAhIY9+D,EAmInBi8D,iBAAmB,WACfj8D,EAAK6kB,SAAS,CACVi6C,mBAAmB,EACnB10D,MAAM,KAtIKpK,EA0InBm8D,iBAAmB,WACfn8D,EAAK6kB,SACD,CACIi6C,mBAAmB,GAEvB,WACI9+D,EAAKg/D,cAhJEh/D,EAqJnBu/C,aAAe,WACX,IAAMvhB,EAAOh+B,EAAKw/C,QAAQzxB,QACrBiQ,IAEkB,IAAnBA,EAAKqN,UACLrpC,IAAgBgH,aAAa,CACzBC,QAAS,kCAEN+0B,EAAKsN,eAAiBtN,EAAKqN,UAAYrN,EAAKyhB,cACnDz9C,IAAgBgH,aAAa,CACzBC,QAAS,oCA5JjBjJ,EAAKw/C,QAAUn/B,IAAMqb,YACrB17B,EAAKy+D,WAAa,IAAIp1D,IAJP,IAMP5E,EAAsBgsB,KAAtBhsB,QAASosB,EAAaJ,KAAbI,SANF,OAQf7wB,EAAKmH,OAAS1C,EAAUA,EAAQ8B,QAAU,EAC1CvG,EAAKoH,UAAY3C,EAAUA,EAAQ5B,GAAK,EAExC7C,EAAKukB,MAAQ,CACTna,MAAM,EACNm1D,gBAAgB,EAChBT,mBAAmB,EACnBjuC,SAAUA,GAfC7wB,kFAmBAslB,EAAWC,EAAWC,GAAU,IACvCpb,EAASjK,KAAKokB,MAAdna,MAEHmb,EAAUnb,MAAQA,GACnBjK,KAAKq+D,6DAqBT/tC,KAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,KAAY5O,GAAG,4BAA6B1hB,KAAKg/D,6BACjD1uC,KAAY5O,GAAG,mCAAoC1hB,KAAK8+D,oCACxDxuC,KAAY5O,GAAG,kCAAmC1hB,KAAKy+D,kFAIvDnuC,KAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,KAAYtuB,eAAe,4BAA6BhC,KAAKg/D,6BAC7D1uC,KAAYtuB,eAAe,mCAAoChC,KAAK8+D,oCACpExuC,KAAYtuB,eAAe,kCAAmChC,KAAKy+D,oEA8G9D,IAAAh0D,EAAAzK,KACG2gB,EAAY3gB,KAAKwf,MAAjBmB,QADHqkB,EAGsBhlC,KAAKokB,MAAxBna,EAHH+6B,EAGG/6B,KAAMymB,EAHTsU,EAGStU,SACd,IAAKzmB,EAAM,OAAO,KAClB,IAAKymB,EAAU,OAAO,KALjB,IAOGhjB,EAAagjB,EAAbhjB,SACR,OAAKA,EACDA,EAAS1H,QAAU,EAAU,MAEjChG,KAAKs+D,WAAWl/C,QAGZU,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQgC,KAAMhC,EAAQ8F,cACjE3G,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAKq/C,QACVt/B,UAAU,iBACV48C,aAAc38D,KAAK87D,iBACnBc,aAAc58D,KAAKg8D,iBACnBvb,SAAUzgD,KAAKo/C,cACd1uB,EAAShjB,SACL2xD,MAAM,GACNC,UACA3xD,IAAI,SAAA/B,GAAC,OACFkU,EAAAtf,EAAAqM,cAAA,OAAK4K,IAAK7L,EAAElJ,GAAIo5B,IAAK,SAAAqV,GAAE,OAAI1mC,EAAK6zD,WAAWr9D,IAAI2K,EAAElJ,GAAIyuC,IAAKpxB,UAAU,iBAC/DuM,aAAS1gB,EAAG,kBAAM6T,aAAU7T,EAAExF,QAASwF,EAAElJ,aAnBhD,YA7KPwd,IAAMC,YA0MdgB,OAjNA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB6iB,KAAM,CACF0S,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,YAEhFjO,YAAYlG,KA6MJD,CAAmBi9C,ICvL5BmB,uBACF,SAAAA,EAAY//C,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAu/D,IACf1/D,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAy/D,GAAAp/D,KAAAH,KAAMwf,KA6EVu+C,gCAAkC,SAAAp9D,GAAU,IAChCuwB,EAAiBvwB,EAAjBuwB,aAEF6B,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELA,EAAO7B,aAAeA,IApFPrxB,EAuFnB67D,0BAA4B,SAAA/6D,GAAU,IAC1BmwB,EAAWnwB,EAAXmwB,OAEFiC,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELA,EAAOjC,OAASA,IA7FDjxB,EAgGnBihC,iCAAmC,SAAAngC,GAC/Bd,EAAK2/D,mBAAqBpiD,QAAQ7E,IAAiBwoB,qBAjGpClhC,EAoGnB4/D,+BAAiC,SAAA9+D,GAC7Bd,EAAK2/D,oBAAqB,GArGX3/D,EAwGnB6/D,+BAAiC,SAAA/+D,GAC7Bd,EAAK2/D,oBAAqB,GAzGX3/D,EA4GnB8/D,8BAAgC,SAAAh/D,GAC5Bd,EAAK2/D,oBAAqB,EAE1B,IAAMzsC,EAASlzB,EAAKwgC,SAASzS,QACxBmF,GAELA,EAAO4N,SAlHQ9gC,EAqHnB+/D,iBAAmB,SAAC1+D,EAAMoD,GAAY,IAC1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB7C,EAAK6kB,SACD,CACI/C,IAAK9hB,EAAKggE,YAAYv7D,IAE1B,WACI,IAAMyuB,EAASlzB,EAAKwgC,SAASzS,QACzBmF,GACIlzB,EAAK2/D,qBACLzsC,EAAO4N,QAEP9+B,IAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQZ,EACRa,UAAWvE,QArIhB7C,EA6InBigE,wBAA0B,SAAAn/D,GAAU,IACxBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UACR3C,EAAYzE,EAAKukB,MAAjB9f,QAER,GAAKA,EAAL,CAJgC,IAMxB8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,GAAKA,GACDyC,IAAWZ,GAAWa,IAAcvE,EAExC,OAAQ6B,EAAQ,UACZ,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAE3B,GAAIb,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAK+/D,iBAAiB1+D,EAAMoD,GAIpC,GAAIkB,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAK+/D,iBAAiBv4D,EAAO/C,GAIrC,GAAIiB,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAK+/D,iBAAiBt6D,EAAOhB,IAKzC,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAK+/D,iBAAiB1+D,EAAMoD,GAIpC,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WACR,GAAIA,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAK+/D,iBAAiBv4D,EAAO/C,GAIrC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WACR,GAAIA,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAK+/D,iBAAiBt6D,EAAOhB,OAhN9BzE,EAyNnBm/D,4BAA8B,SAAAr+D,GAAU,IAC5B+vB,EAAa/vB,EAAb+vB,SACA1pB,EAAsB0pB,EAAtB1pB,OAAQC,EAAcypB,EAAdzpB,UACR3C,EAAYzE,EAAKukB,MAAjB9f,QAEJA,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxDpH,EAAK6kB,SAAS,CAAEgM,SAAUA,KA/Nf7wB,EAmOnBkgE,yBAA2B,SAAAp/D,GACvBd,EAAK6kB,SAAS,CACVpgB,QAAS,KACTosB,SAAU,KACVS,SAAS,EACTxP,IAAK,QAxOM9hB,EA4OnBwkC,0BAA4B,SAAA1jC,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UADkBkd,EAETtkB,EAAKukB,MAAtB9f,EAF0B6f,EAE1B7f,QAASqd,EAFiBwC,EAEjBxC,IAEjB,GAAIrd,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxD,GAAI0a,EAAK,CACL,IAAMoR,EAASlzB,EAAKwgC,SAASzS,QACzBmF,IACIA,EAAOitC,OACPjtC,EAAO2N,OAEP3N,EAAO4N,cAIhB,CACH,IAAMhf,EAAM9hB,EAAKggE,YAAYvvC,KAAYhsB,SACnC6sB,EAAU/T,QAAQuE,GACP2O,KAAYI,SAC7B7wB,EAAK6kB,SACD,CACIpgB,QAASgsB,KAAYhsB,QACrBosB,SAAUJ,KAAYI,SACtBS,QAASA,EACTxP,IAAKA,GAET,WACI,IAAMoR,EAASlzB,EAAKwgC,SAASzS,QACzBmF,IACAA,EAAOvB,YAAc3xB,EAAKwkB,UACtBxkB,EAAK2/D,oBACLzsC,EAAO4N,aA3QZ9gC,EAqRnBogE,WAAa,WACTp+D,IAAgBgH,aAAa,CACzBC,QAAS,2BAvREjJ,EA2RnBqgE,WAAa,WAAM,IACP57D,EAAYzE,EAAKukB,MAAjB9f,QACHA,GAELzC,IAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,MAlSR7C,EAsSnBsgE,WAAa,WACTt+D,IAAgBgH,aAAa,CACzBC,QAAS,2BAxSEjJ,EA4SnBggE,YAAc,SAAAv7D,GACV,GAAIA,EAAS,KACDC,EAAYD,EAAZC,QACR,GAAIA,EAAS,KACDG,EAA4CH,EAA5CG,MAAOc,EAAqCjB,EAArCiB,WAAYD,EAAyBhB,EAAzBgB,WAAYF,EAAad,EAAbc,SAEvC,GAAIX,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACnB,GAAIxD,EACA,OAAOqT,YAAOrT,GAItB,GAAIsE,EAAY,KACJ6B,EAAU7B,EAAV6B,MACR,GAAIA,EACA,OAAOkN,YAAOlN,GAItB,GAAI9B,EAAY,KACJD,EAAUC,EAAVD,MACR,GAAIA,EACA,OAAOiP,YAAOjP,GAItB,GAAID,EAAU,CACV,GAAIA,EAASX,MAAO,CAChB,IAAMxD,EAAOmE,EAASX,MAAMA,MAC5B,GAAIxD,EACA,OAAOqT,YAAOrT,GAItB,GAAImE,EAASG,WAAY,KACb6B,EAAUhC,EAASG,WAAnB6B,MACR,GAAIA,EACA,OAAOkN,YAAOlN,GAItB,GAAIhC,EAASE,WAAY,KACbD,EAAUD,EAASE,WAAnBD,MACR,GAAIA,EACA,OAAOiP,YAAOjP,MAOlC,MAAO,IAhWQzF,EAmWnBugE,YAAc,WAAqB,IAApB9uC,IAAoB5vB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,KAAAA,UAAA,GACvB4C,EAAYzE,EAAKukB,MAAjB9f,QACHA,IAELzC,IAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB4uB,SAAUA,IAGdzxB,EAAK6kB,SACD,GAKA,WACI7iB,IAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB4uB,SAAUA,QAzXPzxB,EA+XnBwgE,iBAAmB,WACfxgE,EAAKugE,aAAY,IAhYFvgE,EAmYnB4wC,YAAc,WACV,IAAM1d,EAASlzB,EAAKwgC,SAASzS,QACzBmF,GACAA,EAAO4N,QAGX9gC,EAAKugE,aAAY,IAzYFvgE,EA4YnBygE,iBAAmB,WAAM,IACbh8D,EAAYzE,EAAKukB,MAAjB9f,QACR,GAAKA,EAAL,CAEA,IAAMyuB,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELlzB,EAAK6kB,SAAS,CACV8M,YAAauB,EAAOvB,YACpB2T,kBAAmBD,aAAkBtgB,KAAKC,MAAMkO,EAAOvB,aAAe,MAG1E3vB,IAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB6uB,SAAUwB,EAAOxB,SACjBC,YAAauB,EAAOvB,YACpBC,UAAW7Y,KAAKI,WA9ZLnZ,EAkanBkmC,cAAgB,WAAM,IACVzhC,EAAYzE,EAAKukB,MAAjB9f,QACR,GAAKA,EAAL,CAEA,IAAMyuB,EAASlzB,EAAKwgC,SAASzS,QAC7B,GAAKmF,EAAL,CALkB,IAOV7B,EAAyBZ,KAAzBY,aAAcJ,EAAWR,KAAXQ,OAEd1qB,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACXgC,EAAQiqB,aAASvoB,EAAS1D,GAMhC,GAJAqwB,EAAO7B,aAAexsB,EAAQmuB,IAA6B3B,EAC3D6B,EAAOjC,OAASA,EAChBiC,EAAO0O,OAAQ,GAEX/8B,EAAJ,CAIA,IAAIgtB,EAAS,KACT,kBAAmBqB,EACnBrB,EAASqB,EAAOwtC,gBACT,qBAAsBxtC,IAC7BrB,EAASqB,EAAOytC,oBAGf9uC,GAIL7vB,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBgvB,OAAQA,QArcG7xB,EAycnB4gE,gBAAkB,WAAM,IACZn8D,EAAYzE,EAAKukB,MAAjB9f,QACR,GAAKA,EAAL,CAEAzE,EAAK6kB,SAAS,CACVyM,SAAS,IAGb,IAAM4B,EAASlzB,EAAKwgC,SAASzS,QACxBmF,GAELlxB,IAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB8uB,YAAauB,EAAOvB,YACpBD,SAAUwB,EAAOxB,SACjBE,UAAW7Y,KAAKI,UA1dLnZ,EA8dnB6gE,iBAAmB,WAAM,IACbp8D,EAAYzE,EAAKukB,MAAjB9f,QACHA,IAELzE,EAAK6kB,SAAS,CACVyM,SAAS,IAGEtxB,EAAKwgC,SAASzS,SAG7B/rB,IAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,OA5eR7C,EAgfnBm+D,mBAAqB,WAAM,IAGjBC,EAFmBp+D,EAAKukB,MAAtB8M,eAGa2B,IAA6BqrC,IAA2BrrC,IAE7EhzB,EAAK6kB,SACD,CACIwM,aAAc+sC,GAElB,WACI,IAAMlrC,EAASlzB,EAAKwgC,SAASzS,QACxBmF,IAELA,EAAO7B,aAAe+sC,KAI9Bp8D,IAAgBgH,aAAa,CACzBC,QAAS,gCACTooB,aAAc+sC,KApgBHp+D,EAwgBnB8gE,QAAU,SAACr8D,EAASosB,GAChB,IAAKpsB,EAAS,OAAO,EACrB,IAAKosB,IAAaA,EAAShjB,SAAS1H,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXgQ,EAAQge,EAAShjB,SAASkkB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExF,UAAYA,GAAWwF,EAAElJ,KAAOA,IACjF,OAAe,IAAXgQ,GAEGA,EAAQ,EAAIge,EAAShjB,SAAS1H,QAjhBtBnG,EAohBnB+gE,QAAU,SAACt8D,EAASosB,GAChB,IAAKpsB,EAAS,OAAO,EACrB,IAAKosB,IAAaA,EAAShjB,SAAS1H,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXgQ,EAAQge,EAAShjB,SAASkkB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExF,UAAYA,GAAWwF,EAAElJ,KAAOA,IACjF,OAAe,IAAXgQ,GAEGA,EAAQ,GAAK,GA7hBL7S,EAgiBnBghE,sBAAwB,WACpBh/D,IAAgBgH,aAAa,CACzBC,QAAS,kCACT41D,MAAM,KAniBK7+D,EAuiBnBihE,sBAAwB,WACpBj/D,IAAgBgH,aAAa,CACzBC,QAAS,kCACT41D,MAAM,KA1iBK7+D,EA8iBnBkhE,iBAAmB,WAAM,IACbz8D,EAAYzE,EAAKukB,MAAjB9f,QACHA,GAEL0uB,aAAS1uB,EAAQ8B,QAAS9B,EAAQ5B,KA/iBlC7C,EAAKwgC,SAAWngB,IAAMqb,YAHP,IAKPj3B,EAAsBgsB,KAAtBhsB,QAASosB,EAAaJ,KAAbI,SALF,OAOf7wB,EAAKwkB,UAAY28C,IAEjBnhE,EAAKukB,MAAQ,CACToN,YAAa,EACb2T,kBAAmBD,aAAkB,GACrC5gC,QAASA,EACTosB,SAAUA,EACVS,SAAS,EACTxP,IAAK9hB,EAAKggE,YAAYv7D,IAfXzE,qFAmBGklB,EAAWC,EAAWC,GAAa,IAC7C7D,EAAUphB,KAAKwf,MAAf4B,MAD6C2hB,EAET/iC,KAAKokB,MAAzC9f,EAF6Cy+B,EAE7Cz+B,QAASosB,EAFoCqS,EAEpCrS,SAAU/O,EAF0BohB,EAE1BphB,IAAKwP,EAFqB4R,EAErB5R,QAEhC,OAAIpM,EAAU3D,QAAUA,IAIpB4D,EAAU1gB,UAAYA,IAItB0gB,EAAU0L,WAAaA,IAIvB1L,EAAUrD,MAAQA,GAIlBqD,EAAUmM,UAAYA,iDAQ1BvxB,IAAU8hB,GAAG,4BAA6B1hB,KAAK8/D,yBAC/ClgE,IAAU8hB,GAAG,4BAA6B1hB,KAAK8/D,yBAC/ClgE,IAAU8hB,GAAG,wBAAyB1hB,KAAK8/D,yBAC3CxvC,KAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,KAAY5O,GAAG,yBAA0B1hB,KAAK+/D,0BAC9CzvC,KAAY5O,GAAG,4BAA6B1hB,KAAKg/D,6BACjD1uC,KAAY5O,GAAG,8BAA+B1hB,KAAK2/D,+BACnDrvC,KAAY5O,GAAG,+BAAgC1hB,KAAK0/D,gCACpDpvC,KAAY5O,GAAG,+BAAgC1hB,KAAKy/D,gCACpDnvC,KAAY5O,GAAG,0BAA2B1hB,KAAK07D,2BAC/CprC,KAAY5O,GAAG,gCAAiC1hB,KAAK+9D,iCAErDxlD,IAAiBmJ,GAAG,iCAAkC1hB,KAAK8gC,iFAI3DlhC,IAAUoC,eAAe,4BAA6BhC,KAAK8/D,yBAC3DlgE,IAAUoC,eAAe,4BAA6BhC,KAAK8/D,yBAC3DlgE,IAAUoC,eAAe,wBAAyBhC,KAAK8/D,yBACvDxvC,KAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,KAAYtuB,eAAe,yBAA0BhC,KAAK+/D,0BAC1DzvC,KAAYtuB,eAAe,4BAA6BhC,KAAKg/D,6BAC7D1uC,KAAYtuB,eAAe,8BAA+BhC,KAAK2/D,+BAC/DrvC,KAAYtuB,eAAe,+BAAgChC,KAAK0/D,gCAChEpvC,KAAYtuB,eAAe,+BAAgChC,KAAKy/D,gCAChEnvC,KAAYtuB,eAAe,0BAA2BhC,KAAK07D,2BAC3DprC,KAAYtuB,eAAe,gCAAiChC,KAAK+9D,iCAEjExlD,IAAiBvW,eAAe,iCAAkChC,KAAK8gC,mEA0elE,IACGngB,EAAY3gB,KAAKwf,MAAjBmB,QADHqkB,EAEuChlC,KAAKokB,MAAzC+M,EAFH6T,EAEG7T,QAAS7sB,EAFZ0gC,EAEY1gC,QAASosB,EAFrBsU,EAEqBtU,SAAU/O,EAF/BqjB,EAE+BrjB,IAEhCjd,GAAQ,EACZ,GAAIJ,EAAS,KACD8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACjBgC,EAAQiqB,aAASvoB,EAAS1D,GAG9B,IAAMqY,EAAQwT,aAAcjqB,GACtB28D,EAAW50C,aAAY/nB,GACvBqU,EAAOS,aAAQ9U,GACf48D,GAAYx8D,EACZy8D,GAAoBz8D,EACpB08D,EAAa18D,EACb28D,EAAc38D,EACdi8D,EAAU3gE,KAAK2gE,QAAQr8D,EAASosB,GAChCkwC,EAAU5gE,KAAK4gE,QAAQt8D,EAASosB,GAEtC,OACI5Q,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,SACIkT,UAAU,sBACV+b,IAAK97B,KAAKqgC,SACV1e,IAAKA,EACL+f,UAAU,EACV4/B,UAAU,EACV3xD,MAAO,GACPE,OAAQ,GACRw2B,UAAWrmC,KAAK+lC,cAChBw7B,OAAQvhE,KAAKygE,gBACbe,QAASxhE,KAAK0gE,iBACde,aAAczhE,KAAKsgE,iBACnBoB,QAAS1hE,KAAKqgE,mBAEjB/7D,GACGwb,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,kBAC5C3G,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIwpC,UAAW22B,EACX5gD,UAAWY,EAAQ8oB,WACnBtnB,MAAM,UACNlC,QAASjgB,KAAKigE,YACdngD,EAAAtf,EAAAqM,cAAC80D,GAAAnhE,EAAD,CAAkB0hB,SAAS,WAE/BpC,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WACnBtnB,MAAM,UACN6nB,UAAWroB,EACX1B,QAASjgB,KAAKkgE,YACb/uC,EAAUrR,EAAAtf,EAAAqM,cAACy0C,GAAA9gD,EAAD,MAAgBsf,EAAAtf,EAAAqM,cAAC00C,GAAA/gD,EAAD,OAE/Bsf,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIwpC,UAAW42B,EACX7gD,UAAWY,EAAQ8oB,WACnBtnB,MAAM,UACNlC,QAASjgB,KAAKmgE,YACdrgD,EAAAtf,EAAAqM,cAAC+0D,GAAAphE,EAAD,CAAc0hB,SAAS,WAE3BpC,EAAAtf,EAAAqM,cAACg1D,GAAD,MACA/hD,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,wBACV48C,aAAc38D,KAAK6gE,sBACnBjE,aAAc58D,KAAK8gE,sBACnB7gD,QAASjgB,KAAK+gE,kBACdjhD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACVhF,EACAmmD,GACGphD,EAAAtf,EAAAqM,cAAA,QAAMkO,MAAOkmD,GAAb,OAEKtoD,IAVjB,OAeImH,EAAAtf,EAAAqM,cAACi1D,GAAD,OAEJhiD,EAAAtf,EAAAqM,cAACk1D,GAAD,MACCZ,GAAoBrhD,EAAAtf,EAAAqM,cAACm1D,GAAD,MACpBZ,GAActhD,EAAAtf,EAAAqM,cAACo1D,GAAD,MACdZ,GAAevhD,EAAAtf,EAAAqM,cAACq1D,GAAD,MAChBpiD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYxpB,QAASjgB,KAAKywC,aACrD3wB,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,CAAW0hB,SAAS,oBAxoBrBhC,IAAMC,YAspBlB4G,GALCC,YACZQ,cACArG,IA1pBW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB2pC,WAAY,CACRjmB,QAAS,IAEV8D,YAAYlG,KAspBI,CAAEmG,WAAW,IAGrBR,CAAQw4C,ICtkBR4C,uBA7GX,SAAAA,EAAY3iD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAmiE,IACftiE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAqiE,GAAAhiE,KAAAH,KAAMwf,KAeV4iD,uBAAyB,SAAAzhE,GACrBd,EAAK6kB,SAAS,CAAE62C,SAAUhjD,IAAiB8pD,iBAjB5BxiE,EAoBnByiE,gBAAkB,SAAA92D,GACdA,EAAMod,iBACNpd,EAAMqa,mBAtBShmB,EAyBnB0iE,WAAa,SAAA/2D,GACTA,EAAMod,iBACNpd,EAAMqa,kBACNtN,IAAiBiqD,aAAY,GAE7B3iE,EAAKq3C,6BAA6B1rC,EAAMi3D,aAAa5rB,QA9BtCh3C,EAiCnB6iE,gBAAkB,SAAAl3D,GACdA,EAAMod,iBACNpd,EAAMqa,kBACNtN,IAAiBiqD,aAAY,IApCd3iE,EAuCnBq3C,6BAA+B,SAAAL,GAC3B,GAAqB,IAAjBA,EAAM7wC,OAEV,IAAK,IAAIF,EAAI,EAAGA,EAAI+wC,EAAM7wC,OAAQF,IAAK,CACnC,IAAI5E,EAAO21C,EAAM/wC,GACXvB,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiBwuC,KAAMp2C,EAAKo2C,KAAMnsC,KAAMjK,IAGjErB,EAAK2zC,eAAejvC,EAAS,SAAA4F,GAAM,OAAIvK,IAAU+3C,WAAWxtC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OAjDtFtK,EAqDnB2zC,eArDmB,eAAAnzC,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAqDF,SAAAC,EAAO6D,EAAS8E,GAAhB,IAAAqqC,EAAAvpC,EAAA,OAAAolB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP2yC,EAAgBn7B,IAAiBwT,YAD1B,CAAAlrB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAOTyX,IAAiB8/B,sBAAjB,mCAAAntC,OAA0EwoC,IAPjE7yC,EAAAE,KAAA,EASUc,IAAgBkJ,KAAK,CACpCjC,QAAS,cACT1C,QAASstC,EACTniC,oBAAqB,EACrB+mC,sBAAuB/zC,IAblB,OASL4F,EATKtJ,EAAAoK,KAkBTpJ,IAAgBkJ,KAAK,CACjBjC,QAAS,eACT1C,QAASstC,EACT3nC,YAAa,CAAC5B,EAAOzH,MAGzB2G,EAASc,GAxBAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SA0BT23C,MAAM,qBAAuBC,KAAKC,UAAL73C,EAAAG,KA1BpB,yBAAAH,EAAAU,SAAAb,EAAA,kBArDE,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKukB,MAAQ,CACTm3C,SAAUhjD,IAAiB8pD,eAJhBxiE,mFASf0Y,IAAiBmJ,GAAG,uBAAwB1hB,KAAKoiE,uEAIjD7pD,IAAiBvW,eAAe,uBAAwBhC,KAAKoiE,yDAsExD,IACG7G,EAAav7D,KAAKokB,MAAlBm3C,SAER,OACIz7C,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKg2C,GACGz7C,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,oBACV4iD,YAAa3iE,KAAKsiE,gBAClBM,YAAa5iE,KAAK0iE,gBAClBG,OAAQ7iE,KAAKuiE,YACbziD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,2BAAf,mBACAD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,8BAAf,+CAlGFG,IAAMC,kDCoDpC,IAwBM2iD,8MACF1+C,MAAQ,CACJ2+C,SAAU,QAGdC,eAAiB,SAAA14B,GACbzqC,EAAK6kB,SAAS,CACVq+C,SAAUz4B,OAIlB24B,YAAc,SAAAz3D,GACVA,EAAMqa,kBADa,IAGXqH,EAAgBrtB,EAAK2f,MAArB0N,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrB7b,EAAmB6b,EAAnB7b,eAERse,aAASte,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxBlL,EAAwB+mB,EAAxB/mB,QAASkY,EAAe6O,EAAf7O,WAEjB0U,aAAS5sB,EAASkY,GAAY,6EAMjC,IAAAiB,EAC+Bvf,KAAKwf,MAAjChI,EADH+H,EACG/H,EAAGmJ,EADNpB,EACMoB,QAASuM,EADf3N,EACe2N,YACZ61C,EAAa/iE,KAAKokB,MAAlB2+C,SAEFhoD,EAAQqS,aAAgBF,EAAa1V,GACrC0rD,EAAUj2C,aAAsBC,GAClCpN,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACK/N,EAAE,cACHsI,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAWY,EAAQwiD,MAAOrnC,IAAK97B,KAAKgjE,kBAG9C,GAGJ,OACIljD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQyiD,aAAc,YAAnE,GAAAl4D,OACQsM,EAAE,oBADV,MAAAtM,OACkCsM,EAAE,QADpC,KAEIsI,EAAAtf,EAAAqM,cAACw2D,GAAA7iE,EAAD,CACIua,MAAOmoD,EACPviD,QAAS,CAAE2iD,OAAQ3iD,EAAQ4iD,YAAaL,QAASviD,EAAQuiD,SACzDM,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAASvmD,QAAQ2lD,GACjB/uB,QAAS+uB,MAKzBa,UAAU,OACV9jD,EAAAtf,EAAAqM,cAAA,KAAGoT,QAASjgB,KAAKijE,aAAcloD,YArE7BmF,IAAMC,WAqFb4G,GALCC,YACZ7F,IAzGW,SAAAC,GAAK,MAAK,CACrBgiD,aAAc,CACVjhD,MAAOf,EAAMkU,QAAQ4K,QAAQC,MAEjCojC,aAnDoBphD,EAmDQf,EAAMkU,QAAQ2mB,KAAK,KAlDxC,CACH4nB,kCAAmC,CAC/BxgD,IAAK,EACLC,KAAM,EACNw5C,UAAW,UACXntD,MAAO,MACPE,OAAQ,MACRi0D,YAAa,CACT/G,YAAa,gBACbt2C,YAAW,2BAAAvb,OAA6BiX,EAA7B,kBAGnB4hD,+BAAgC,CAC5B38C,OAAQ,EACR9D,KAAM,EACN0gD,aAAc,UACdr0D,MAAO,MACPE,OAAQ,MACRi0D,YAAa,CACT/G,YAAa,gBACbt2C,YAAW,GAAAvb,OAAKiX,EAAL,0CAGnB8hD,iCAAkC,CAC9B3gD,KAAM,EACN4gD,WAAY,UACZr0D,OAAQ,MACRF,MAAO,MACPm0D,YAAa,CACT/G,YAAa,gBACbt2C,YAAW,eAAAvb,OAAiBiX,EAAjB,8BAGnBgiD,gCAAiC,CAC7Bh9C,MAAO,EACPi9C,YAAa,UACbv0D,OAAQ,MACRF,MAAO,MACPm0D,YAAa,CACT/G,YAAa,gBACbt2C,YAAW,uCAAAvb,OAAyCiX,OAWhEghD,MAAO,CACH//C,SAAU,WACVlB,SAAU,EACVvS,MAAO,MACPE,OAAQ,MACRi0D,YAAa,CACTv/D,QAAS,KACT2iB,OAAQ,OACRna,QAAS,QACT4C,MAAO,EACPE,OAAQ,EACRyX,YAAa,UAGrB47C,QAAS,CACLh8C,OAAQ,iBAnEhB,IAAwB/E,GAwJD,CAAEoF,WAAW,IAChCC,cAGWT,CAAQ+7C,ICzGRuB,uBAvDX,SAAAA,EAAY7kD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAqkE,IACfxkE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAukE,GAAAlkE,KAAAH,KAAMwf,KACD8kD,wBAA0BzkE,EAAKykE,wBAAwBrxB,KAA7BnzC,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,KAC/BA,EAAK0kE,2BAA6B1kE,EAAK0kE,2BAA2BtxB,KAAhCnzC,OAAAuxD,GAAA,EAAAvxD,QAAAuxD,GAAA,EAAAvxD,CAAAD,KAElCA,EAAKukB,MAAQ,CACTogD,aAAchlD,EAAMglD,aACpBC,QAAQ,GAPG5kE,mFAYf+N,IAAa8T,GAAG,0BAA2B1hB,KAAKskE,yBAChD12D,IAAa8T,GAAG,6BAA8B1hB,KAAKskE,yBAEnDvxD,KAAU2O,GAAG,uBAAwB1hB,KAAKukE,4EAGtBG,GAChB1kE,KAAKwf,MAAMvY,YAAcy9D,EAAQ5lD,gBAAkB4lD,EAAQpgE,UAC3DtE,KAAK2kE,aAAeD,EAAQpgE,QAAQ5B,GACpC1C,KAAK0kB,SAAS,CAAE8/C,aAAcE,EAAQpgE,QAAQya,oEAI3B2lD,GAEnB1kE,KAAKwf,MAAMxY,SAAW09D,EAAQt+D,UAC5BpG,KAAKwf,MAAMmlD,cAAgB3kE,KAAKwf,MAAMmlD,cAAgBD,EAAQ7sD,6BAC5D7X,KAAKwf,MAAMvY,WAAay9D,EAAQ7sD,8BAEpC7X,KAAK0kB,SAAS,CAAE8/C,aAAc,KAAMC,QAAQ,mDAKhD72D,IAAa5L,eAAe,0BAA2BhC,KAAKskE,yBAC5D12D,IAAa5L,eAAe,6BAA8BhC,KAAKskE,yBAE/DvxD,KAAU/Q,eAAe,uBAAwBhC,KAAKukE,6DAItD,IAAIK,EAAiB,yBAQrB,OAPI5kE,KAAKokB,MAAMogD,eACXI,EACyC,8BAArC5kE,KAAKokB,MAAMogD,aAAa,SAClB,uBACA,yBAGPxkE,KAAKokB,MAAMqgD,QAAU3kD,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAWe,IAAW,qBAAsB8jD,YApDvD1kD,IAAMC,6BCYnBgB,WAbA,SAAAC,GAAK,MAAK,CACrByjD,gBAAiB,CACbxvC,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQ2mB,KAAK,KAAO,UACtE95B,MAA8B,SAAvBf,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQzX,KAAKqiB,QAAU,aAU7D/e,CANf,SAAyB3B,GAAO,IACpBmB,EAAYnB,EAAZmB,QAER,OAAOb,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQkkD,kBAAvD,qGCQLC,sNACFptD,WAAa,WAAM,IAAA6H,EACwE1f,EAAK2f,MAApFmB,EADOpB,EACPoB,QAAS3Z,EADFuY,EACEvY,OAAQC,EADVsY,EACUtY,UAAWmF,EADrBmT,EACqBnT,KAAmB24D,GADxCxlD,EAC2Bc,YAD3Bd,EACwCwlD,kBAAkBtlD,EAD1DF,EAC0DE,UAEnEnb,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAJN,IAMPC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPN,IASPc,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,KAVP,IAaX2/D,EAaA3/D,EAbA2/D,UACAjqD,EAYA1V,EAZA0V,MACAa,EAWAvW,EAXAuW,YAEAhX,GASAS,EAVAoD,IAUApD,EATAT,OACAJ,EAQAa,EARAb,UACAc,EAOAD,EAPAC,MACAZ,EAMAW,EANAX,MACAI,EAKAO,EALAP,SACAU,EAIAH,EAJAG,WACAD,EAGAF,EAHAE,WACAH,EAEAC,EAFAD,QACA2M,EACA1M,EADA0M,KAGJ,GAAI3M,EACA,OACI0a,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAAC+f,GAAA,EAAD,CAAS5lB,OAAQA,EAAQC,UAAWA,EAAW7B,QAASA,EAASqa,UAAWA,KAKxF,GAAIja,EACA,OACIsa,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAACmgB,GAAA,EAAD,CAAWhmB,OAAQA,EAAQC,UAAWA,EAAWG,UAAW5B,EAAYia,UAAWA,KAK/F,GAAIla,EACA,OACIua,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAACkgB,GAAA,EAAD,CAAW/lB,OAAQA,EAAQC,UAAWA,EAAWM,UAAWhC,EAAYka,UAAWA,KAK/F,GAAI/a,EACA,OACIob,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAAC0f,GAAA,EAAD,CAAOvlB,OAAQA,EAAQC,UAAWA,EAAWvC,MAAOA,EAAO+a,UAAWA,KAKlF,GAAI3a,EACA,OACIgb,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAAC4f,GAAA,EAAD,CAAUzlB,OAAQA,EAAQC,UAAWA,EAAWnC,SAAUA,EAAU2a,UAAWA,KAK3F,GAAIjb,IACqB+P,YAAO/P,EAAUA,YAClBA,EAAUiC,WAC1B,OACIqZ,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAACyT,GAAA,EAAD,CAAWtZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAWib,UAAWA,KAMlG,GAAIna,GACIA,EAAMmB,UACN,OACIqZ,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAtf,EAAAqM,cAACigB,GAAA,EAAD,CAAO9lB,OAAQA,EAAQC,UAAWA,EAAW3B,MAAOA,EAAOma,UAAWA,KAMtF,GAAI7a,EAAO,CACP,IAAMqB,EAAYiK,aAAQtL,EAAMmB,MAAOqG,GACjC64D,GACQ,YAATlzD,GAA+B,UAATA,KACtBizD,GAAajqD,GAASa,IACvB3V,GACAA,EAAU0J,QAAU1J,EAAU4J,OAE5B/C,EAAQm4D,EACR,CACIC,MAAO,QACPhB,WAAY,EACZF,aAAc,GAElB,GACN,OACIlkD,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACK0/C,GACGnlD,EAAAtf,EAAAqM,cAACs4D,GAAA,EAAD,CACI9kD,YAAa0kD,EACbj4D,MAAOA,EACP9F,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP6a,UAAWA,IAGlBulD,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,IACrDqpD,GAAcnlD,EAAAtf,EAAAqM,cAACs4D,GAAA,EAAD,CAAOn+D,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO6a,UAAWA,KAKlG,OACIK,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACKy/C,GACGllD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBgkD,GAE/EjqD,GAAS+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBAAwBnE,6EAK1D,IACG+E,EAAY3gB,KAAKwf,MAAjBmB,QAER,OACIb,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,YACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,kBAAmBH,EAAQI,yBACtDjB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBAAoB/f,KAAK0X,sBAnLlCwI,IAAMC,YAkM5B2kD,GAAQ7jD,aAAe,CACnB7U,KAAMgG,IACNiO,YAAaa,IACb6jD,iBAAkBK,KAGPjkD,WA5MA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,GACbwhB,YAAaF,KA2MLD,CAAmB2jD,IC/K5BO,uBACF,SAAAA,EAAY7lD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAqlE,IACfxlE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAulE,GAAAllE,KAAAH,KAAMwf,KA0EV8lD,6BAA+B,SAAA3kE,GACtBd,EAAKukB,MAAMlF,UAEhBrf,EAAK6kB,SAAS,CAAExF,UAAU,KA9EXrf,EAiFnB0lE,iCAAmC,SAAA5kE,GAAU,IAAA4e,EACX1f,EAAK2f,MAA3BxY,EADiCuY,EACjCvY,OAAQC,EADyBsY,EACzBtY,UADyBkd,EAEPtkB,EAAKukB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUsmD,EAFuBrhD,EAEvBqhD,YAEdtmD,IAEAlY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cu+D,EACA3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,GAAS,WAClCzqC,WAAW,WACPl7B,EAAK6kB,SAAS,CAAE8gD,aAAa,KAC9B,KAGP3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,IAE1BA,GACP3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,MAlGlB3lE,EAsGnB06D,8BAAgC,SAAA55D,GAAU,IAAA+f,EACR7gB,EAAK2f,MAA3BxY,EAD8B0Z,EAC9B1Z,OAAQC,EADsByZ,EACtBzZ,UACRiY,EAAave,EAAbue,SAEJlY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK6kB,SAAS,CAAExF,WAAUsmD,aAAa,KA3G5B3lE,EA+GnB4lE,sBAAwB,SAAA9kE,GAAU,IACtByF,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WADaiK,EAEA1oB,EAAK2f,MAA3BxY,EAFsBuhB,EAEtBvhB,OAAQC,EAFcshB,EAEdthB,UAEZD,IAAWZ,GAAWa,IAAcqX,GACpCze,EAAK4hB,eApHM5hB,EAwHnB6lE,qBAAuB,SAAA/kE,GAAU,IACrByF,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WADYyK,EAEClpB,EAAK2f,MAA3BxY,EAFqB+hB,EAErB/hB,OAAQC,EAFa8hB,EAEb9hB,UAEZD,IAAWZ,GAAWa,IAAcqX,GACpCze,EAAK4hB,eA7HM5hB,EAiInB8lE,uBAAyB,SAAAhlE,GAAU,IACvByF,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WADcgmB,EAEDzkC,EAAK2f,MAA3BxY,EAFuBs9B,EAEvBt9B,OAAQC,EAFeq9B,EAEfr9B,UAEhB,GAAID,IAAWZ,GACXa,IAAcqX,EAAlB,CAEA,IAAMha,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAR+B,IAUvBC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,cACD1E,EAAK4hB,kBAhJE5hB,EAsJnBosD,iBAAmB,SAAAhgD,GACf2jB,aAAS3jB,GAAQ,IAvJFpM,EA0JnB4qD,iBAAmB,SAAAzjD,GACfgsB,aAAShsB,GAAQ,IA3JFnH,EA8JnB+lE,gBAAkB,WACd,GAAK/lE,EAAKgmE,YAEQ97D,OAAOghC,eAAeuB,WACxC,CAJoB,IAAApG,EAMUrmC,EAAK2f,MAA3BxY,EANYk/B,EAMZl/B,OAAQC,EANIi/B,EAMJj/B,UAEViY,GAAYtR,IAAauR,cAAcrc,IAA3B,UAAAoI,OAAyClE,EAAzC,eAAAkE,OAA6DjE,IAC/EisB,aAAclsB,EAAQC,EAAWiY,KAvKlBrf,EA0KnBimE,gBAAkB,SAAA37C,GACdA,EAAEvB,iBACFuB,EAAEtE,kBAFiB,IAAAkgD,EAIWlmE,EAAK2f,MAA3BxY,EAJW++D,EAIX/+D,OAAQC,EAJG8+D,EAIH9+D,UAEV3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GAEpBwW,YAAgBzW,GAEjCnF,IAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQA,EACRC,UAAWA,IAKI3C,GAAWA,EAAQs/C,kBAEtC/hD,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,CACFj8C,OAAQA,EACRyG,WAAY,CAACxG,OAlMVpH,EAwMnB4f,UAAY,SAAAjU,GACJA,IACAA,EAAMod,iBACNpd,EAAMqa,mBAHO,IAAAmgD,EAManmE,EAAK2f,MAA3BxY,EANSg/D,EAMTh/D,OAAQC,EANC++D,EAMD/+D,UAEhBwY,aAAUzY,EAAQC,IAhNHpH,EAmNnBomE,mBAAqB,WACjBpmE,EAAK6kB,SAAS,CAAE8gD,aAAa,KApNd3lE,EAuNnBqmE,gBAAkB,WACdrmE,EAAKgmE,WAAY,GAxNFhmE,EA2NnBsmE,gBAAkB,WACdtmE,EAAKgmE,WAAY,GA5NFhmE,EA+NnBumE,eAAiB,WACbvmE,EAAKwmE,UAAW,GArNZxmE,EAAKukB,MAAQ,CACTlF,UAAU,EACVsmD,aAAa,GAbN3lE,qFAkBGklB,EAAWC,GAAW,IAAAshD,EACgCtmE,KAAKwf,MAArE4B,EADgCklD,EAChCllD,MAAOpa,EADyBs/D,EACzBt/D,OAAQC,EADiBq/D,EACjBr/D,UAAWu9D,EADM8B,EACN9B,aAAc+B,EADRD,EACQC,oBADRxjC,EAEO/iC,KAAKokB,MAA5CuD,EAFgCob,EAEhCpb,YAAazI,EAFmB6jB,EAEnB7jB,SAAUsmD,EAFSziC,EAETyiC,YAE/B,OAAIzgD,EAAU3D,QAAUA,IAIpB2D,EAAU/d,SAAWA,IAIrB+d,EAAU9d,YAAcA,IAIxB8d,EAAUy/C,eAAiBA,IAI3Bz/C,EAAUwhD,sBAAwBA,IAIlCvhD,EAAU2C,cAAgBA,IAI1B3C,EAAU9F,WAAaA,GAIvB8F,EAAUwgD,cAAgBA,oDAQ9B53D,IAAa8T,GAAG,iCAAkC1hB,KAAKulE,kCACvD33D,IAAa8T,GAAG,8BAA+B1hB,KAAKu6D,+BACpD3sD,IAAa8T,GAAG,6BAA8B1hB,KAAKslE,8BACnD13D,IAAa8T,GAAG,uBAAwB1hB,KAAK2lE,wBAC7C/3D,IAAa8T,GAAG,sBAAuB1hB,KAAKylE,uBAC5C73D,IAAa8T,GAAG,qBAAsB1hB,KAAK0lE,qEAI3C93D,IAAa5L,eAAe,iCAAkChC,KAAKulE,kCACnE33D,IAAa5L,eAAe,8BAA+BhC,KAAKu6D,+BAChE3sD,IAAa5L,eAAe,6BAA8BhC,KAAKslE,8BAC/D13D,IAAa5L,eAAe,uBAAwBhC,KAAK2lE,wBACzD/3D,IAAa5L,eAAe,sBAAuBhC,KAAKylE,uBACxD73D,IAAa5L,eAAe,qBAAsBhC,KAAK0lE,uDA2JlD,IAAAc,EAC0DxmE,KAAKwf,MAA5DhI,EADHgvD,EACGhvD,EAAGmJ,EADN6lD,EACM7lD,QAAS3Z,EADfw/D,EACex/D,OAAQC,EADvBu/D,EACuBv/D,UAAWs/D,EADlCC,EACkCD,oBADlCvhC,EAEqDhlC,KAAKokB,MAA/BlF,GAF3B8lB,EAEGrd,YAFHqd,EAEgB1hB,KAFhB0hB,EAEsB3hB,IAFtB2hB,EAE2B9lB,UAAUsmD,EAFrCxgC,EAEqCwgC,YAEpClhE,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOwb,EAAAtf,EAAAqM,cAAA,8BALhB,IAOGkS,EAAuEza,EAAvEya,cAAeN,EAAwDna,EAAxDma,MAAOD,EAAiDla,EAAjDka,UAAWjN,EAAsCjN,EAAtCiN,oBAAqBkd,EAAiBnqB,EAAjBmqB,aAExD5Q,EAAOqO,aAAQ5nB,GACfmiE,EAAUr6C,aAAW9nB,GACrBqU,EAAOS,aAAQ9U,GACf28D,EAAW50C,aAAY/nB,GACvBoiE,EAAQp6C,aAAShoB,EAAStE,KAAKyf,WACrCzf,KAAKykE,OAASl3C,aAAUjpB,GACxB,IAAMqiE,EAAen5C,aAAgBlpB,GAE/Bs3C,EAAO+qB,EACT7mD,EAAAtf,EAAAqM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQ06D,EAAc1wC,SAAUj2B,KAAKisD,mBAEtDnsC,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQivB,SAAUj2B,KAAKyqD,mBAG9Cmc,EAAmB9lD,IACrB,UACAH,EAAQrc,QACR,CAAEuiE,mBAAoB3nD,GAHSpf,OAAA0mB,GAAA,EAAA1mB,CAAA,GAI5B6gB,EAAQmmD,gBAAkB5nD,GAJEpf,OAAA0mB,GAAA,EAAA1mB,CAAA,GAM5B6gB,EAAQomD,mBAAqBvB,IAAgBtmD,IAGpD,OACIY,EAAAtf,EAAAqM,cAAA,OACIkT,UAAW6mD,EACXI,YAAahnE,KAAKmmE,gBAClBc,WAAYjnE,KAAKomE,eACjB5+B,YAAaxnC,KAAKkmE,gBAClBjmD,QAASjgB,KAAK4lE,gBACdsB,eAAgBlnE,KAAKimE,oBACpBM,GAAuBzmD,EAAAtf,EAAAqM,cAACs6D,GAAD,MACxBrnD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,wBACZ/f,KAAKykE,QACF3kD,EAAAtf,EAAAqM,cAACu6D,GAAD,CAAepgE,OAAQA,EAAQC,UAAWA,EAAWu9D,aAAczlD,IAEtE68B,EACD97B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,mBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,kBACT0O,GAAgB3O,EAAAtf,EAAAqM,cAAC4wB,GAAA,EAAD,CAAez2B,OAAQA,EAAQgsB,UAAQ,EAAC/mB,OAAQ06D,EAAc/2C,UAAQ,IACvFnB,GAAgB3O,EAAAtf,EAAAqM,cAACw6D,GAAD,CAASn6C,YAAauB,IACvC3O,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBACXD,EAAAtf,EAAAqM,cAAA,oBACC4R,EAAQ,GACLqB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,uBACbD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,iBAAhB,OAEKtB,EAFL,cAOPD,EAAY,GAAKsB,EAAAtf,EAAAqM,cAAA,YAAO2K,EAAE,iBAAT,QAClBsI,EAAAtf,EAAAqM,cAAA,KAAGkT,UAAU,eAAeE,QAASjgB,KAAK8lE,iBACtChmD,EAAAtf,EAAAqM,cAAA,QAAMkO,MAAOkmD,GAAWtoD,MAInCyE,QAAQ7L,IAAwBuO,EAAAtf,EAAAqM,cAACw6B,GAAA,EAAD,CAAOrgC,OAAQA,EAAQC,UAAWsK,IAClEm1D,EACD5mD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBlC,GAC9B4oD,GAAW3mD,EAAAtf,EAAAqM,cAACy6D,GAAD,CAAStgE,OAAQA,EAAQC,UAAWA,EAAWwY,UAAWzf,KAAKyf,sBA5S7EU,cAyTP4G,GALCC,YACZ7F,IAxUW,SAAAC,GAAK,MAAK,CACrB9c,QAAS,CACL2iB,gBAAiB,eAErBsgD,mBAAoB,CAChBplD,MAAOf,EAAMkU,QAAQ4K,QAAQC,MAEjC2mC,gBAAiB,CACb7/C,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KAAO,MAElDqnC,yBAA0B,CACtBljD,KAAM,CAAE2C,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KAAO,MACtD5b,GAAI,CAAE0C,gBAAiB,gBAE3B8/C,mBAAoB,CAChBviE,UAAW,6BAyTI,CAAE+iB,WAAW,IAChCC,cAGWT,CAAQs+C,cC5UjBoC,uBACF,SAAAA,EAAYjoD,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAynE,IACf5nE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA2nE,GAAAtnE,KAAAH,KAAMwf,KA2CVkoD,0BAA4B,SAAA/mE,GAAU,IAC1ByF,EAA+BzF,EAA/ByF,QAASuhE,EAAsBhnE,EAAtBgnE,kBACE9nE,EAAK2f,MAAhBxY,SAEOZ,GAEfvG,EAAK6kB,SAAS,CAAEzd,UAAW0gE,KAlDZ9nE,EAqDnBy8C,YAAc,WAAM,IACRt1C,EAAWnH,EAAK2f,MAAhBxY,OACAC,EAAcpH,EAAKukB,MAAnBnd,UAEHD,IACAC,IAEW2G,IAAa3K,IAAI+D,EAAQC,IAGzCpF,IAAgBkJ,KAAK,CACjBjC,QAAS,aACT1C,QAASY,EACTsX,WAAYrX,IAEXoE,KAAK,SAAAlB,GACFyD,IAAa3M,IAAIkJ,GACjBtK,EAAK4hB,gBAER/X,MAAM,SAAA/F,GACH,IAAM0b,EAAiB,CACnBvW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbqJ,IAAa3M,IAAIoe,GACjBxf,EAAK4hB,mBAhFE5hB,EA2GnB8lB,YAAc,SAAAna,GAAS,IACXxE,EAAWnH,EAAK2f,MAAhBxY,OACAC,EAAcpH,EAAKukB,MAAnBnd,UAEHA,GAEL+rB,aAAShsB,EAAQC,IAjHFpH,EAoHnBisC,aAAe,SAAAtgC,GACXA,EAAMod,iBACNpd,EAAMqa,mBAnHN,IAAM9hB,EAAOgP,KAAU9P,IAAIuc,EAAMxY,QAHlB,OAIfnH,EAAKukB,MAAQ,CACTw7B,gBAAiBpgC,EAAMxY,OACvBC,UAAWlD,GAAQA,EAAK4jE,kBAAoB5jE,EAAK4jE,kBAAoB,GAN1D9nE,kFA0BAslB,EAAWC,EAAWC,GAAU,IACvCpe,EAAcjH,KAAKokB,MAAnBnd,UAEJA,GAAame,EAAUne,YAAcA,GACrCjH,KAAKs8C,0DAKTt8C,KAAKs8C,cAELvpC,KAAU2O,GAAG,0BAA2B1hB,KAAK0nE,0EAI7C30D,KAAU/Q,eAAe,0BAA2BhC,KAAK0nE,yEA2CvC3iD,EAAWC,EAAWC,GAAa,IAAA1F,EACxBvf,KAAKwf,MAA1BxY,EAD6CuY,EAC7CvY,OAAQwQ,EADqC+H,EACrC/H,EAAG4J,EADkC7B,EAClC6B,MACXna,EAAcjH,KAAKokB,MAAnBnd,UAER,OAAI8d,EAAUvN,IAAMA,IAIhBuN,EAAU3D,QAAUA,IAIpB2D,EAAU/d,SAAWA,GAIrBge,EAAU/d,YAAcA,qCAqBvB,IAAAyZ,EAC0B1gB,KAAKwf,MAA5BxY,EADH0Z,EACG1Z,OAAQ2Z,EADXD,EACWC,QAASnJ,EADpBkJ,EACoBlJ,EACjBvQ,EAAcjH,KAAKokB,MAAnBnd,UAEF3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GAEzC,IAAK3C,EAAS,OAAO,KAErB,IAAIC,EAAWD,EAAyBoT,aAAWpT,EAASkT,GAAnCA,EAAE,WACrBvR,EAAY+pB,aAAkBhpB,EAAQC,GAM5C,OAJI8oB,aAAiBzrB,KACjBC,EAAUiT,EAAE,mBAIZsI,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,iBAAkBH,EAAQgf,cAAehf,EAAQ8F,aACvExG,QAASjgB,KAAK2lB,aACd7F,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClD9a,GAAa6Z,EAAAtf,EAAAqM,cAAC86B,GAAA,EAAD,CAAW3gC,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1E6Z,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,sBAAuBH,EAAQK,kBACrDxJ,EAAE,kBAEPsI,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,0BAA0Bxb,IAE7Cub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CAAYuf,UAAWY,EAAQ8oB,WAAYxpB,QAASjgB,KAAK8rC,cACrDhsB,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,6DA7IQgf,EAAO4E,GAAO,IAClCw7B,EAAoBx7B,EAApBw7B,gBACA54C,EAAWwY,EAAXxY,OAER,GAAI44C,IAAoB54C,EAAQ,CAC5B,IAAMjD,EAAOgP,KAAU9P,IAAI+D,GAE3B,MAAO,CACH44C,gBAAiB54C,EACjBC,UAAWlD,GAAQA,EAAK4jE,kBAAoB5jE,EAAK4jE,kBAAoB,GAI7E,OAAO,YAxBaznD,IAAMC,YA0KnB4G,GALCC,YACZ7F,IAlLW,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,GACbwhB,YAAaF,GACbkG,YAAYlG,GAFC,CAGhBqoB,WAAY,GAGZ9J,cAAe,CACXtK,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,UAC/EpT,MAAOf,EAAMkU,QAAQzX,KAAKqiB,YA0KX,CAAE3Y,WAAW,IAChCC,cAGWT,CAAQ0gD,cC7LjBG,WAAiB,CACnBj4D,MAAO,GACPE,OAAQ,GACR2lB,aAAc,MACdtO,OAAQ,wBAaN2gD,eACF,SAAAA,EAAYroD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA6nE,IACfhoE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA+nE,GAAA1nE,KAAAH,KAAMwf,KAkDV+lD,iCAAmC,SAAA5kE,GAAU,IAAA4e,EACX1f,EAAK2f,MAA3BxY,EADiCuY,EACjCvY,OAAQC,EADyBsY,EACzBtY,UADyBkd,EAEPtkB,EAAKukB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUsmD,EAFuBrhD,EAEvBqhD,YAEdtmD,IAEAlY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cu+D,EACA3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,GAAS,WAClCzqC,WAAW,WACPl7B,EAAK6kB,SAAS,CAAE8gD,aAAa,KAC9B,KAGP3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,IAE1BA,GACP3lE,EAAK6kB,SAAS,CAAE8gD,aAAa,MApElB3lE,EAwEnBomE,mBAAqB,WACjBpmE,EAAK6kB,SAAS,CAAE8gD,aAAa,KAzEd3lE,EA4EnB4f,UAAY,SAAAjU,GACJA,IACAA,EAAMod,iBACNpd,EAAMqa,mBAHO,IAAAnF,EAMa7gB,EAAK2f,MAA3BxY,EANS0Z,EAMT1Z,OAAQC,EANCyZ,EAMDzZ,UAEhBwY,aAAUzY,EAAQC,IA1EdpH,EAAKukB,MAAQ,CACTohD,aAAa,GAXN3lE,qFAgBGklB,EAAWC,GAAW,IAAA+D,EACyB/oB,KAAKwf,MAA9DxY,EADgC+hB,EAChC/hB,OAAQC,EADwB8hB,EACxB9hB,UAAWu9D,EADaz7C,EACby7C,aAAc+B,EADDx9C,EACCw9C,oBACjCf,EAAgBxlE,KAAKokB,MAArBohD,YAER,OAAIzgD,EAAU/d,SAAWA,IAIrB+d,EAAU9d,YAAcA,IAIxB8d,EAAUy/C,eAAiBA,IAI3Bz/C,EAAUwhD,sBAAwBA,GAIlCvhD,EAAUwgD,cAAgBA,iDAQ9B53D,IAAa8T,GAAG,iCAAkC1hB,KAAKulE,iFAIvD33D,IAAa5L,eAAe,iCAAkChC,KAAKulE,mEAuC9D,IAAAjhC,EACuDtkC,KAAKwf,MAAzDmB,EADH2jB,EACG3jB,QAAS3Z,EADZs9B,EACYt9B,OAAQC,EADpBq9B,EACoBr9B,UAAWs/D,EAD/BjiC,EAC+BiiC,oBAC5Bf,EAAgBxlE,KAAKokB,MAArBohD,YAEFlhE,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOwb,EAAAtf,EAAAqM,cAAA,sCALhB,IAOGtI,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAOub,EAAAtf,EAAAqM,cAAA,sCARhB,IAUGjI,EAAUL,EAAVK,MAEFiZ,EAAOiQ,aAAyBxpB,GAAS,GAEzCsiE,EAAmB9lD,IAAW,kBAADhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAuB6gB,EAAQomD,mBAAqBvB,IAEvF,OACI1lD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAW6mD,EAAkBM,eAAgBlnE,KAAKimE,oBAClDM,GAAuBzmD,EAAAtf,EAAAqM,cAACs6D,GAAD,MACxBrnD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,2BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,2BAA2BlC,IAE7CjZ,GACGkb,EAAAtf,EAAAqM,cAACs4D,GAAA,EAAD,CACIn+D,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACPkI,MAAO86D,GACPnoD,UAAWzf,KAAKyf,oBApHXS,IAAMC,WA4HpBgB,OAtIA,SAAAC,GAAK,MAAK,CACrBomD,yBAA0B,CACtBljD,KAAM,CAAE2C,gBAAiB7F,EAAMkU,QAAQ4K,QAAQC,KAAO,MACtD5b,GAAI,CAAE0C,gBAAiB,gBAE3B8/C,mBAAoB,CAChBviE,UAAW,6BAgIe,CAAE+iB,WAAW,GAAhCpG,CAAwC0mD,wBClIjDC,uBACF,SAAAA,EAAYtoD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA8nE,IACfjoE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAgoE,GAAA3nE,KAAAH,KAAMwf,KAuBVuoD,iCAAmC,SAAApnE,GAAU,IACjCs8B,EAASt8B,EAATs8B,KACM+qC,EAAgBnoE,EAAKukB,MAA3B6Y,KAER,IAAI+qC,GAAe/qC,EAAKxL,YAAcu2C,EAAYv2C,UAAlD,CAEA5xB,EAAK6kB,SAAS,CACVuY,KAAMP,KAAaO,KACnBj6B,MAAOnD,EAAKooE,SAASvrC,KAAaO,QAGtC,IAAMt9B,EAAQC,IAAUuD,WAChBgR,EAAa8oB,EAAb9oB,SACRD,YAAoBvU,EAAOwU,EAASA,YArCrBtU,EAwCnBqoE,gCAAkC,SAAAvnE,GAAU,IAChCs8B,EAASt8B,EAATs8B,KAUR,GARAp9B,EAAK6kB,SAAS,CACVuY,OACAj6B,MAAOnD,EAAKooE,SAAShrC,GACrBkrC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGXprC,EAAL,CAEA,IAAMt9B,EAAQC,IAAUuD,WAChBgR,EAAa8oB,EAAb9oB,SACRD,YAAoBvU,EAAOwU,EAASA,YAvDrBtU,EA0DnB+wC,WAAa,SAAAxrC,GACcvF,EAAKukB,MAApBikD,YAEHjjE,GAELvD,IAAgBgH,aAAa,CACzBC,QAAS,0BACT1D,aAjEWvF,EAqEnByoE,mBAAqB,SAAAC,GAAa,IACtBvlE,EAAUnD,EAAKukB,MAAfphB,MAEFoC,EAAUpC,EAAMs/B,KAAK,SAAA12B,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO6lE,IACjD,GAAKnjE,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBoN,YAAmB5Q,EAAOyF,EAAS,MAEnC,IAAImyB,EAAiB,EACjB13B,EAAK2oE,UAAY3oE,EAAK2oE,SAAS56C,UAC/B2J,EAAiB3S,KAAKC,MAAMhlB,EAAK2oE,SAAS56C,QAAQ66C,YAAcC,MAG5C7oE,EAAK8oE,oBAAoBJ,EAAWvlE,EAAOu0B,GACnDn0B,QAAQ,SAAAwI,GACpB2E,YAAmB5Q,EAAOiM,EAAG,UArFlB/L,EAyFnB8oE,oBAAsB,SAACJ,EAAWp0D,EAAUojB,GACxC,IAAKpjB,EAAU,MAAO,GAEtB,IAAMy0D,EAAU,GACVl2D,EAAQyB,EAASyd,UAAU,SAAAhmB,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO6lE,IACvD,IAAe,IAAX71D,EAAc,MAAO,GAEzB,IAAMslB,EAAMpT,KAAKC,MAAMnS,EAAQ6kB,GACzBU,EAASvlB,EAAQ6kB,EAEjBY,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdswC,EAAQp/D,KAAK+tB,EAAiBY,EAAUG,GAE5CswC,EAAQp/D,KAAK+tB,EAAiBY,EAAUF,GACpCM,EAAahB,GACbqxC,EAAQp/D,KAAK+tB,EAAiBY,EAAUI,IAI5CD,GAAc,GACdswC,EAAQp/D,KAAK+tB,EAAiBS,EAAMM,GAEpCC,EAAahB,GACbqxC,EAAQp/D,KAAK+tB,EAAiBS,EAAMO,GAGpCH,EAAUxT,KAAKgT,KAAKzjB,EAASnO,OAASuxB,KAClCe,GAAc,GACdswC,EAAQp/D,KAAK+tB,EAAiBa,EAAUE,GAE5CswC,EAAQp/D,KAAK+tB,EAAiBa,EAAUH,GACpCM,EAAahB,GACbqxC,EAAQp/D,KAAK+tB,EAAiBa,EAAUG,IAIzCqwC,EAAQj7D,IAAI,SAAA7H,GAAC,OAAIqO,EAASrO,MAnIlBjG,EAsInBsmE,gBAAkB,SAAA36D,GACd,IAAM+8D,EAAY31C,OAAOpnB,EAAMC,OAAOwgC,QAAQs8B,WACzCA,GAEA1oE,EAAKgmE,YAENhmE,EAAKgpE,qBAAuBN,IAC5B1oE,EAAKgpE,mBAAqB,MAE9BhpE,EAAK6kB,SAAS,CAAEyjD,iBAAkBI,IAClC1oE,EAAKyoE,mBAAmBC,KAhJT1oE,EAmJnBqmE,gBAAkB,SAAA16D,GACd,IAAM+8D,EAAY31C,OAAOpnB,EAAMC,OAAOwgC,QAAQs8B,WAC9C,GAAKA,EAAL,CAEA1oE,EAAKgpE,mBAAqBN,EAC1B,IAAMvvD,EAAMJ,KAAKI,MAiBjB,OAfAnZ,EAAK6kB,SAAS,CAAEyjD,iBAAkBI,EAAW92C,UAAWzY,EAAKovD,aAAa,EAAOC,YAAY,IAC7FttC,WAAW,WACel7B,EAAKukB,MAAnBqN,YACUzY,GACdnZ,EAAK6kB,SAAS,CAAE0jD,aAAa,EAAMC,YAAY,KAEpD,KAEHxoE,EAAKyoE,mBAAmBC,GAExB1oE,EAAKgmE,WAAY,EACjB/gE,SAASgkE,iBAAiB,UAAWjpE,EAAKkpE,eAE1Cv9D,EAAMod,iBACNpd,EAAMqa,mBACC,IAzKQhmB,EA4KnBkpE,cAAgB,WACZlpE,EAAK6kB,SAAS,CAAEyjD,iBAAkB,EAAG12C,UAAW,EAAG22C,aAAa,IAChEvoE,EAAKgmE,WAAY,EACjB/gE,SAASkkE,oBAAoB,UAAWnpE,EAAKkpE,gBA/K9BlpE,EAkLnBooE,SAAW,SAAAhrC,GACP,IAAMj6B,EAAQ,GACd,IAAKi6B,EAAM,OAAOj6B,EAElB,IAAMimE,EAAO,IAAI//D,IACTiL,EAA4B8oB,EAA5B9oB,SAAU+oB,EAAkBD,EAAlBC,cAgBlB,OAfI/oB,GACAA,EAASA,SAAS/Q,QAAQ,SAAAwI,GACtB5I,EAAMwG,KAAKoC,GACXq9D,EAAKhoE,IAAI2K,EAAExG,QAAQ1C,GAAIkJ,EAAExG,QAAQ1C,MAGrCw6B,GACAA,EAAc/oB,SAAS/Q,QAAQ,SAAAwI,GACtBq9D,EAAKnmE,IAAI8I,EAAExG,QAAQ1C,MACpBM,EAAMwG,KAAKoC,GACXq9D,EAAKhoE,IAAI2K,EAAExG,QAAQ1C,GAAIkJ,EAAExG,QAAQ1C,OAKtCM,GApMPnD,EAAK2oE,SAAWtoD,IAAMqb,YAEtB17B,EAAKukB,MAAQ,CACT6Y,KAAM,KACNj6B,MAAO,GACPmlE,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDxoE,mFAef68B,KAAahb,GAAG,gCAAiC1hB,KAAKkoE,iCACtDxrC,KAAahb,GAAG,iCAAkC1hB,KAAK+nE,iFAIvDrrC,KAAa16B,eAAe,gCAAiChC,KAAKkoE,iCAClExrC,KAAa16B,eAAe,iCAAkChC,KAAK+nE,mEAqL9D,IAAAt9D,EAAAzK,KACG2gB,EAAY3gB,KAAKwf,MAAjBmB,QADHwD,EAEkDnkB,KAAKokB,MAApD6Y,EAFH9Y,EAEG8Y,KAAMj6B,EAFTmhB,EAESnhB,MAAOmlE,EAFhBhkD,EAEgBgkD,iBAAkBC,EAFlCjkD,EAEkCikD,YACvC,IAAKnrC,EAAM,OAAO,KAClB,IAAKj6B,EAAO,OAAO,KACnB,IAAKA,EAAMgD,OAAQ,OAAO,KAE1B,IAAMs7D,EAAWt+D,EAAM2K,IAAI,SAAA/B,GAAC,OACxBkU,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,0BACVtI,IAAK7L,EAAExG,QAAQ1C,GACfwmE,kBAAiBt9D,EAAExG,QAAQ1C,GAC3BoK,MAAO,CAAE6C,MAAO+4D,IAA2B74D,OAAQ64D,KACnDzoD,QAAS,kBAAMxV,EAAKmmC,WAAWhlC,KAC/BkU,EAAAtf,EAAAqM,cAAC+f,GAAA,EAAD,CACInV,IAAK7L,EAAExG,QAAQ1C,GACfqd,UAAU,kCACV0b,SAAO,EACPr2B,QAASwG,EACTyU,YAAa8oD,IACb3tC,MAAM,OAKZ9D,EAAe10B,EAAM4uB,UAAU,SAAAhmB,GAAC,OAAIA,EAAExG,QAAQ1C,KAAOylE,IACrD/iE,GAA4B,IAAlBsyB,EAAsB10B,EAAM00B,GAAgB,KAE5D,OACI5X,EAAAtf,EAAAqM,cAAA,OACIivB,IAAK97B,KAAKwoE,SACVzoD,UAAWe,IAAW,gBAAiBH,EAAQ8F,YAAa9F,EAAQgC,MACpEqkD,YAAahnE,KAAKmmE,gBAClB3+B,YAAaxnC,KAAKkmE,iBACjB5E,EACAlkD,QAAQhY,IAAYgjE,GAAetoD,EAAAtf,EAAAqM,cAACg1B,GAAA,EAAD,CAAgBz8B,QAASA,YA9OlD8a,IAAMC,YAoPlBgB,OA3PA,SAAAC,GAAK,OAAAthB,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB6iB,KAAM,CACF0S,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,YAEhFjO,YAAYlG,KAuPJD,CAAmB2mD,IC5OnBsB,uBA7BX,SAAAA,EAAY5pD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAopE,IACfvpE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAspE,GAAAjpE,KAAAH,KAAMwf,KAKV6pD,UAAY,SAAAzvD,GACR,GAAI/Z,EAAK0kD,IAAI32B,QAAS,CAClB,IAAI07C,EAAW,cAAgBzpE,EAAK2f,MAAM+pD,OAAS3vD,EAAS,GAAK,WAC7D/Z,EAAK0kD,IAAI32B,QAAQ7N,WAAaupD,IAAUzpE,EAAK0kD,IAAI32B,QAAQ7N,UAAYupD,KAN7EzpE,EAAK0kD,IAAMrkC,IAAMqb,YAHF17B,wEAcf,OACIigB,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKukD,IAAKxkC,UAAW,cAAgB/f,KAAKwf,MAAM+pD,MAAQ,UAAWtpD,QAASjgB,KAAKwf,MAAMS,SAC7FH,EAAAtf,EAAAqM,cAAA,OAAK8C,MAAM,KAAKE,OAAO,KAAK25D,MAAM,8BAC9B1pD,EAAAtf,EAAAqM,cAAA,QAAM48D,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,cAAc,QAAQC,YAAY,IAAIC,OAAO,SAClFjqD,EAAAtf,EAAAqM,cAAA,QAAM48D,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,cAAc,QAAQC,YAAY,IAAIC,OAAO,kBAnB/E7pD,IAAMC,YC2BxB6pD,WAAqBlqE,OAAOowB,OAAO,CACrCC,KAAM,OACN85C,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BAqBpBC,eACF,SAAAA,EAAY7qD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAqqE,IACfxqE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAuqE,GAAAlqE,KAAAH,KAAMwf,KAyJV6kB,0BAA4B,SAAA1jC,GACxB,IAAMk9B,EAAOh+B,EAAKw/C,QAAQzxB,QAEpB08C,EAAmBzsC,EAAKyhB,aACxBirB,EAAgB1sC,EAAKqN,UAC3BrrC,EAAK6kB,SAAS,CAAE8lD,cAAc,GAAQ,WAC9B3sC,EAAKqN,YAAcq/B,IACnB1sC,EAAKqN,WAAatmB,KAAK0R,IAAIg0C,EAAmBzsC,EAAKyhB,kBAjK5Cz/C,EAsKnB4qE,0BAA4B,SAAAC,GACxB,IAAM7sC,EAAOh+B,EAAKw/C,QAAQzxB,QAE1B/tB,EAAKyqE,iBAAmBzsC,EAAKyhB,aAC7Bz/C,EAAK0qE,cAAgB1sC,EAAKqN,WA1KXrrC,EA6KnBokC,uBAAyB,SAAAymC,GACrB,IAAM7sC,EAAOh+B,EAAKw/C,QAAQzxB,QAK1B/tB,EAAK6kB,SAAS,CAAE8lD,cAAc,GAAS,WAC/B3sC,EAAKqN,YAAcrrC,EAAK0qE,gBACxB1sC,EAAKqN,WAAatmB,KAAK0R,IAAIz2B,EAAKyqE,iBAAmBzsC,EAAKyhB,kBArLjDz/C,EA0LnB8qE,wBAA0B,SAAAhqE,GACtBd,EAAK6kB,SAAS,CACVkmD,gBAAiBh9D,IAAauR,cAAc/S,KAAO,EACnDy+D,eAAgBb,GAAmBI,wBA7LxBvqE,EAiMnBkzD,2BAA6B,SAAApyD,GACNd,EAAK2f,MAAhBxY,SAEOrG,EAAOqG,QAClBnH,EAAK6kB,SAAS,CAAEijC,aAAchnD,EAAOk6B,cArM1Bh7B,EAyMnB8lE,uBAAyB,SAAAhlE,GAAU,IACvBqG,EAAWnH,EAAK2f,MAAhBxY,OACA2L,EAAY9S,EAAKukB,MAAjBzR,QACAvM,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WAEjB,GAAItX,IAAWZ,IAEsC,IAAjDuM,EAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAO4b,IAAoB,CACpD,IAAMha,EAAUsJ,IAAa3K,IAAImD,EAASkY,GAC1C,IAAKha,EAAS,OAEd,IAAM3E,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAO,CAAC2E,MArNjBzE,EAyNnBirE,wBAA0B,SAAAnqE,GACHd,EAAK2f,MAAhBxY,OACOrG,EAAOyF,SA3NPvG,EA8NnBkrE,6BAA+B,SAAApqE,GAAU,IAC7B2D,EAA4B3D,EAA5B2D,QAASwa,EAAmBne,EAAnBme,eAEjB,GADmBjf,EAAK2f,MAAhBxY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAI4kE,GAAsB,EAE1B,OADoB1mE,EAAZC,QACQ,UACZ,IAAK,cACDymE,GAAsB,EAK9B,GAAKA,EAAL,CAEA,IAAIH,EAAiBb,GAAmB75C,KAClC0N,EAAOh+B,EAAKw/C,QAAQzxB,QAEtBiQ,EAAKqN,YAAcrN,EAAKsN,aAAetN,EAAKyhB,aAC5CurB,EAAiBb,GAAmBC,iBAG/B3lE,EAAQsT,cACbizD,EAAiBb,GAAmBC,kBAGxCvmE,QAAQ4F,IAAI,mEAAqEuhE,GACjFhrE,EAAKorE,eAAensD,EAAgBxa,EAASumE,GAC7C,IAAMlrE,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAO,CAAC2E,IAC5B+lE,EAAaa,aAAa,CAAC5mE,OA7PZzE,EAgQnBsrE,mBAAqB,SAAAxqE,GACjB,GAAKd,EAAKurE,UAAV,CAD2B,IAGnB9mE,EAAY3D,EAAZ2D,QAER,GADmBzE,EAAK2f,MAAhBxY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAIykE,EAAiBb,GAAmB75C,KAClC0N,EAAOh+B,EAAKw/C,QAAQzxB,QAEtBiQ,EAAKqN,YAAcrN,EAAKsN,aAAetN,EAAKyhB,aAC5CurB,EAAiBb,GAAmBC,iBAG/B3lE,EAAQsT,cACbizD,EAAiBb,GAAmBC,kBAGxC,IAAMt3D,EAAU,CAACrO,GAEjBZ,QAAQ4F,IAAI,yDAA2DuhE,GACvEhrE,EAAKwrE,YAAYxrE,EAAK4tB,eAAe9a,GAAUk4D,GAC/C,IAAMlrE,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOgT,GAC3B03D,EAAaa,aAAav4D,MAxRX9S,EA2RnByrE,uBAAyB,SAAA3qE,GACFd,EAAK2f,MAAhBxY,SACOrG,EAAOyF,SAEjBzF,EAAO4qE,cAEZ1rE,EAAK2rE,cAAc7qE,EAAOoL,cAjSXlM,EAoSnB4rE,kBAAoB,WAChB,GAAK5rE,EAAK6N,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAIxE,IACflG,EAAQ0oE,aAAY7rE,EAAKw/C,QAASx/C,EAAK8rE,UACpC7lE,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IAAK,CACnC,IAAMxB,EAAUzE,EAAK6N,SAAS1K,EAAM8C,IACpC,GAAIxB,EAAS,KAAAsnE,EACqBtnE,EAAQkb,MAA9BxY,EADC4kE,EACD5kE,OAAQC,EADP2kE,EACO3kE,UACVwQ,EAAG,GAAAvM,OAAMlE,EAAN,KAAAkE,OAAgBjE,GACzByG,EAASzM,IAAIwW,EAAKA,IAI1B5V,IAAgBgH,aAAa,CACzBC,QAAS,6BACT4E,SAAUA,MApTC7N,EA0enBgsE,sBA1emB,eAAAxrE,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA0eK,SAAAC,EAAMyJ,GAAN,IAAA2hE,EAAAC,EAAAjmE,EAAA,OAAAypB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd+qE,EAAiB,EACnBC,EAAa5hE,GAAUA,EAAOuD,SAAS1H,OAAS,GAAKmE,EAAOuD,SAAS1H,OAASgmE,IAEzElmE,EAAI,EAJO,YAIJA,EAAIgmE,GAAkBC,GAJlB,CAAAlrE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDlB,EAAK40D,aALJ,OAKhBtqD,EALgBtJ,EAAAoK,KAMhB8gE,EAAa5hE,GAAUA,EAAOuD,SAAS1H,OAAS,GAAKmE,EAAOuD,SAAS1H,OAASgmE,IAN9D,OAI8BlmE,IAJ9BjF,EAAAE,KAAA,iCAAAF,EAAAU,SAAAb,MA1eL,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAofnBosE,WApfmBnsE,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAofN,SAAAyB,IAAA,IAAA8E,EAAA+1C,EAAA5yC,EAAAxK,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACDiG,EAAWnH,EAAK2f,MAAhBxY,OADC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAILxB,EAAK6/C,QAJA,CAAAv9C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,wBAMTxB,EAAK6/C,SAAU,EAET3C,EAAYl9C,EAAKk9C,UARd56C,EAAApB,KAAA,EASUc,IAAgBkJ,KAAK,CACpCjC,QAAS,iBACT1C,QAASY,EACTwrB,gBAAiB,EACjBjH,OAAQ,EACRkH,MAAOu5C,MACRzW,QAAQ,WACP11D,EAAK6/C,SAAU,IAhBV,UASLv1C,EATKhI,EAAA8I,KAmBL8xC,IAAcl9C,EAAKk9C,WAAal9C,EAAK2f,MAAMxY,SAAWA,EAnBjD,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAuBM8I,EAAOuD,SACtBvD,EAAOuD,SAAS4xD,UAChBz/D,EAAK6kB,SAAS,CAAE/R,QAASxI,EAAOuD,WAEhCE,IAAaC,SAAS1D,EAAOuD,UAMvB/N,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAlCzBvL,EAAAd,OAAA,SAqCF8I,GArCE,yBAAAhI,EAAAZ,SAAAW,MApfMrC,EA4hBnB40D,WA5hBmB30D,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA4hBN,SAAAm+C,IAAA,IAAA53C,EAAAklE,EAAAnvB,EAAA5yC,EAAAxK,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAi+C,GAAA,cAAAA,EAAA/9C,KAAA+9C,EAAA99C,MAAA,UACDiG,EAAWnH,EAAK2f,MAAhBxY,OADC,CAAA63C,EAAA99C,KAAA,eAAA89C,EAAAx9C,OAAA,qBAILxB,EAAK6/C,QAJA,CAAAb,EAAA99C,KAAA,eAAA89C,EAAAx9C,OAAA,qBAMLxB,EAAKssE,oBANA,CAAAttB,EAAA99C,KAAA,eAOLlB,EAAKusE,wBAPAvtB,EAAAx9C,OAAA,wBAWL6qE,EAAgB,EAChBrsE,EAAKukB,MAAMzR,SAAW9S,EAAKukB,MAAMzR,QAAQ3M,OAAS,IAClDkmE,EAAgBrsE,EAAKukB,MAAMzR,QAAQ,GAAGjQ,IAG1C7C,EAAK6/C,SAAU,EAET3C,EAAYl9C,EAAKk9C,UAlBd8B,EAAA99C,KAAA,GAmBUc,IAAgBkJ,KAAK,CACpCjC,QAAS,iBACT1C,QAASY,EACTwrB,gBAAiB05C,EACjB3gD,OAAQ,EACRkH,MAAOu5C,MACRzW,QAAQ,WACP11D,EAAK6/C,SAAU,IA1BV,WAmBLv1C,EAnBK00C,EAAA5zC,KA6BL8xC,IAAcl9C,EAAKk9C,UA7Bd,CAAA8B,EAAA99C,KAAA,gBAAA89C,EAAAx9C,OAAA,qBAiCLxB,EAAK2f,MAAMxY,SAAWA,EAjCjB,CAAA63C,EAAA99C,KAAA,gBAAA89C,EAAAx9C,OAAA,yBAqCTuM,IAAaC,SAAS1D,EAAOuD,UAC7BvD,EAAOuD,SAAS4xD,UAChBz/D,EAAKwsE,aAAaxsE,EAAK4tB,eAAetjB,EAAOuD,UAAW,WAC/CvD,EAAOuD,SAAS1H,QACjBnG,EAAKusE,0BAGPzsE,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAClC28D,EAAaa,aAAa/gE,EAAOuD,UA9CxBmxC,EAAAx9C,OAAA,SAgDF8I,GAhDE,yBAAA00C,EAAAt9C,SAAAq9C,MA5hBM/+C,EA+kBnB4tB,eAAiB,SAAA/f,GACb,OAAOA,EAAS7B,OAAO,SAAAD,GAAC,MAA2B,yBAAvBA,EAAErH,QAAQ,YAhlBvB1E,EAmlBnBusE,sBAnlBmBtsE,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAmlBK,SAAAkK,IAAA,IAAA3D,EAAA6V,EAAAtC,EAAA+xD,EAAAJ,EAAAnvB,EAAA5yC,EAAAxK,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAkK,GAAA,cAAAA,EAAAhK,KAAAgK,EAAA/J,MAAA,UACZiG,EAAWnH,EAAK2f,MAAhBxY,OADY,CAAA8D,EAAA/J,KAAA,eAAA+J,EAAAzJ,OAAA,qBAIhBxB,EAAK6/C,QAJW,CAAA50C,EAAA/J,KAAA,eAAA+J,EAAAzJ,OAAA,oBAMdwb,EAAeF,YAAgB3V,GANjB,CAAA8D,EAAA/J,KAAA,eAAA+J,EAAAzJ,OAAA,oBASdkZ,EAAWH,KAAgBI,YAAYqC,GATzB,CAAA/R,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,qBAWfkZ,EAASgyD,6BAXM,CAAAzhE,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,yBAapBxB,EAAKssE,qBAAsB,EAbPrhE,EAAA/J,KAAA,GAeSc,IAAgBkJ,KAAK,CAC9CjC,QAAS,uBACT6Q,eAAgBY,EAASgyD,+BAjBT,WAedD,EAfcxhE,EAAAG,KAAA,CAAAH,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,yBAsBhB6qE,EAAgB,EAEhBrsE,EAAKukB,MAAMzR,SACX9S,EAAKukB,MAAMzR,QAAQ3M,OAAS,GAC5BnG,EAAKukB,MAAMzR,QAAQ,GAAGvM,UAAYkmE,EAAe5pE,KAEjDwpE,EAAgBrsE,EAAKukB,MAAMzR,QAAQ,GAAGjQ,IAG1C7C,EAAK6/C,SAAU,EAET3C,EAAYl9C,EAAKk9C,UAjCHjyC,EAAA/J,KAAA,GAkCCc,IAAgBkJ,KAAK,CACtCjC,QAAS,iBACT1C,QAASkmE,EAAe5pE,GACxB8vB,gBAAiB05C,EACjB3gD,OAAQ,EACRkH,MAAOu5C,MACRzW,QAAQ,WACP11D,EAAK6/C,SAAU,IAzCC,WAkCdv1C,EAlCcW,EAAAG,KA4ChB8xC,IAAcl9C,EAAKk9C,UA5CH,CAAAjyC,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,qBAgDhBxB,EAAK2f,MAAMxY,SAAWA,EAhDN,CAAA8D,EAAA/J,KAAA,gBAAA+J,EAAAzJ,OAAA,kBAqDpBuM,IAAaC,SAAS1D,EAAOuD,UAC7BvD,EAAOuD,SAAS4xD,UAChBz/D,EAAKwsE,aAAaxsE,EAAK4tB,eAAetjB,EAAOuD,WACvC/N,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAClC28D,EAAaa,aAAa/gE,EAAOuD,UA1Db,yBAAA5C,EAAAvJ,SAAAoJ,MAnlBL9K,EAgpBnB0/C,eAhpBmBz/C,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAgpBF,SAAA+rE,IAAA,IAAAxlE,EAAAjD,EAAAmoE,EAAAnvB,EAAA5yC,EAAAxK,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAA6rE,GAAA,cAAAA,EAAA3rE,KAAA2rE,EAAA1rE,MAAA,UACLiG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,KAAU9P,IAAI+D,GAFd,CAAAylE,EAAA1rE,KAAA,eAAA0rE,EAAAprE,OAAA,qBAKTxB,EAAK6/C,QALI,CAAA+sB,EAAA1rE,KAAA,eAAA0rE,EAAAprE,OAAA,qBAMTxB,EAAKurE,UANI,CAAAqB,EAAA1rE,KAAA,eAAA0rE,EAAAprE,OAAA,wBAQT6qE,EAAgB,EAChBrsE,EAAKukB,MAAMzR,SAAW9S,EAAKukB,MAAMzR,QAAQ3M,OAAS,IAClDkmE,EAAgBrsE,EAAKukB,MAAMzR,QAAQ9S,EAAKukB,MAAMzR,QAAQ3M,OAAS,GAAGtD,IAGtE7C,EAAK6/C,SAAU,EAET3C,EAAYl9C,EAAKk9C,UAfV0vB,EAAA1rE,KAAA,GAgBMc,IAAgBkJ,KAAK,CACpCjC,QAAS,iBACT1C,QAASY,EACTwrB,gBAAiB05C,EACjB3gD,QAASygD,IAAsB,EAC/Bv5C,MAAOu5C,IAAsB,IAC9BzW,QAAQ,WACP11D,EAAK6/C,SAAU,IAvBN,WAgBTv1C,EAhBSsiE,EAAAxhE,KA0BT8xC,IAAcl9C,EAAKk9C,UA1BV,CAAA0vB,EAAA1rE,KAAA,gBAAA0rE,EAAAprE,OAAA,qBA8BTxB,EAAK2f,MAAMxY,SAAWA,EA9Bb,CAAAylE,EAAA1rE,KAAA,gBAAA0rE,EAAAprE,OAAA,yBAkCT0C,EAAKuT,aACLzX,EAAKurE,UAAYjhE,EAAOuD,SAAS1H,OAAS,GAAKjC,EAAKuT,aAAa5U,KAAOyH,EAAOuD,SAAS,GAAGhL,GAE3F7C,EAAKurE,WAAY,EAGrB39C,aAAetjB,EAAQtK,EAAKukB,MAAMzR,SAIlC/E,IAAaC,SAAS1D,EAAOuD,UAC7BvD,EAAOuD,SAAS4xD,UAChB57D,QAAQ4F,IAAI,0DACZzJ,EAAKwrE,YAAYxrE,EAAK4tB,eAAetjB,EAAOuD,UAAWs8D,GAAmB75C,MACpExwB,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAClC28D,EAAaa,aAAa/gE,EAAOuD,UAlDpB++D,EAAAprE,OAAA,SAoDN8I,GApDM,yBAAAsiE,EAAAlrE,SAAAirE,MAhpBE3sE,EAwvBnBu/C,aAAe,WACXv/C,EAAK4rE,oBAEL,IAAM5tC,EAAOh+B,EAAKw/C,QAAQzxB,QAO1B,GAJI/tB,EAAK6sE,UAAU9+C,SACf/tB,EAAK6sE,UAAU9+C,QAAQy7C,UAAUxrC,EAAKqN,UAAYrN,EAAKyhB,aAAezhB,EAAKsN,aAAe,IAG1FtrC,EAAK8sE,qBAGL,OAFAjpE,QAAQ4F,IAAI,iDACZzJ,EAAK8sE,sBAAuB,GAI5B9sE,EAAK+sE,iCACLlpE,QAAQ4F,IAAI,wDAIZu0B,EAAKqN,WAAa,GAClBxnC,QAAQ4F,IAAI,kCACZzJ,EAAK40D,cACE52B,EAAKqN,UAAYrN,EAAKyhB,eAAiBzhB,EAAKsN,eACnDznC,QAAQ4F,IAAI,sCACZzJ,EAAK0/C,mBAlxBM1/C,EAwxBnBgtE,qBAAuB,SAAAxnD,GAAY,IAAA9F,EACD1f,EAAK2f,MAA3BxY,EADuBuY,EACvBvY,OADuBmd,GAAA5E,EACftY,UACoBpH,EAAKukB,OAAjCymD,EAFuB1mD,EAEvB0mD,eAAgBl4D,EAFOwR,EAEPxR,QAChBu4B,EAA0C7lB,EAA1C6lB,UAAWC,EAA+B9lB,EAA/B8lB,aAAcmU,EAAiBj6B,EAAjBi6B,aAUjC,GARA57C,QAAQ4F,IAAR,8DAAA4B,OAEqB2/D,EAFrB,uCAAA3/D,OAGwBggC,EAHxB,0CAAAhgC,OAI2BigC,EAJ3B,0CAAAjgC,OAK2Bo0C,EAL3B,4BAAAp0C,OAMalE,IAET6jE,IAAmBb,GAAmB75C,WACnC,GAAI06C,IAAmBb,GAAmBC,iBAC7CpqE,EAAKitE,sBACF,GAAIjC,IAAmBb,GAAmBG,kBAC7CtqE,EAAKktE,uBACF,GAAIlC,IAAmBb,GAAmBE,iBAAkB,CAC/D,IAAMrsC,EAAOh+B,EAAKw/C,QAAQzxB,QAC1BlqB,QAAQ4F,IAAR,qEAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,gCAAAjgC,OAKalE,IAIb,IADA,IAAIgmE,GAAW,EACNlnE,EAAI,EAAGA,EAAI6M,EAAQ3M,OAAQF,IAAK,CACrC,IAAImnE,EAAgBptE,EAAKqtE,SAASjqE,IAAI6C,GAClCzC,EAAOk7D,eAAqB0O,GAChC,GAAI5pE,GAEI4pE,EAAcztD,MAAM+mD,oBAAqB,CACzC1oC,EAAKqN,UAAY7nC,EAAKm7D,UACtBwO,GAAW,EACX,OAKPA,GACDntE,EAAKitE,iBAGTppE,QAAQ4F,IAAR,oEAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,gCAAAjgC,OAKalE,SAEV,GAAI6jE,IAAmBb,GAAmBI,qBAAsB,CACnE,IAAMvsC,EAAOh+B,EAAKw/C,QAAQzxB,QAC1BlqB,QAAQ4F,IAAR,yEAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,gCAAAjgC,OAKalE,IAEb62B,EAAKqN,UAAYA,GAAarN,EAAKsN,aAAeA,GAClDznC,QAAQ4F,IAAR,wEAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,gCAAAjgC,OAKalE,MA51BFnH,EAi2BnBktE,gBAAkB,WAAM,IAAArsD,EACU7gB,EAAK2f,MAA3BxY,EADY0Z,EACZ1Z,OAAQC,EADIyZ,EACJzZ,UACR0L,EAAY9S,EAAKukB,MAAjBzR,QAEFkrB,EAAOh+B,EAAKw/C,QAAQzxB,QAC1BlqB,QAAQ4F,IAAR,uCAAA4B,OAC2CjE,EAD3C,2CAAAiE,OAEqB2yB,EAAKqN,UAF1B,uCAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,uCAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,4BAAAjgC,OAKalE,IAIb,IADA,IAAIgmE,GAAW,EACNlnE,EAAI,EAAGA,EAAI6M,EAAQ3M,OAAQF,IAAK,CACrC,IAAImnE,EAAgBptE,EAAKqtE,SAASjqE,IAAI6C,GAClCzC,EAAOk7D,eAAqB0O,GAChC,GAAI5pE,GAEI4pE,EAAcztD,MAAMvY,YAAcA,EAAW,CAC7C42B,EAAKqN,UAAY7nC,EAAKm7D,UAAY3gC,EAAKyhB,aAAe,EACtD0tB,GAAW,EACX,OAKPA,GACDntE,EAAKitE,iBAGTppE,QAAQ4F,IAAR,uCAAA4B,OAC2CjE,EAD3C,0CAAAiE,OAEqB2yB,EAAKqN,UAF1B,uCAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,uCAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,4BAAAjgC,OAKalE,KAr4BEnH,EAy4BnBitE,eAAiB,WACbjtE,EAAK8sE,sBAAuB,EAC5B,IAAM9uC,EAAOh+B,EAAKw/C,QAAQzxB,QAC1BlqB,QAAQ4F,IAAR,oEAAA4B,OAEwB2yB,EAAKsN,aAF7B,uCAAAjgC,OAGwB2yB,EAAKyhB,aAH7B,oCAAAp0C,OAIqB2yB,EAAKqN,UAJ1B,4BAAAhgC,OAKarL,EAAK2f,MAAMxY,SAGF62B,EAAKsN,aAAetN,EAAKyhB,eACzBzhB,EAAKqN,WACvBrN,EAAKqN,UAAYrN,EAAKsN,aAAetN,EAAKyhB,aAC1C57C,QAAQ4F,IAAR,oEAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,8CAAAjgC,OAK2BrL,EAAK8sE,qBALhC,gCAAAzhE,OAMarL,EAAK2f,MAAMxY,UAGxBtD,QAAQ4F,IAAR,oFAAA4B,OAEqB2yB,EAAKqN,UAF1B,2CAAAhgC,OAGwB2yB,EAAKyhB,aAH7B,2CAAAp0C,OAIwB2yB,EAAKsN,aAJ7B,8CAAAjgC,OAK2BrL,EAAK8sE,qBALhC,gCAAAzhE,OAMarL,EAAK2f,MAAMxY,UAt6BbnH,EA26BnBstE,cA36BmBrtE,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA26BH,SAAA2sE,IAAA,IAAApmE,EAAAjD,EAAA0uB,EAAAsqB,EAAA5yC,EAAAxK,EAAA,OAAA4vB,EAAA/uB,EAAAI,KAAA,SAAAysE,GAAA,cAAAA,EAAAvsE,KAAAusE,EAAAtsE,MAAA,UACJiG,EAAWnH,EAAK2f,MAAhBxY,OACFjD,EAAOgP,KAAU9P,IAAI+D,GAFf,CAAAqmE,EAAAtsE,KAAA,eAAAssE,EAAAhsE,OAAA,wBAKZxB,EAAKk9C,UAAYnkC,KAAKI,MACtBnZ,EAAK6/C,SAAU,EACf7/C,EAAKurE,WAAY,EAEK,EACP,EACT34C,EAAQu5C,IAERjvB,EAAYl9C,EAAKk9C,UAbXswB,EAAAtsE,KAAA,GAcSc,IAAgBkJ,KAAK,CACtCjC,QAAS,iBACT1C,QAASrC,EAAKrB,GACd8vB,gBARkB,EASlBjH,OARW,EASXkH,MAAOA,IAnBC,WAcNtoB,EAdMkjE,EAAApiE,KAsBR8xC,IAAcl9C,EAAKk9C,UAtBX,CAAAswB,EAAAtsE,KAAA,gBAAAssE,EAAAhsE,OAAA,qBA4BRxB,EAAK2f,MAAMxY,SAAWA,EA5Bd,CAAAqmE,EAAAtsE,KAAA,gBAAAssE,EAAAhsE,OAAA,kBAgCR0C,EAAKuT,aACLzX,EAAKurE,UAAYjhE,EAAOuD,SAAS1H,OAAS,GAAKjC,EAAKuT,aAAa5U,KAAOyH,EAAOuD,SAAS,GAAGhL,GAE3F7C,EAAKurE,WAAY,EAGrBx9D,IAAaC,SAAS1D,EAAOuD,UAC7BvD,EAAOuD,SAAS4xD,UAGS,EACzB57D,QAAQ4F,IAAI,yCAEZzJ,EAAKstC,QAHoB,EAGQhjC,EAAOuD,SAAUs8D,GAAmBC,kBAG/DtqE,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAClCmG,YAAiBlU,EAAO,CAACqH,IAEzBqjE,EAAaa,aAAa/gE,EAAOuD,UAEjC7N,EAAKgsE,sBAAsB1hE,GAtDf,yBAAAkjE,EAAA9rE,SAAA6rE,MA36BGvtE,EAo+BnBytE,oBAAsB,SAAA9hE,GAClBA,EAAMod,iBACNpd,EAAMqa,kBAFqB,IAInB7e,EAAWnH,EAAK2f,MAAhBxY,OACH+V,YAAa/V,IAElBuR,IAAiBiqD,aAAY,IAx+B7B9+D,QAAQ4F,IAAR,6BAAA4B,OAAyCsU,EAAMxY,OAA/C,gBAAAkE,OAAoEsU,EAAMvY,YAE1EpH,EAAKk9C,UAAYnkC,KAAKI,MACtBnZ,EAAKukB,MAAQ,CACT0e,WAAY,EACZyqC,cAAe,KACf/C,cAAc,EACd73D,QAAS,GACTg1C,cAAc,EACdijB,iBAAiB,EACjBC,eAAgBb,GAAmB75C,KACnCq9C,mBAAoB,GAGxB3tE,EAAKw/C,QAAUn/B,IAAMqb,YACrB17B,EAAK8rE,SAAWzrD,IAAMqb,YACtB17B,EAAK6sE,UAAYxsD,IAAMqb,YAEvB17B,EAAKqtE,SAAW,IAAIhkE,IAEpBrJ,EAAK4rE,kBAAoBgC,aAAS5tE,EAAK4rE,kBAAmB,KAvB3C5rE,uFA0CKslB,EAAWC,GAAW,IAClCpe,EAAWhH,KAAKwf,MAAhBxY,OAEF62B,EAAO79B,KAAKq/C,QAAQzxB,QACpBvI,EAAW,CACb6lB,UAAWrN,EAAKqN,UAChBC,aAActN,EAAKsN,aACnBmU,aAAczhB,EAAKyhB,cAWvB,OARA57C,QAAQ4F,IAAR,iEAAA4B,OAEqB2yB,EAAKqN,UAF1B,uCAAAhgC,OAGwB2yB,EAAKsN,aAH7B,uCAAAjgC,OAIwB2yB,EAAKyhB,aAJ7B,4BAAAp0C,OAKalE,IAGNqe,6CAGQF,EAAWC,EAAWC,GAAU,IAAAkD,EACjBvoB,KAAKwf,MAA3BxY,EADuCuhB,EACvCvhB,OAAQC,EAD+BshB,EAC/BthB,UAEV42B,EAAO79B,KAAKq/C,QAAQzxB,QAC1BlqB,QAAQ4F,IAAR,2CAAA4B,OAC+ClE,EAD/C,gBAAAkE,OACoEjE,EADpE,kCAAAiE,OAEmBia,EAAUne,OAF7B,qBAAAkE,OAEuDia,EAAUle,UAFjE,oCAAAiE,OAGqB2yB,EAAKqN,UAH1B,uCAAAhgC,OAIwB2yB,EAAKsN,aAJ7B,uCAAAjgC,OAKwB2yB,EAAKyhB,eAGzBn6B,EAAUne,SAAWA,GAAUme,EAAUle,YAAcA,EACvDjH,KAAKyqD,iBAAiBzjD,EAAQme,EAAUne,OAAQC,EAAWke,EAAUle,WAErEjH,KAAK6sE,qBAAqBxnD,iDAIZN,EAAWC,GAAW,IAAA+D,EACH/oB,KAAKwf,MAAlCxY,EADgC+hB,EAChC/hB,OAAQC,EADwB8hB,EACxB9hB,UAAWma,EADa2H,EACb3H,MADa2hB,EAEmC/iC,KAAKokB,MAAxEomD,EAFgCznC,EAEhCynC,aAAc73D,EAFkBowB,EAElBpwB,QAAS4oD,EAFSx4B,EAETw4B,SAAU5T,EAFD5kB,EAEC4kB,aAAcijB,EAFf7nC,EAEe6nC,gBAEvD,OAAI7lD,EAAU3D,QAAUA,IAIpB2D,EAAU/d,SAAWA,IAIrB+d,EAAU9d,YAAcA,IAIxB+d,EAAUwlD,eAAiBA,IAI3BxlD,EAAUrS,UAAYA,IAItBqS,EAAUu2C,WAAaA,IAIvBv2C,EAAU2iC,eAAiBA,GAI3B3iC,EAAU4lD,kBAAoBA,oDAOlB,IACR5jE,EAAWhH,KAAKwf,MAAhBxY,OACRhH,KAAKyqD,iBAAiBzjD,EAAQ,GAE9B4G,IAAa8T,GAAG,mBAAoB1hB,KAAKmrE,oBACzCv9D,IAAa8T,GAAG,uBAAwB1hB,KAAKsrE,wBAC7C19D,IAAa8T,GAAG,uBAAwB1hB,KAAK2lE,wBAC7C/3D,IAAa8T,GAAG,6BAA8B1hB,KAAK+qE,8BACnDn9D,IAAa8T,GAAG,8BAA+B1hB,KAAK2qE,yBACpD/8D,IAAa8T,GAAG,6BAA8B1hB,KAAK2qE,yBACnD53D,KAAU2O,GAAG,wBAAyB1hB,KAAK8qE,yBAC3C/3D,KAAU2O,GAAG,2BAA4B1hB,KAAK+yD,4BAE9CziC,KAAY5O,GAAG,0BAA2B1hB,KAAKqkC,2BAC/C/T,KAAY5O,GAAG,0BAA2B1hB,KAAKyqE,2BAC/Cn6C,KAAY5O,GAAG,uBAAwB1hB,KAAKikC,uEAI5Cr2B,IAAa5L,eAAe,mBAAoBhC,KAAKmrE,oBACrDv9D,IAAa5L,eAAe,uBAAwBhC,KAAKsrE,wBACzD19D,IAAa5L,eAAe,uBAAwBhC,KAAK2lE,wBACzD/3D,IAAa5L,eAAe,6BAA8BhC,KAAK+qE,8BAC/Dn9D,IAAa5L,eAAe,8BAA+BhC,KAAK2qE,yBAChE/8D,IAAa5L,eAAe,6BAA8BhC,KAAK2qE,yBAC/D53D,KAAU/Q,eAAe,wBAAyBhC,KAAK8qE,yBACvD/3D,KAAU/Q,eAAe,2BAA4BhC,KAAK+yD,4BAE1DziC,KAAYtuB,eAAe,0BAA2BhC,KAAKqkC,2BAC3D/T,KAAYtuB,eAAe,0BAA2BhC,KAAKyqE,2BAC3Dn6C,KAAYtuB,eAAe,uBAAwBhC,KAAKikC,yGAyLrCj9B,EAAQ6zC,EAAgB5zC,EAAWs0C,2GAChDx3C,EAAOgP,KAAU9P,IAAI+D,GACrB0mE,EAAe36D,KAAU9P,IAAI43C,GAEnC76C,KAAK+8C,UAAYnkC,KAAKI,MACtBhZ,KAAK0/C,SAAU,EACf1/C,KAAKorE,WAAY,EACjBprE,KAAKmsE,qBAAsB,EAE3BnsE,KAAK4sE,kCAAmC,GACpC7oE,0BACAlC,IAAgBkJ,KAAK,CACjBjC,QAAS,WACT1C,QAASrC,EAAKrB,KAGZ+hE,GAAUx9D,GAAalD,EAAKgU,aAAe,EAC3Cm0D,EACFzH,GAAU1gE,EAAKgU,aAAe,EAAIhU,EAAK4pE,2BAA6B1mE,GAAwB,EAC1FskB,EAAUk5C,GAAU1gE,EAAKgU,aAAe,GAAM9Q,GAAa,EAAI+kE,IAAsB,EACrFv5C,EACDgyC,GAAU1gE,EAAKgU,aAAe,GAAM9Q,EAAY,EAAI+kE,IAAsBA,IAEzEjvB,EAAY/8C,KAAK+8C,oBACFl7C,IAAgBkJ,KAAK,CACtCjC,QAAS,iBACT1C,QAASrC,EAAKrB,GACd8vB,gBAAiB05C,EACjB3gD,OAAQA,EACRkH,MAAOA,eALLtoB,SAQF4yC,IAAc/8C,KAAK+8C,gEAMnBh5C,EAAKuT,aACLtX,KAAKorE,UAAYjhE,EAAOuD,SAAS1H,OAAS,GAAKjC,EAAKuT,aAAa5U,KAAOyH,EAAOuD,SAAS,GAAGhL,GAE3F1C,KAAKorE,WAAY,EAGrBx9D,IAAaC,SAAS1D,EAAOuD,UAC7BvD,EAAOuD,SAAS4xD,UAGZkO,EAAqB56C,OAAOg7C,YAC5B7pE,GAAQA,EAAKgU,aAAe,oBACnBjS,EAAIqE,EAAOuD,SAAS1H,OAAS,eAAGF,GAAK,uBAClCpD,EAAOyH,EAAOuD,SAAS5H,GAAvBpD,MAEHyH,EAAOuD,SAAS5H,GAAG8R,aACpBlV,EAAKqB,EAAK4pE,4BACVjrE,EAAK8qE,oBAELA,EAAqB9qE,8DAPoBoD,4BAarD0nE,EAAqBA,IAAuB56C,OAAOg7C,UAAY,EAAIJ,EACnE9pE,QAAQ4F,IAAI,uCAAyCkkE,GAEjD3C,EAAiBb,GAAmBC,iBACpChjE,EACA4jE,EAAiBb,GAAmBG,kBAC7B1F,GAAU+I,IACjB3C,EAAiBb,GAAmBE,kBAGxClqE,KAAKmtC,QAAQqgC,EAAoBrjE,EAAOuD,SAAUm9D,EAAgB,WAC9DpgE,EAAKmiE,kCAAmC,EACpC3lE,GACAgsB,aAAiBjsB,EAAQC,KAK3BtH,EAAQC,IAAUuD,WACxBgO,YAAoBxR,EAAOwK,EAAOuD,UAClCmG,YAAiBlU,EAAO,CAACqH,IACzB8M,YAAiBnU,EAAOqH,GAExBqjE,EAAaa,aAAa/gE,EAAOuD,UAEjC1N,KAAK6rE,sBAAsB1hE,GAG3BoS,YAAgBxY,EAAKrB,4BAErB1C,KAAKmtC,QACD,EACA,GACA68B,GAAmBC,iBACnB,kBAAOx/D,EAAKmiE,kCAAmC,YAInDc,GACA7rE,IAAgBkJ,KAAK,CACjBjC,QAAS,YACT1C,QAASsnE,EAAahrE,iKAiBRgL,GAEtB,IAAK,IAAI5H,EAAI4H,EAAS1H,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAIxB,EAAUoJ,EAAS5H,GACvB,GAAIxB,GAAWA,EAAQC,QACnB,OAAQD,EAAQC,QAAQ,UACpB,IAAK,eAAgB,IAAAspE,EACD7tE,KAAK8tE,gBAAgBxpE,GADpBypE,EAAAjuE,OAAA4+C,EAAA,EAAA5+C,CAAA+tE,EAAA,GACZnrE,EADYqrE,EAAA,GAEjB,GAFiBA,EAAA,GAGH39D,aAAa9L,EAAQC,QAAQK,MAAMmB,OACpCoC,MACLvI,IAAU0S,oBAAoB5P,EAAI4B,GAG1C,MAEJ,IAAK,iBAAkB,IAAA0pE,EACHhuE,KAAKiuE,kBAAkB3pE,GADpB4pE,EAAApuE,OAAA4+C,EAAA,EAAA5+C,CAAAkuE,EAAA,GACdtrE,EADcwrE,EAAA,GAEnB,GAFmBA,EAAA,GAGL5pE,EAAQC,QAAQa,QAAQA,QACzB+C,MACLvI,IAAU0S,oBAAoB5P,EAAI4B,qCAyOtDkpE,EAAoB76D,EAASk4D,EAAgBxhE,GACjDrJ,KAAK0kB,SACD,CAAE8oD,mBAAoBA,EAAoB76D,QAASA,EAASk4D,eAAgBA,GAC5ExhE,wCAIKsJ,EAAStJ,GACK,IAAnBsJ,EAAQ3M,OAKZhG,KAAK0kB,SACD,CAAE/R,QAASA,EAAQzH,OAAOlL,KAAKokB,MAAMzR,SAAUk4D,eAAgBb,GAAmBI,sBAClF/gE,GANIA,GAAUA,2CAUP8kE,EAAc7pE,EAASumE,EAAgBxhE,GAC7C/E,GAELtE,KAAK0kB,SACD,CACI/R,QAAS3S,KAAKokB,MAAMzR,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAElJ,KAAOyrE,IAAcjjE,OAAO,CAAC5G,IACvEumE,eAAgBA,GAEpBxhE,uCAIIsJ,EAASk4D,EAAgBxhE,GACV,IAAnBsJ,EAAQ3M,QAEZhG,KAAK0kB,SAAS,CAAE/R,QAAS3S,KAAKokB,MAAMzR,QAAQzH,OAAOyH,GAAUk4D,eAAgBA,GAAkBxhE,yCAGrF0C,EAAa1C,GAAU,IACzBsJ,EAAY3S,KAAKokB,MAAjBzR,QACR,GAAuB,IAAnBA,EAAQ3M,OAAZ,CAEA,IAAI2H,EAAM,IAAIzE,IAAI6C,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAE3C5L,KAAK0kB,SACD,CAAE/R,QAASA,EAAQ9G,OAAO,SAAAD,GAAC,OAAK+B,EAAI7K,IAAI8I,EAAElJ,MAAMmoE,eAAgBb,GAAmBC,kBACnF5gE,qCA0PC,IAAA4nC,EAAAjxC,KAAAskC,EACuBtkC,KAAKwf,MAAzBmB,EADH2jB,EACG3jB,QAAS3Z,EADZs9B,EACYt9B,OADZg+B,EAEkEhlC,KAAKokB,MAApEzR,EAFHqyB,EAEGryB,QAAS66D,EAFZxoC,EAEYwoC,mBAAoB7lB,EAFhC3iB,EAEgC2iB,aAAcijB,EAF9C5lC,EAE8C4lC,gBA6BnD,OA3BAlnE,QAAQ4F,IAAR,oCAAA4B,OAAgDy8C,GAAgBh1C,GAEhE3S,KAAKktE,SAAS9tD,QACdpf,KAAK0N,SAAWi6C,EACV,KACAh1C,EAAQhF,IAAI,SAAC/B,EAAG9F,GAAJ,OACRmR,aAAiBrL,GACbkU,EAAAtf,EAAAqM,cAACuhE,GAAD,CACI32D,IAAG,WAAAvM,OAAaU,EAAExF,QAAf,gBAAA8E,OAAqCU,EAAElJ,IAC1Co5B,IAAK,SAAAqV,GAAE,OAAIF,EAAKi8B,SAASjsE,IAAI6E,EAAGqrC,IAChCnqC,OAAQ4E,EAAExF,QACVa,UAAW2E,EAAElJ,GACb6jE,oBAAqBiH,IAAuB5hE,EAAElJ,KAGlDod,EAAAtf,EAAAqM,cAACwhE,GAAD,CACI52D,IAAG,WAAAvM,OAAaU,EAAExF,QAAf,gBAAA8E,OAAqCU,EAAElJ,IAC1Co5B,IAAK,SAAAqV,GAAE,OAAIF,EAAKi8B,SAASjsE,IAAI6E,EAAGqrC,IAChCnqC,OAAQ4E,EAAExF,QACVa,UAAW2E,EAAElJ,GACb4rE,WAAS,EACT9J,aAAc54D,EAAEmT,cAChBwnD,oBAAqBiH,IAAuB5hE,EAAElJ,OAM5Dod,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ0U,WAAY,gBAAiB,CACvDk5C,iCAAkC3D,IAEtCjI,YAAa3iE,KAAKstE,qBAClBxtD,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAKq/C,QAASt/B,UAAU,wBAAwB0gC,SAAUzgD,KAAKo/C,cACrEt/B,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBACfD,EAAAtf,EAAAqM,cAAA,OAAKivB,IAAK97B,KAAK2rE,SAAU5rD,UAAU,uBAC9B/f,KAAK0N,WAGdoS,EAAAtf,EAAAqM,cAAC2hE,GAAD,CAAexnE,OAAQA,IACvB8Y,EAAAtf,EAAAqM,cAAC4hE,GAAD,MACA3uD,EAAAtf,EAAAqM,cAAC6hE,GAAD,MACA5uD,EAAAtf,EAAAqM,cAAC8hE,GAAD,CACIpF,MAAO5oD,EAAQ,cACfmb,IAAK97B,KAAK0sE,UACVzsD,QAAS,WACLgxB,EAAKg7B,aACLh7B,EAAK67B,wEAtgCOttD,EAAO4E,GACnC,OAAI5E,EAAMxY,SAAWod,EAAM0e,YAActjB,EAAMvY,YAAcmd,EAAMmpD,cACxD,CACHzqC,WAAYtjB,EAAMxY,OAClBumE,cAAe/tD,EAAMvY,UACrB0gD,cAAc,EACdijB,iBAAiB,EACjBC,eAAgBb,GAAmBC,iBACnCuD,mBAAoB,GAIrB,0CAsZS9/D,GACXA,GACmB,IAApBA,EAAS1H,QACR0H,EAAS,GAAGtH,SAEjBvE,IAAgBkJ,KAAK,CACjBjC,QAAS,eACT1C,QAASsH,EAAS,GAAGtH,QACrB2F,YAAa2B,EAASC,IAAI,SAAA/B,GAAC,OAAIA,EAAElJ,cAtclBwd,IAAMC,WA0iClBgB,OA5jCA,SAAAC,GACX,IAAI+hB,EAA8B,SAAvB/hB,EAAMkU,QAAQvjB,KACzB,MAAO,CACHsjB,WAAY,CACRA,WAAY8N,EAAO/hB,EAAMkU,QAAQ2mB,KAAK,KAAO,eAEjD2yB,aAAc,CACVv5C,YAAa8N,EAAO,UAAY,WAAa,cAC7CgxB,UAAW,CACP9+B,YAAa8N,EAAO,UAAY,WAAa,eAEjD0rC,WAAY,CACRx5C,YAAa8N,EAAO,UAAY,WAAa,kBAgjC3B,CAAE5b,WAAW,GAAhCpG,CAAwCkpD,8CClkCjDyE,8MACF1qD,MAAQ,CACJ0kB,SAAU,QAGdC,gBAAkB,SAAAv9B,GACd3L,EAAK0nC,WAAW/7B,EAAMw9B,kBAG1BzB,WAAa,SAAAuB,GACTjpC,EAAK6kB,SAAS,CAAEokB,gBAGpB2H,YAAc,WACV5wC,EAAK6kB,SAAS,CAAEokB,SAAU,UAG9Boa,eAAiB,WACbrjD,EAAK4wC,cADc,IAGXj5B,EAAM3X,EAAK2f,MAAXhI,EAEF2rC,EAAOtjD,EAAKkvE,gBAAgBryC,KAAazoB,YAC/C,GAAKkvC,EAAL,CAEAC,IAAKD,GAEL,IAAM1rC,EAAG,GAAAvM,OAAMi4C,EAAN,uBACH7+C,EAAUkT,EAAE,cAGlB3X,EAAKwjD,sBAAsB5rC,EAAKnT,EAFjB,UAKnByqE,gBAAkB,SAAA96D,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBqjC,EAASrjC,EAATqjC,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMwT,EAAoBC,KAAY9nD,IAAI,YAE1C,OAAQ6nD,EAAoBA,EAAkBr1C,MAAQ,yBAA2B,eAAiB6hC,KAGtG+L,sBAAwB,SAAC5rC,EAAKnT,EAASoR,GACnC,GAAK+B,EAAL,CAD8C,IAAA8H,EAGN1f,EAAK2f,MAArC8jC,EAHsC/jC,EAGtC+jC,gBAAiB3iC,EAHqBpB,EAGrBoB,QAHqBpB,EAGZ/H,EAClC,GAAK8rC,EAAL,CAII/qC,IAAiBgrC,mBAAmB9rC,EAAK+rC,IAAqC,IAAsB9tC,IAEpG4tC,EAAgBh/C,EAAS,CACrBm/C,iBAAkBD,IAClB9tC,OAAQ,CACJoK,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIiX,IAAI,QACJiyB,aAAW,QACXvnB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,IAAiBmrC,sBAAsBjsC,KACtDqI,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,eAOpBwuE,YAAc,WACVnvE,EAAK4wC,cAEL,IAAM0S,EAAOtjD,EAAKkvE,gBAAgBryC,KAAazoB,YAC1CkvC,IAELthD,IAAgBgH,aAAa,CACzBC,QAAS,yBACTmL,WAAY,OAGhBpS,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,CAAEE,oFAIP,IAAAziC,EAC6B1gB,KAAKwf,MAA/BmB,EADHD,EACGC,QAASnJ,EADZkJ,EACYlJ,EAAGuI,EADfW,EACeX,UACZ+oB,EAAa9oC,KAAKokB,MAAlB0kB,SAER,OACIhpB,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAC28B,EAAAhpC,EAAD,CACIuf,UAAWY,EAAQ8oB,WAAa,IAAM1pB,EACtC2pB,aAAW,QACXz/B,KAAMmT,QAAQ0rB,GACd7oB,QAASjgB,KAAK+oC,iBACdjpB,EAAAtf,EAAAqM,cAACo7C,GAAAznD,EAAD,OAEJsf,EAAAtf,EAAAqM,cAAC+8B,GAAAppC,EAAD,CACIkC,GAAG,cACHomC,SAAUA,EACV7+B,KAAMmT,QAAQ0rB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBjgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBL,QAAS3pB,KAAKywC,aACd3wB,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKkjD,gBACpBpjC,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACoiE,GAAAzuE,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CAAc0/B,QAAS1oB,EAAE,eAE7BsI,EAAAtf,EAAAqM,cAACud,GAAA5pB,EAAD,CAAUyf,QAASjgB,KAAKgvE,aACpBlvD,EAAAtf,EAAAqM,cAACo9B,GAAAzpC,EAAD,KACIsf,EAAAtf,EAAAqM,cAACqiE,GAAA1uE,EAAD,OAEJsf,EAAAtf,EAAAqM,cAACs9B,GAAA3pC,EAAD,CAAc0/B,QAAS1oB,EAAE,6BA/Hb0I,IAAMC,WA+I3B4G,GANCC,YACZ7F,IAhJW,SAAAC,GAAK,MAAK,CACrBqP,MAAO,CACHjN,QAASpC,EAAMmkC,QAAQC,KAAO,KA8If,CAAEj+B,WAAW,IAChCC,cACAk+B,eAGW3+B,CAAQ+nD,ICtHjBK,uBACF,SAAAA,EAAY3vD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAmvE,IACftvE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAqvE,GAAAhvE,KAAAH,KAAMwf,KAwBV4vD,iCAAmC,SAAAzuE,GAAU,IACjCsT,EAAeyoB,KAAfzoB,WAERpU,EAAK6kB,SAAS,CAAEzQ,gBA5BDpU,EA+BnBwvE,6BAA+B,SAAA1uE,GAAU,IAC7BsT,EAAetT,EAAfsT,WAIR,GAFApU,EAAK6kB,SAAS,CAAEzQ,eAEZA,EAAY,CACZ,IAAMtU,EAAQC,IAAUuD,WACxB6Q,YAAsBrU,EAAOsU,KAtClBpU,EA0CnB4wC,YAAc,WACV5uC,IAAgBgH,aAAa,CACzBC,QAAS,yBACTmL,WAAY,QA7CDpU,EAiDnBiyD,WAAa,WAAM,IACP79C,EAAepU,EAAKukB,MAApBnQ,WACR,GAAKA,EAAL,CAFe,IAIP8oB,EAAiB9oB,EAAjB8oB,aAERl7B,IAAgBkJ,KAAK,CACjBjC,QAAS,mBACTwmB,OAAQrb,EAAWvR,GACnBq6B,cAAeA,IAGnBl9B,EAAK4wC,gBA7DU5wC,EAgEnByoE,mBAAqB,SAAAC,GAAa,IAGxBnjE,EAFiBvF,EAAKukB,MAApBnQ,WACAE,SACiBmuB,KAAK,SAAA12B,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO6lE,IACpD,GAAKnjE,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBoN,YAAmB5Q,EAAOyF,EAAS,MAEXvF,EAAK8oE,oBAAoBJ,GACjCnlE,QAAQ,SAAAwI,GACpB2E,YAAmB5Q,EAAOiM,EAAG,UA3ElB/L,EA+EnB8oE,oBAAsB,SAAAJ,GAAa,IACvBt0D,EAAepU,EAAKukB,MAApBnQ,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBE,EAAaF,EAAbE,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMy0D,EAAU,GACVl2D,EAAQyB,EAASyd,UAAU,SAAAhmB,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO6lE,IACvD,IAAe,IAAX71D,EAAc,MAAO,GAEzB,IACMslB,EAAMpT,KAAKC,MAAMnS,EADE,GAEnBulB,EAASvlB,EAFU,EAInBylB,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdswC,EAAQp/D,KAXS,EAWe2uB,EAAUG,GAE9CswC,EAAQp/D,KAba,EAaW2uB,EAAUF,GACtCM,EAdiB,GAejBqwC,EAAQp/D,KAfS,EAee2uB,EAAUI,IAI9CD,GAAc,GACdswC,EAAQp/D,KApBa,EAoBWwuB,EAAMM,GAEtCC,EAtBqB,GAuBrBqwC,EAAQp/D,KAvBa,EAuBWwuB,EAAMO,GAGtCH,EAAUxT,KAAKgT,KAAKzjB,EAASnO,OA1BR,KA2BjBsyB,GAAc,GACdswC,EAAQp/D,KA5BS,EA4Be4uB,EAAUE,GAE9CswC,EAAQp/D,KA9Ba,EA8BW4uB,EAAUH,GACtCM,EA/BiB,GAgCjBqwC,EAAQp/D,KAhCS,EAgCe4uB,EAAUG,IAI3CqwC,EAAQj7D,IAAI,SAAA7H,GAAC,OAAIqO,EAASrO,MA9HlBjG,EAiInBsmE,gBAAkB,SAAA36D,GACd,IAAM+8D,EAAY31C,OAAOpnB,EAAMC,OAAOwgC,QAAQs8B,WACzCA,GAEA1oE,EAAKgmE,YAEVhmE,EAAK6kB,SAAS,CAAE6jD,cAChB1oE,EAAKyoE,mBAAmBC,KAxIT1oE,EA2InBqmE,gBAAkB,SAAA16D,GACd,IAAM+8D,EAAY31C,OAAOpnB,EAAMC,OAAOwgC,QAAQs8B,WAC9C,GAAKA,EAUL,OARA1oE,EAAK6kB,SAAS,CAAE6jD,cAChB1oE,EAAKyoE,mBAAmBC,GAExB1oE,EAAKgmE,WAAY,EACjB/gE,SAASgkE,iBAAiB,UAAWjpE,EAAKkpE,eAE1Cv9D,EAAMod,iBACNpd,EAAMqa,mBACC,GAvJQhmB,EA0JnBkpE,cAAgB,WACZlpE,EAAK6kB,SAAS,CAAE6jD,UAAW,IAC3B1oE,EAAKgmE,WAAY,EACjB/gE,SAASkkE,oBAAoB,UAAWnpE,EAAKkpE,gBA1J7ClpE,EAAKukB,MAAQ,CACTnQ,WAAYyoB,KAAazoB,WACzBs0D,UAAW,GALA1oE,qFASGklB,EAAWC,EAAWC,GAAa,IAAAd,EACnBnkB,KAAKokB,MAA/BnQ,EAD6CkQ,EAC7ClQ,WAAYs0D,EADiCpkD,EACjCokD,UAEpB,OAAOt0D,IAAe+Q,EAAU/Q,YAAcs0D,IAAcvjD,EAAUujD,sDAItE7rC,KAAahb,GAAG,yBAA0B1hB,KAAKqvE,8BAC/C3yC,KAAahb,GAAG,6BAA8B1hB,KAAKovE,iFAInD1yC,KAAa16B,eAAe,yBAA0BhC,KAAKqvE,8BAC3D3yC,KAAa16B,eAAe,6BAA8BhC,KAAKovE,mEA0I1D,IAAA7vD,EACkBvf,KAAKwf,MAApBhI,EADH+H,EACG/H,EAAGmJ,EADNpB,EACMoB,QADNoiB,EAE6B/iC,KAAKokB,MAA/BnQ,EAFH8uB,EAEG9uB,WAAYs0D,EAFfxlC,EAEewlC,UACpB,IAAKt0D,EAAY,OAAO,KAHnB,IAKG8G,EAAkC9G,EAAlC8G,MAAO5G,EAA2BF,EAA3BE,SAAU4oB,EAAiB9oB,EAAjB8oB,aAEnB/5B,EAAQmR,EAASxG,IAAI,SAAA/B,GAAC,OACxBkU,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,0BACVtI,IAAK7L,EAAExG,QAAQ1C,GACfwmE,kBAAiBt9D,EAAExG,QAAQ1C,GAC3BoK,MAAO,CAAE6C,MAAO,GAAIE,OAAQ,KAC5BiQ,EAAAtf,EAAAqM,cAAC+f,GAAA,EAAD,CACInV,IAAK7L,EAAExG,QAAQ1C,GACfqd,UAAU,kCACV0b,SAAO,EACPr2B,QAASwG,EACTyU,YAAa8oD,IACb3tC,MAAM,IAEV1b,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iCAAiCnU,EAAEmiB,UAIpD2J,EAAevjB,EAASyd,UAAU,SAAAhmB,GAAC,OAAIA,EAAExG,QAAQ1C,KAAO6lE,IACxDnjE,GAA4B,IAAlBsyB,EAAsBvjB,EAASujB,GAAgB,KAE/D,OACI5X,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACIuf,UAAWY,EAAQ0wB,WACnBpnC,MAAI,EACJqgB,mBAAoB,EACpBX,QAAS3pB,KAAKywC,YACdlmB,kBAAgB,gCAChB5J,QAAS,CAAE+hC,MAAO/hC,EAAQk3C,YAC1B/3C,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CACIkC,GAAG,gCACHqd,UAAWe,IAAWH,EAAQ2uD,gBAATxvE,OAAA0mB,GAAA,EAAA1mB,CAAA,GAChB6gB,EAAQ4uD,qBAAuBnyD,QAAQhY,KAE5C6sC,mBAAiB,GACjBnyB,EAAAtf,EAAAqM,cAAC0kC,GAAA/wC,EAAD,CAAYqmB,QAAQ,KAAK9G,UAAWY,EAAQuxB,eAAgBiX,QAAM,GAC7DpuC,GAEL+E,EAAAtf,EAAAqM,cAAC2iE,GAAD,CAAuBzvD,UAAWY,EAAQ8uD,mBAE9C3vD,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,CACImgB,QAAS,CAAEgC,KAAMhC,EAAQ2wB,aACzB01B,YAAahnE,KAAKmmE,gBAClBc,WAAYjnE,KAAKomE,eACjB5+B,YAAaxnC,KAAKkmE,iBACjBljE,GAEL8c,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,CAAeuf,UAAWe,IAAWhhB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAG6gB,EAAQ4uD,qBAAuBnyD,QAAQhY,MAC3E0a,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAKywC,aACjCj5B,EAAE,WAEPsI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQ2hB,MAAM,UAAUlC,QAASjgB,KAAK8xD,YAClBt6C,EAAfulB,EAAiB,SAAc,SAGvC3f,QAAQhY,IAAY0a,EAAAtf,EAAAqM,cAACg1B,GAAA,EAAD,CAAgBz8B,QAASA,YA/N/B8a,IAAMC,YA4OtB4G,GALCC,YACZ7F,IAvQW,SAAAC,GAAK,MAAK,CACrBkwB,YAAa,CACTvkC,QAAS,OACT2iE,SAAU,OACVpZ,UAAW,IACX9yC,QAAS,cACT6R,WAAY,eAEhBwiC,UAAW,CACPloD,MAAO,KAEX2/D,gBAAiB,CACbviE,QAAS,OACT4iE,cAAe,MACf3X,WAAY,UAEhB3mB,WAAY,CACRlvB,MAAOf,EAAMkU,QAAQzX,KAAKqiB,SAE9BuvC,gBAAiB,CACbvoD,OAAQ,uBAEZgrB,eAAgB,CACZV,SAAU,EACVo+B,WAAY,GAEhBL,qBAAsB,CAClBhsD,cAAe,WA6OnBiE,cAGWT,CAAQooD,IC1KRU,uBA1GX,SAAAA,EAAYrwD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA6vE,IACfhwE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA+vE,GAAA1vE,KAAAH,KAAMwf,KAiCVswD,8BAAgC,SAAAnvE,GAC5Bd,EAAK4hB,eAnCU5hB,EAsCnB+zC,qBAAuB,SAAAjzC,GACnBd,EAAK6kB,SAAS,CACV1d,OAAQrG,EAAOkzC,WACf5sC,UAAWtG,EAAO06C,iBAzCPx7C,EA6CnBitE,eAAiB,WACbjtE,EAAKkwE,aAAajD,kBA9CHjtE,EAiDnBstE,cAAgB,WACZttE,EAAKkwE,aAAa5C,iBAlDHttE,EAqDnBktE,gBAAkB,WACdltE,EAAKkwE,aAAahD,mBAnDlBltE,EAAKukB,MAAQ,CACTpd,OAAQuR,IAAiBwT,YACzB9kB,UAAWsR,IAAiB+iC,eAC5B00B,cAAe,GANJnwE,qFAUGklB,EAAWC,GAC7B,OAAIA,EAAUhe,SAAWhH,KAAKokB,MAAMpd,SAGhCge,EAAU/d,YAAcjH,KAAKokB,MAAMnd,WAGnC+d,EAAUgrD,gBAAkBhwE,KAAKokB,MAAMjF,2DAQ3C5G,IAAiBmJ,GAAG,oCAAqC1hB,KAAK8vE,+BAC9Dv3D,IAAiBmJ,GAAG,qBAAsB1hB,KAAK4zC,qEAI/Cr7B,IAAiBvW,eAAe,oCAAqChC,KAAK8vE,+BAC1Ev3D,IAAiBvW,eAAe,qBAAsBhC,KAAK4zC,uDA0BtD,IAAAnpC,EAAAzK,KAAAmkB,EAiCwCnkB,KAAKokB,MAA1Cpd,EAjCHmd,EAiCGnd,OAAQC,EAjCXkd,EAiCWld,UACR2vD,GAlCHzyC,EAiCsB6rD,cACMz3D,IAAzBq+C,sBAER,OACI92C,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkB,CAAEmvD,8BAA+BrZ,KAC1E92C,EAAAtf,EAAAqM,cAACqjE,GAAD,MACApwD,EAAAtf,EAAAqM,cAACsjE,GAAD,CAAQnpE,OAAQA,IAChB8Y,EAAAtf,EAAAqM,cAACujE,GAAD,CAAc1e,SAAU,SAAA51B,GAAG,OAAKrxB,EAAKslE,aAAej0C,GAAM90B,OAAQA,EAAQC,UAAWA,IACrF6Y,EAAAtf,EAAAqM,cAACotC,GAAA,EAAD,CAAQjzC,OAAQA,IAChB8Y,EAAAtf,EAAAqM,cAACwjE,GAAD,MACAvwD,EAAAtf,EAAAqM,cAACyjE,GAAD,cArGYnwD,qJCwCbowD,uBA1CX,SAAAA,EAAY/wD,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAuwE,GAAAzwE,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAywE,GAAApwE,KAAAH,KACVwf,0EAGD,IAAAD,EACyBvf,KAAKwf,MAA3BxY,EADHuY,EACGvY,OAAQC,EADXsY,EACWtY,UAEV3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAM2H,EAASuhB,aAAgBlpB,GACzB28D,EAAW50C,aAAY/nB,GAEvBksE,EAAcvkE,EAChB6T,EAAAtf,EAAAqM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQA,IAEzB6T,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,IAG7B,OACI8Y,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACVywD,EACD1wD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAC4wB,GAAA,EAAD,CAAez2B,OAAQA,EAAQiF,OAAQA,KAE3C6T,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iCACXD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,gBAAgBkhD,cA7B3B/gD,IAAMC,sBCHjCswD,uBACF,SAAAA,EAAYjxD,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAywE,IACf5wE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA2wE,GAAAtwE,KAAAH,KAAMwf,KAGVmG,YAAc,SAAAna,GACVA,EAAMqa,mBALShmB,wEAQV,IACGge,EAAS7d,KAAKwf,MAAd3B,KAER,OACIiC,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAAgBE,QAASjgB,KAAK2lB,aACzC7F,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,sBAAsBlC,WAd1BqC,IAAMC,YAwBjCswD,GAAaxvD,aAAe,GAEbwvD,oBClBTC,WAASxwD,IAAM6yB,KAAK,kBAAMppC,QAAAqpC,IAAA,CAAAh1B,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA9e,KAAA2S,EAAAi1B,KAAA,cAuXjB09B,eApXX,SAAAA,EAAYnxD,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA2wE,IACf9wE,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA6wE,GAAAxwE,KAAAH,KAAMwf,KA+FVoxD,2BAA6B,SAAAjwE,GAAU,IAAA4e,EACL1f,EAAK2f,MAA3BxY,EAD2BuY,EAC3BvY,OAAQC,EADmBsY,EACnBtY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAKgxE,uBApGMhxE,EAwGnBgxE,oBAxGmB/wE,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAwGG,SAAAC,IAAA,IAAAggB,EAAA1Z,EAAAC,EAAAmF,EAAA0kE,EAAAC,EAAA7vE,EAAA8vE,EAAA,OAAAzhD,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA2f,EACkB7gB,EAAK2f,MAAjCxY,EADU0Z,EACV1Z,OAAQC,EADEyZ,EACFzZ,UAAWmF,EADTsU,EACStU,KAEtB8hB,aAAgBlnB,EAAQC,GAHX,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAyvE,EAOY3+D,YAAanL,EAAQC,EAAWmF,GAP5C2kE,EAAAjxE,OAAA4+C,EAAA,EAAA5+C,CAAAgxE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOI7vE,EAPJ6vE,EAAA,GAAAlwE,EAAAE,KAAA,EAQUlB,EAAKoxE,iBAAiB/vE,GARhC,OAQZ8vE,EARYnwE,EAAAoK,KAUlBpL,EAAK6kB,SAAS,CAAEssD,kBAVE,wBAAAnwE,EAAAU,SAAAb,MAxGHb,EAqHnBoxE,iBAAmB,SAAA/vE,GACf,OAAO,IAAIyI,QAAQ,SAAAC,GACf,GAAK1I,EAAL,CAKA,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,IACpC,GAAKyF,EAAL,CAKA,IAAM+oE,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAA5lE,GAAK,OAAI5B,EAAQ6uC,KAAK44B,MAAM7lE,EAAMC,OAAOtB,UAC7D+mE,EAAW9mE,QAAU,kBAAMR,EAAQ,OACnCsnE,EAAWI,QAAU,kBAAM1nE,EAAQ,OACnCsnE,EAAWK,WAAWppE,QARlByB,EAAQ,WANRA,EAAQ,SAxHD/J,EA0InBigE,wBAA0B,SAAAn/D,GAAU,IAAA4nB,EACI1oB,EAAK2f,MAAjCxY,EADwBuhB,EACxBvhB,OAAQC,EADgBshB,EAChBthB,UAAWmF,EADKmc,EACLnc,KAE3B,GAAIpF,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAAuqE,EAC9Br/D,YAAanL,EAAQC,EAAWmF,GADFqlE,EAAA3xE,OAAA4+C,EAAA,EAAA5+C,CAAA0xE,EAAA,GACrD7hE,EADqD8hE,EAAA,GAC9C5hE,EAD8C4hE,EAAA,GACtCvwE,EADsCuwE,EAAA,GAE5D5xE,EAAK6kB,SAAS,CACV/U,QACAE,SACA3O,WAlJOrB,EAuJnB6xE,iCAAmC,SAAA/wE,GAAU,IAAAooB,EACXlpB,EAAK2f,MAA3BxY,EADiC+hB,EACjC/hB,OAAQC,EADyB8hB,EACzB9hB,UAEhB,GAAID,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAA0qE,EAC9Bz/D,YAAoBlL,EAAQC,GADE2qE,EAAA9xE,OAAA4+C,EAAA,EAAA5+C,CAAA6xE,EAAA,GACrDhiE,EADqDiiE,EAAA,GAC9C/hE,EAD8C+hE,EAAA,GACtC1wE,EADsC0wE,EAAA,GAE5D/xE,EAAK6kB,SAAS,CACV4uB,eAAgB3jC,EAChB4jC,gBAAiB1jC,EACjBpJ,UAAWvF,MA/JJrB,EAoKnB8lE,uBAAyB,SAAAhlE,GAAU,IAAA2jC,EACKzkC,EAAK2f,MAAjCxY,EADuBs9B,EACvBt9B,OAAQC,EADeq9B,EACfr9B,UAAWmF,EADIk4B,EACJl4B,KACnBhG,EAAwBzF,EAAxByF,QAASkY,EAAe3d,EAAf2d,WAEjB,GAAItX,IAAWZ,GAAWa,IAAcqX,EAAY,KAAAuzD,EAClB1/D,YAAanL,EAAQC,EAAWmF,GADd0lE,EAAAhyE,OAAA4+C,EAAA,EAAA5+C,CAAA+xE,EAAA,GACzCliE,EADyCmiE,EAAA,GAClCjiE,EADkCiiE,EAAA,GAC1B5wE,EAD0B4wE,EAAA,GAE1CxtE,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACnC4W,EAAOqO,aAAQ5nB,GACrBzE,EAAK6kB,SAAS,CACV/U,MAAOA,EACPE,OAAQA,EACR3O,KAAMA,EACN2c,KAAMA,MAhLChe,EAqLnBkyE,mBAAqB,SAAAvmE,GACbA,GAAOA,EAAMqa,mBAtLFhmB,EAyLnBmyE,YAAc,SAAAC,GACVpyE,EAAK6kB,SAAS,CACVutD,WAxLJpyE,EAAKwgC,SAAWngB,IAAMqb,YACtB17B,EAAKqyE,UAAYhyD,IAAMqb,YAJR,IAAA2K,EAMqBrmC,EAAK2f,MAAjCxY,EANOk/B,EAMPl/B,OAAQC,EANDi/B,EAMCj/B,UAAWmF,EANZ85B,EAMY95B,KANZ+lE,EAQahgE,YAAanL,EAAQC,EAAWmF,GAR7CgmE,EAAAtyE,OAAA4+C,EAAA,EAAA5+C,CAAAqyE,EAAA,GAQVxiE,EARUyiE,EAAA,GAQHviE,EARGuiE,EAAA,GAQKlxE,EARLkxE,EAAA,GASflxE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EATlB,IAAAmxE,EAWoCngE,YAAoBlL,EAAQC,GAXhEqrE,EAAAxyE,OAAA4+C,EAAA,EAAA5+C,CAAAuyE,EAAA,GAWV/+B,EAXUg/B,EAAA,GAWM/+B,EAXN++B,EAAA,GAWuB7rE,EAXvB6rE,EAAA,GAYf7rE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACnC4W,EAAOqO,aAAQ5nB,GAfN,OAoBfzE,EAAKukB,MAAQ,CACT6tD,MAAO,EACPnvC,WAAY97B,EACZumE,cAAetmE,EACfsrE,WAAW,EACX5iE,MAAOA,EACPE,OAAQA,EACR3O,KAAMA,EACN2c,KAAMA,EACNy1B,eAAgBA,EAChBC,gBAAiBA,EACjB9sC,UAAWA,GAGf5G,EAAKgxE,sBAlCUhxE,mFAqEfD,IAAU8hB,GAAG,2BAA4B1hB,KAAK4wE,4BAC9ChxE,IAAU8hB,GAAG,wBAAyB1hB,KAAK8/D,yBAC3ClgE,IAAU8hB,GAAG,wBAAyB1hB,KAAK8/D,yBAC3ClgE,IAAU8hB,GAAG,4BAA6B1hB,KAAK8/D,yBAC/ClgE,IAAU8hB,GAAG,iCAAkC1hB,KAAK0xE,kCACpD9xE,IAAU8hB,GAAG,qCAAsC1hB,KAAK0xE,kCACxD9jE,IAAa8T,GAAG,uBAAwB1hB,KAAK2lE,uEAI7C/lE,IAAUoC,eAAe,2BAA4BhC,KAAK4wE,4BAC1DhxE,IAAUoC,eAAe,wBAAyBhC,KAAK8/D,yBACvDlgE,IAAUoC,eAAe,wBAAyBhC,KAAK8/D,yBACvDlgE,IAAUoC,eAAe,4BAA6BhC,KAAK8/D,yBAC3DlgE,IAAUoC,eAAe,iCAAkChC,KAAK0xE,kCAChE9xE,IAAUoC,eAAe,qCAAsChC,KAAK0xE,kCACpE9jE,IAAa5L,eAAe,uBAAwBhC,KAAK2lE,mEAG1CxgD,EAAWC,EAAWC,GAAU,IAAA0gD,EACjB/lE,KAAKwf,MAA3BxY,EADuC++D,EACvC/+D,OAAQC,EAD+B8+D,EAC/B9+D,UAEZke,EAAUne,SAAWA,GAAUme,EAAUle,YAAcA,GACvDjH,KAAK6wE,uDAmGJ,IAAApmE,EAAAzK,KAAAgmE,EACyBhmE,KAAKwf,MAA3BxY,EADHg/D,EACGh/D,OAAQC,EADX++D,EACW/+D,UADXkd,EAYDnkB,KAAKokB,MATL4sD,EAHC7sD,EAGD6sD,cACArhE,EAJCwU,EAIDxU,MACAE,EALCsU,EAKDtU,OACAyjC,EANCnvB,EAMDmvB,eACAC,EAPCpvB,EAODovB,gBACAryC,EARCijB,EAQDjjB,KACA2c,EATCsG,EASDtG,KACApX,EAVC0d,EAUD1d,UACA8rE,EAXCpuD,EAWDouD,UAEJ,IAAKrxE,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CwZ,EAAM/hB,IAAU2I,WAAWJ,IAAS,GAEpCqqE,EAAgB/rE,EAAY7G,IAAUoI,QAAQvB,EAAU/D,KAAO+D,EAAU0B,KAAO,KAChF8xB,EAAer6B,IAAU2I,WAAWiqE,GACpC92C,EAAY5E,aAAmB,CAAEnnB,MAAO2jC,EAAgBzjC,OAAQ0jC,IAEhEk/B,EAAUxkD,aAAejnB,EAAQC,GACjCyrE,EAAcrkD,aAAmBrnB,EAAQC,GACzC0rE,EAAWzkD,aAAgBlnB,EAAQC,GACrC2rE,EAAajjE,EACbkjE,EAAchjE,EAClB,GAAI+U,KAAKkC,IAAI8rD,EAAYC,GAAe,IAAK,CACzC,IAAM9iE,EAAQ,IAAM6U,KAAKkC,IAAI8rD,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMjuD,KAAKC,MAAM+tD,EAAa7iE,IAC7B,IAAM6U,KAAKC,MAAMguD,EAAc9iE,GAG5E,IAAIxL,EAAU,KACd,GAAIkuE,EACAluE,EACIub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAA,SACIivB,IAAK97B,KAAKqgC,SACVtgB,UAAU,oCACV4B,IAAKA,EACL1B,QAASjgB,KAAK+xE,mBACdzQ,UAAQ,EACR5/B,UAAQ,EACR/xB,MAAOijE,EACP/iE,OAAQgjE,EACRtR,OAAQ,WACJ92D,EAAKia,SAAS,CAAE6tD,WAAW,IAC3B1wE,IAAgBgH,aAAa,CACzBC,QAAS,iCAGjBu9B,UAAW,WACP,IAAMtT,EAAStoB,EAAK41B,SAASzS,QACzBmF,IACAA,EAAOjC,OAASR,KAAYQ,SAGpC0wC,QAAS,WACL3/D,IAAgBgH,aAAa,CACzBC,QAAS,kCAGjB44D,QAAS,WACL7/D,IAAgBgH,aAAa,CACzBC,QAAS,kCAGjBgqE,eAAgB,WACZ,IAAM//C,EAAStoB,EAAK41B,SAASzS,QACzBmF,GACAlxB,IAAgBgH,aAAa,CACzBC,QAAS,0BACTgoB,OAAQiC,EAAOjC,aAK7ByhD,KACI5wD,GAAOsY,EACLna,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,uCAAwC,CAC1Dib,gBAAiBL,IAErB/Z,IAAKsY,EACLjY,IAAI,GACJrS,MAAOijE,EACP/iE,OAAQgjE,IAGZ/yD,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,uCACVjT,MAAO,CACH6C,MAAOijE,EACP/iE,OAAQgjE,YAM7B,GAAIH,EACPnuE,EACIub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAA,SACIkT,UAAU,oCACV4B,IAAKA,EACL1B,QAASjgB,KAAK+xE,mBACdpwC,MAAI,EACJD,UAAQ,EACR/xB,MAAOijE,EACP/iE,OAAQgjE,EACRtR,OAAQ,WACJ92D,EAAKia,SAAS,CAAE6tD,WAAW,QAGjCA,KACI5wD,GAAOsY,EACLna,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAW,uCAAwC,CAC1Dib,gBAAiBL,IAErB/Z,IAAKsY,EACLjY,IAAI,GACJrS,MAAOijE,EACP/iE,OAAQgjE,IAGZ/yD,EAAAtf,EAAAqM,cAAA,OACIkT,UAAU,uCACVjT,MAAO,CACH6C,MAAOijE,EACP/iE,OAAQgjE,YAM7B,GAAIF,EAAU,CACjB,IAAMI,EAAiB,CACnBpxC,MAAM,EACNqxC,UAAU,EAEVhC,cAAeA,EACfiC,iBAAkB,CACdC,oBAAqB,mBAGrBjB,EAAUjyE,KAAKokB,MAAf6tD,MAER1tE,EACIub,EAAAtf,EAAAqM,cAAC6jE,GAAD,CACI50C,IAAK97B,KAAKkyE,UACVD,MAAOA,EACPhpD,QAAS8pD,EACTljE,OAAO,OACPF,MAAO,IACPwjE,WAAW,EACXC,UAAU,SAIlB7uE,EAAUub,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAASjgB,KAAK+xE,qBAGzF,OACIjyD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAACiT,EAAAtf,EAAM24C,SAAP,CAAgBC,SAAS,IAAI70C,GAE7Bub,EAAAtf,EAAAqM,cAACqsB,GAAA,EAAD,CAAch4B,KAAMA,EAAMw1B,OAAQ,IACjC7Y,GAAQA,EAAK7X,OAAS,GAAK8Z,EAAAtf,EAAAqM,cAACwmE,GAAD,CAAcx1D,KAAMA,wDAnU5B2B,EAAO4E,GAAO,IAClCpd,EAA4BwY,EAA5BxY,OAAQC,EAAoBuY,EAApBvY,UAAWmF,EAASoT,EAATpT,KAE3B,GAAIpF,IAAWod,EAAM0e,YAAc77B,IAAcmd,EAAMmpD,cAAe,KAAA+F,EACtCnhE,YAAanL,EAAQC,EAAWmF,GADMmnE,EAAAzzE,OAAA4+C,EAAA,EAAA5+C,CAAAwzE,EAAA,GAC7D3jE,EAD6D4jE,EAAA,GACtD1jE,EADsD0jE,EAAA,GAC9CryE,EAD8CqyE,EAAA,GAElEryE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAFiC,IAAAsyE,EAIfthE,YAAoBlL,EAAQC,GAJbwsE,EAAA3zE,OAAA4+C,EAAA,EAAA5+C,CAAA0zE,EAAA,GAI7DlgC,EAJ6DmgC,EAAA,GAI7ClgC,EAJ6CkgC,EAAA,GAI5BhtE,EAJ4BgtE,EAAA,GAKlEhtE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GAGzC,MAAO,CACHgrE,MAAO,EACPnvC,WAAY97B,EACZumE,cAAetmE,EACfsrE,WAAW,EACX5iE,MAAOA,EACPE,OAAQA,EACR3O,KAAMA,EACN2c,KAVSqO,aAAQ5nB,GAWjBgvC,eAAgBA,EAChBC,gBAAiBA,EACjB9sC,UAAWA,GAInB,OAAO,YAlEkByZ,IAAMC,WCqBxBuzD,sNA/BX/tD,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAAAtG,EAGW1f,EAAK2f,MAA3BwqB,EAHWzqB,EAGXyqB,SAAU/pB,EAHCV,EAGDU,QAEd+pB,GAEJ/pB,EAAQzU,4EAGH,IAAAkV,EACgC1gB,KAAKwf,MAAlCwqB,EADHtpB,EACGspB,SAAU2pC,EADbjzD,EACaizD,KAAMC,EADnBlzD,EACmBkzD,SAElB7zD,EAAYe,IACdkpB,EAAW,+BAAiC,sBAC5C,CAAE2pC,KAAMA,IAGZ,OACI7zD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWA,EAAWE,QAASjgB,KAAK2lB,aACpCiuD,UArBe1zD,IAAMC,YCyBvB0zD,4LAzBF,IAAAt0D,EACuBvf,KAAKwf,MAAzBzE,EADHwE,EACGxE,MAAOwnB,EADVhjB,EACUgjB,SAEf,OACIziB,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,4BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCACXD,EAAAtf,EAAAqM,cAAA,YAAOkO,GAEHqC,QAAQmlB,IACJziB,EAAAtf,EAAAqM,cAAA,mBAEK01B,YAZGriB,IAAMC,YCCpC2zD,sNACFnuD,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAAAtG,EAGW1f,EAAK2f,MAA3BS,EAHWV,EAGXU,QAHWV,EAGFyqB,UAIjB/pB,EAAQzU,4EAGH,IAAAkV,EACmD1gB,KAAKwf,MAArDqD,EADHnC,EACGmC,QAAS+wD,EADZlzD,EACYkzD,SAAUjzD,EADtBD,EACsBC,QAASqpB,EAD/BtpB,EAC+BspB,SAAUjvB,EADzC2F,EACyC3F,MAE9C,OACI+E,EAAAtf,EAAAqM,cAAA,OACIkT,UAAWe,IAAWkpB,EAAW,sCAAwC,6BAApDlqC,OAAA0mB,GAAA,EAAA1mB,CAAA,GAChB6gB,EAAQkC,QAAUA,IAEvB9H,MAAOA,EACPkF,QAASjgB,KAAK2lB,aACbiuD,UArBqB1zD,IAAMC,YAkC7BgB,OAxCA,SAAAC,GAAK,MAAK,CACrByB,QAAS,CACLV,MAAOf,EAAMkU,QAAQ4K,QAAQC,QAsCtBhf,CAAmB2yD,yBCvC5BC,GAAY,CACdvwD,QAAS,GACTrB,MAAO,SAGL6xD,eACF,SAAAA,EAAYx0D,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAg0E,IACfn0E,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAk0E,GAAA7zE,KAAAH,KAAMwf,KA4CVsgD,wBAA0B,SAAAn/D,GAAU,IACxBoH,EAAWlI,EAAKukB,MAAhBrc,OAEJA,IAAWpH,EAAOoH,QAClBlI,EAAK6kB,SAAS,CACVslB,SAAUgqC,EAA0BC,aAAalsE,MAlD1ClI,EA2DnB8lB,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAGX5F,EAAYpgB,EAAK2f,MAAjBS,QACapgB,EAAKukB,MAAlB4lB,UAGR/pB,EAAQzU,IAlEO,IAGPzD,EAAWyX,EAAXzX,OAHO,OAKflI,EAAKukB,MAAQ,CACT8vD,gBAAiBnsE,EACjBA,OAAQA,EACRiiC,SAAUgqC,EAA0BC,aAAalsE,IARtClI,mFA4BfD,IAAU8hB,GAAG,4BAA6B1hB,KAAK8/D,yBAC/ClgE,IAAU8hB,GAAG,uBAAwB1hB,KAAK8/D,yBAC1ClgE,IAAU8hB,GAAG,2BAA4B1hB,KAAK8/D,yBAC9ClgE,IAAU8hB,GAAG,wBAAyB1hB,KAAK8/D,yBAC3ClgE,IAAU8hB,GAAG,uBAAwB1hB,KAAK8/D,yBAC1ClgE,IAAU8hB,GAAG,wBAAyB1hB,KAAK8/D,wEAI3ClgE,IAAUoC,eAAe,4BAA6BhC,KAAK8/D,yBAC3DlgE,IAAUoC,eAAe,uBAAwBhC,KAAK8/D,yBACtDlgE,IAAUoC,eAAe,2BAA4BhC,KAAK8/D,yBAC1DlgE,IAAUoC,eAAe,wBAAyBhC,KAAK8/D,yBACvDlgE,IAAUoC,eAAe,uBAAwBhC,KAAK8/D,yBACtDlgE,IAAUoC,eAAe,wBAAyBhC,KAAK8/D,0DA2BlD,IACG/kD,EAAU/a,KAAKwf,MAAfzE,MACAivB,EAAahqC,KAAKokB,MAAlB4lB,SAER,OACIlqB,EAAAtf,EAAAqM,cAACsnE,GAAD,CAAyBnqC,SAAUA,EAAUjvB,MAAOA,EAAOkF,QAASjgB,KAAK2lB,aACrE7F,EAAAtf,EAAAqM,cAACunE,GAAA5zE,EAAD,CAAUsM,MAAOinE,yDA/DGv0D,EAAO4E,GAAO,IAClCrc,EAAWyX,EAAXzX,OAGR,OAAIA,IAFwBqc,EAApB8vD,gBAGG,CACHA,gBAAiBnsE,EACjBA,OAAQA,EACRiiC,SAAUgqC,EAA0BC,aAAalsE,IAIlD,YAzByBmY,IAAMC,WAAxC6zD,GAwDKC,aAAe,SAAAlsE,GAClB,OAAQqV,QAAQxd,IAAUoI,QAAQD,KA+B3BisE,UC7CTK,WAAmB,CACrB7wD,QAAS,GACT8wD,UAAW,eAGTP,GAAY,CACdvwD,QAAS,IAGP+wD,GAAsB,CACxB/wD,QAAS,IAGPgxD,eACF,SAAAA,EAAYh1D,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAw0E,IACf30E,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA00E,GAAAr0E,KAAAH,KAAMwf,KA4FVsuB,UAAY,SAAAtiC,GACR,GAAsB,KAAlBA,EAAMigC,QAAgB,CAEtB,GADqC5rC,EAAKukB,MAAlCqwD,yBACsB,OAE9B50E,EAAK4wC,mBACoB,KAAlBjlC,EAAMigC,QACb5rC,EAAKsgE,aACoB,KAAlB30D,EAAMigC,SACb5rC,EAAK60E,kBAtGM70E,EA0GnB8lE,uBAAyB,SAAAhlE,GAAU,IACvByF,EAAkDzF,EAAlDyF,QAASkY,EAAyC3d,EAAzC2d,WAAYK,EAA6Bhe,EAA7Bge,YAAaD,EAAgB/d,EAAhB+d,YAClC1X,EAAWnH,EAAK2f,MAAhBxY,OAFuBmd,EAGUtkB,EAAKukB,MAAtCuwD,EAHuBxwD,EAGvBwwD,iBAAkBriD,EAHKnO,EAGLmO,WAE1B,GAAItrB,IAAWZ,EAAf,CAEA,IAAM9B,EAAUsJ,IAAa3K,IAAImD,EAASkY,GAC1C,GAAKha,EAAL,CAKA,GAHAiO,YAAuB,CAACjO,IAEL0pB,aAAerP,KAAiBqP,aAAetP,GAClD,CACZ,GACI7e,EAAK8S,QAAQ3M,QAAU,IACtBnG,EAAK+0E,kBACFC,aAAQv2D,EAAYze,EAAK8S,QAAQ,GAAGjQ,GAAI7C,EAAK8S,QAAQ9S,EAAK8S,QAAQ3M,OAAS,GAAGtD,KACpF,CAGE,IAFA,IAAIoyE,GAAW,EACXniE,EAAU,GACL7M,EAAI,EAAGA,EAAIjG,EAAK8S,QAAQ3M,OAAQF,IACjCjG,EAAK8S,QAAQ7M,GAAGpD,GAAK4b,EACrB3L,EAAQnJ,KAAK3J,EAAK8S,QAAQ7M,KAErBgvE,IACDA,GAAW,EACXniE,EAAQnJ,KAAKlF,IAEjBqO,EAAQnJ,KAAK3J,EAAK8S,QAAQ7M,KAGlCjG,EAAK8S,QAAUA,EAGnB,IAAMD,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IACnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxC4f,WAAYA,EAAa,IAKjC,IADuBtE,aAAerP,IAAgBqP,aAAetP,GAClD,CACf,IAAIu2D,EAAap1E,EAAK8S,QAGtB,GAFA9S,EAAK8S,QAAU9S,EAAK8S,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAElJ,KAAO4b,IAE7Cq2D,IAAqBr2D,EAAY,CACjC,IAAM42D,EAAY,IAAIhsE,IACtBgsE,EAAUj0E,IAAIqd,EAAYA,GAE1Bze,EAAKuxB,gBAAgB6jD,EAAYC,GACjCr1E,EAAK6kB,SAAS,CACV4N,WAAY1N,KAAKkC,IAAIwL,EAAa,EAAG,SAEtC,CACH,IAAM5f,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IACnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxC4f,WAAY1N,KAAKkC,IAAIwL,EAAa,EAAG,UAvKlCzyB,EA6KnByrE,uBAAyB,SAAA3qE,GAAU,IACvByF,EAAuCzF,EAAvCyF,QAAS2F,EAA8BpL,EAA9BoL,YAAaw/D,EAAiB5qE,EAAjB4qE,aACtBvkE,EAAWnH,EAAK2f,MAAhBxY,OAFuB+7B,EAGUljC,EAAKukB,MAAtCuwD,EAHuB5xC,EAGvB4xC,iBAAkBriD,EAHKyQ,EAGLzQ,WAE1B,GAAKi5C,GACDvkE,IAAWZ,EAAf,CAEA,IAAM8uE,EAAYnpE,EAAY2hB,OAAO,SAACC,EAAawnD,GAE/C,OADAxnD,EAAY1sB,IAAIk0E,EAAWA,GACpBxnD,GACR,IAAIzkB,KAED+rE,EAAap1E,EAAK8S,QACpByiE,EAAeH,EAAWjvE,OAE9BnG,EAAK8S,QAAU9S,EAAK8S,QAAQ9G,OAAO,SAAAD,GAAC,OAAKspE,EAAUpyE,IAAI8I,EAAElJ,MACzD0yE,GAAgBv1E,EAAK8S,QAAQ3M,OAE7BnG,EAAK6kB,SAAS,CAAE4N,WAAY1N,KAAKkC,IAAIwL,EAAa8iD,EAAc,KAE3Dv1E,EAAK8S,QAAQ3M,OAKdkvE,EAAUpyE,IAAI6xE,IACd90E,EAAKuxB,gBAAgB6jD,EAAYC,GALjC38D,IAAiB0W,sBAAsB,QAnM5BpvB,EA4MnBsrE,mBAAqB,SAAAxqE,GAAU,IACnBqG,EAAWnH,EAAK2f,MAAhBxY,OADmBg+B,EAEcnlC,EAAKukB,MAAtCuwD,EAFmB3vC,EAEnB2vC,iBAAkBriD,EAFC0S,EAED1S,WAElBhuB,EAAY3D,EAAZ2D,QACR,GAAKA,GACA0pB,aAAe1pB,EAAQC,UAExBD,EAAQ8B,UAAYY,GACnBnH,EAAK+0E,iBAAV,CAEA/0E,EAAK8S,QAAU,CAACrO,GAAS4G,OAAOrL,EAAK8S,SACrC,IAAMD,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAEnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxC4f,WAAYA,EAAa,MA7NdzyB,EAiOnBw1E,UAAY,SAACruE,EAAQC,GACjB,IAAM3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAFU,IAIvBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACHuE,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAjJ,EA8PnBy1E,YA9PmBx1E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA8PL,SAAAC,IAAA,IAAA6e,EAAAvY,EAAAC,EAAA4E,EAAA1B,EAAAwqE,EAAAjiE,EAAA6iE,EAAAC,EAAA37D,EAAAwR,EAAA,OAAAkE,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAwe,EACoB1f,EAAK2f,MAA3BxY,EADEuY,EACFvY,OAAQC,EADNsY,EACMtY,UAEV4E,EAAShM,EAAKw1E,UAAUruE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACT4E,SAAU,GACV0kB,YAAa,IAEbvmB,EAVM,CAAA1J,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAWSc,IAAgBkJ,KAAK,CAChCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO,GACPjhB,eAAgB,EAChBkhB,gBAAiBvrB,EACjBskB,QAASkqD,IACThjD,MAAO,EAAIgjD,IACX5pE,OAAQA,IAnBN,OAWN1B,EAXMhI,EAAA8I,KAAA,UAuBVwiB,aAAetjB,EAAQtK,EAAK8S,SAC5B/E,IAAaC,SAAS1D,EAAOuD,UAE7B7N,EAAK8S,QAAUxI,EAAOuD,SACtB7N,EAAK+0E,iBAA8C,IAA3BzqE,EAAOuD,SAAS1H,OAEhC2uE,EAAqB90E,EAAKukB,MAA1BuwD,iBACFjiE,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAEnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,MAG7B,IAAXA,EArCM,CAAAvQ,EAAApB,KAAA,SAsCNlB,EAAK8S,QAAU,CAAC/E,IAAa3K,IAAI+D,EAAQ2tE,IACzC/hE,YAA0B,EAAG/S,EAAK8S,SAvC5BxQ,EAAApB,KAAA,oBAyCN6R,YAA0BF,EAAO7S,EAAK8S,SAEhC9G,EAAShM,EAAKw1E,UAAUruE,EAAQC,GA3ChC,CAAA9E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA8CAm0E,EAAW,KACb37D,EAAQ,EA/CNwR,EAAAkE,EAAA/uB,EAAAC,KAAA,SAAA4qB,IAAA,IAAAlhB,EAAAwqE,EAAAjiE,EAAA,OAAA6c,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmBc,IAAgBkJ,KAAK,CACtCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO,GACPjhB,eAAgB,EAChBkhB,gBAAiB3yB,EAAK8S,QAAQ3M,OAAS,EAAInG,EAAK8S,QAAQ,GAAGjQ,GAAK,EAChE6oB,QAAS,GACTkH,MAAO,IACP5mB,OAAQA,IAzDV,OAiDI1B,EAjDJtJ,EAAAoK,KA2DF4O,GAAS1P,EAAOuD,SAAS1H,OAEzBynB,aAAetjB,EAAQtK,EAAK8S,SAC5B/E,IAAaC,SAAS1D,EAAOuD,UAE7B7N,EAAK8S,QAAUxI,EAAOuD,SAASxC,OAAOrL,EAAK8S,SAC3C9S,EAAK+0E,iBAA8C,IAA3BzqE,EAAOuD,SAAS1H,OAEhC2uE,EAAqB90E,EAAKukB,MAA1BuwD,iBACFjiE,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAEnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxCkiE,iBAAkB/0E,EAAK+0E,iBACvBtiD,WAAYnoB,EAAOioB,cA1ErB,yBAAAvxB,EAAAU,SAAA8pB,KAAA,WAgDExrB,EAAK+0E,oBAAoB/6D,EAAQ27D,GAhDnC,CAAArzE,EAAApB,KAAA,gBAAAoB,EAAAuzE,cAAArqD,IAAA,iBAAAlpB,EAAApB,KAAA,kCAAAoB,EAAAZ,SAAAb,MA9PKb,EA8UnB4wC,YAAc,WACVl4B,IAAiB0W,sBAAsB,MADvB,IAGR0lD,EAAqB90E,EAAKukB,MAA1BuwD,iBACFjiE,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,KACpC,IAAXjiE,GACAD,YAAgCC,EAAO7S,EAAK8S,UApVjC9S,EAwVnB81E,cAAgB,SAACnxE,EAAWF,GACxB,GAAKA,EAAL,CADoC,IAE5B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK8B,EAAL,CAJoC,IAMjBtD,EAAoBsD,EAA/BA,UAAiB2pB,EAAc3pB,EAAd2pB,UACzB,GAAKjtB,EAAL,CAPoC,IASxB6G,EAAW7G,EAAfwB,GAERkP,YAAe1Q,EAAMitB,GAAazrB,EAAI4B,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIqF,SAnWjFlI,EAsWnB+1E,aAAe,SAAC9wE,EAAUR,GACtB,GAAKA,EAAL,CADkC,IAE1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKoC,EAAL,CAJkC,IAMhB5D,EAAoB4D,EAA9BA,SAAgBqpB,EAAcrpB,EAAdqpB,UACxB,GAAKjtB,EAAL,CAPkC,IAStB6G,EAAW7G,EAAfwB,GAERkP,YAAe1Q,EAAMitB,GAAazrB,EAAI4B,EAAS,kBAAM1E,IAAU+G,mBAAmBP,EAAS1D,EAAIqF,SAjXhFlI,EAoXnBg2E,UAAY,SAACvwE,EAAOhB,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK4C,EAAL,CAJ4B,IAMbpE,EAAoBoE,EAA3BA,MAAa6oB,EAAc7oB,EAAd6oB,UACrB,GAAKjtB,EAAL,CAP4B,IAShB6G,EAAW7G,EAAfwB,GAERkP,YAAe1Q,EAAMitB,GAAazrB,EAAI4B,EAAS,kBAAM1E,IAAU+H,gBAAgBvB,EAAS1D,EAAIqF,SA/X7ElI,EAkYnBi2E,UAAY,SAAClxE,EAAON,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKkC,EAAL,CAEA,IAAMqB,EAAYiK,aAAQtL,EAAMmB,MAAOoK,KACvC,GAAKlK,EAAL,CAP4B,IASb/E,EAAS+E,EAAhBrB,MACR,GAAK1D,EAAL,CAV4B,IAYhB6G,EAAW7G,EAAfwB,GAERkP,YAAe1Q,EAAMA,EAAKwB,GAAK,OAAQ4B,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIqF,UAhZ9ElI,EAmZnBk2E,WAAa,WAAM,IACP/uE,EAAWnH,EAAK2f,MAAhBxY,OACA2tE,EAAqB90E,EAAKukB,MAA1BuwD,iBAEFrwE,EAAUsJ,IAAa3K,IAAI+D,EAAQ2tE,GACzC,GAAKrwE,EAAL,CALe,IAOPC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAK81E,cAAcnxE,EAAWF,GAC9B,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKi2E,UAAUlxE,EAAON,GACtB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAK+1E,aAAa9wE,EAAUR,GAC5B,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKi2E,UAAUlxE,EAAON,GACtB,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,OAFC,IAIRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAEpC,GAAId,EAEA,YADA3E,EAAK81E,cAAcnxE,EAAWF,GAIlC,GAAIQ,EAEA,YADAjF,EAAK+1E,aAAa9wE,EAAUR,GAIhC,GAAIM,EAEA,YADA/E,EAAKi2E,UAAUlxE,EAAON,GAI1B,GAAIgB,EAEA,YADAzF,EAAKg2E,UAAUvwE,EAAOhB,GAG1B,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAKg2E,UAAUvwE,EAAOhB,MApdfzE,EA0dnB44D,cAAgB,WAAM,IACVzxD,EAAWnH,EAAK2f,MAAhBxY,OACA2tE,EAAqB90E,EAAKukB,MAA1BuwD,iBAER9yE,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,CACFj8C,OAAQA,EACRyG,WAAY,CAACknE,OAleN90E,EAuenBisC,aAAe,WACXjsC,EAAKm2E,oBAxeUn2E,EAigBnBm1E,iBAAmB,SAAAtiE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP7S,EAAK8S,QAAQ3M,QArgBjBnG,EAwgBnB60E,eAAiB,SAAAlpE,GACTA,GACAA,EAAMqa,kBAFY,IAKd8uD,EAAqB90E,EAAKukB,MAA1BuwD,iBAEF5iD,EADQlyB,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IACzB,EAE1B,OAAO90E,EAAKo2E,UAAUlkD,EAAW,WACzBA,IAAclyB,EAAK8S,QAAQ3M,OAAS,GACpCnG,EAAKq2E,kBAnhBEr2E,EAwhBnBq2E,aAxhBmBp2E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAwhBJ,SAAAyB,IAAA,IAAAqmB,EAAAvhB,EAAAC,EAAA0tE,EAAA9oE,EAAA1B,EAAAuI,EAAA,OAAA6c,EAAA/uB,EAAAI,KAAA,SAAAi+C,GAAA,cAAAA,EAAA/9C,KAAA+9C,EAAA99C,MAAA,UAAAwnB,EACmB1oB,EAAK2f,MAA3BxY,EADGuhB,EACHvhB,OAAQC,EADLshB,EACKthB,UACR0tE,EAAqB90E,EAAKukB,MAA1BuwD,iBAEF9oE,EAAShM,EAAKw1E,UAAUruE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACT4E,SAAU,GACV0kB,YAAa,IAEbvmB,EAXO,CAAAgzC,EAAA99C,KAAA,eAAA89C,EAAA99C,KAAA,EAYQc,IAAgBkJ,KAAK,CAChCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO,GACPjhB,eAAgB,EAChBkhB,gBAAiBmiD,EACjBppD,OAAQ,EACRkH,MAAOgjD,IACP5pE,OAAQA,IApBL,OAYP1B,EAZO00C,EAAA5zC,KAAA,OAwBXwiB,aAAetjB,EAAQtK,EAAK8S,SAC5B/E,IAAaC,SAAS1D,EAAOuD,UAE7B7N,EAAK8S,QAAU9S,EAAK8S,QAAQzH,OAAOf,EAAOuD,UAEpCgF,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAEnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxC4f,WAAYnoB,EAAOioB,cAlCZ,yBAAAysB,EAAAt9C,SAAAW,MAxhBIrC,EA8jBnBk1E,aAAe,SAAAriE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL7S,EAqkBnBsgE,WAAa,SAAA30D,GACLA,GACAA,EAAMqa,kBAFQ,IAKV8uD,EAAqB90E,EAAKukB,MAA1BuwD,iBAEF5iD,EADQlyB,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IACzB,EAE1B,OAAO90E,EAAKo2E,UAAUlkD,EAAW,WACX,IAAdA,GACAlyB,EAAKs2E,cAhlBEt2E,EAqlBnBs2E,SArlBmBr2E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAqlBR,SAAAm+C,IAAA,IAAA71B,EAAA/hB,EAAAC,EAAA0tE,EAAA9oE,EAAA1B,EAAAuI,EAAA,OAAA6c,EAAA/uB,EAAAI,KAAA,SAAAkK,GAAA,cAAAA,EAAAhK,KAAAgK,EAAA/J,MAAA,UAAAgoB,EACuBlpB,EAAK2f,MAA3BxY,EADD+hB,EACC/hB,OAAQC,EADT8hB,EACS9hB,UACR0tE,EAAqB90E,EAAKukB,MAA1BuwD,iBAEF9oE,EAAShM,EAAKw1E,UAAUruE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACT4E,SAAU,GACV0kB,YAAa,IAEbvmB,EAXG,CAAAf,EAAA/J,KAAA,eAAA+J,EAAA/J,KAAA,EAYYc,IAAgBkJ,KAAK,CAChCjC,QAAS,qBACT1C,QAASY,EACTurB,MAAO,GACPjhB,eAAgB,EAChBkhB,gBAAiBmiD,EACjBppD,QAASkqD,IACThjD,MAAOgjD,IAAoB,EAC3B5pE,OAAQA,IApBT,OAYH1B,EAZGW,EAAAG,KAAA,OAwBPwiB,aAAetjB,EAAQtK,EAAK8S,SAC5B/E,IAAaC,SAAS1D,EAAOuD,UAE7B7N,EAAK+0E,iBAA8C,IAA3BzqE,EAAOuD,SAAS1H,OACxCnG,EAAK8S,QAAUxI,EAAOuD,SAASxC,OAAOrL,EAAK8S,SAErCD,EAAQ7S,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAEnD90E,EAAK6kB,SAAS,CACVqwD,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,GACxCkiE,iBAAkB/0E,EAAK+0E,iBACvBtiD,WAAYnoB,EAAOioB,cApChB,yBAAAtnB,EAAAvJ,SAAAq9C,MArlBQ/+C,EA6nBnBo2E,UAAY,SAACvjE,EAAOrJ,GAChB,QAAIqJ,EAAQ,OACRA,GAAS7S,EAAK8S,QAAQ3M,UAE1BnG,EAAK6kB,SACD,CACIiwD,iBAAkB90E,EAAK8S,QAAQD,GAAOhQ,GACtCqyE,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,IAE5CrJ,GAGJuJ,YAA0BF,EAAO7S,EAAK8S,UAC/B,KA3oBQ9S,EA8oBnBuxB,gBAAkB,SAAC6jD,EAAYC,GAK3B,IALyC,IACjCP,EAAqB90E,EAAKukB,MAA1BuwD,iBAEFjiE,EAAQuiE,EAAWrjD,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,IAC7CyB,EAAS,EACJtwE,EAAI4M,EAAQ,EAAG5M,GAAK,EAAGA,IAC5B,GAAIovE,IAAcA,EAAUpyE,IAAImyE,EAAWnvE,GAAGpD,IAAK,CAC/C0zE,EAASnB,EAAWnvE,GAAGpD,GACvB,MAGR,IAAK0zE,EACD,IAAK,IAAItwE,EAAI4M,EAAQ,EAAG5M,EAAImvE,EAAWjvE,OAAQF,IAC3C,GAAIovE,IAAcA,EAAUpyE,IAAImyE,EAAWnvE,GAAGpD,IAAK,CAC/C0zE,EAASnB,EAAWnvE,GAAGpD,GACvB,MAKZ,GAAK0zE,EAAL,CAEA,IAAMrkD,EAAYlyB,EAAK8S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAO0zE,IAEvD,OAAOv2E,EAAKo2E,UAAUlkD,EAAW,WACX,IAAdA,EACAlyB,EAAKs2E,WACEpkD,IAAclyB,EAAK8S,QAAQ3M,OAAS,GAC3CnG,EAAKq2E,mBA1qBEr2E,EA+qBnBm2E,iBAAmB,WACfn2E,EAAK6kB,SAAS,CAAE+vD,0BAA0B,KAhrB3B50E,EAmrBnBw2E,kBAAoB,WAChBx2E,EAAK6kB,SAAS,CAAE+vD,0BAA0B,KAprB3B50E,EAurBnBiyD,WAAa,WACTjyD,EAAK6kB,SAAS,CAAE+vD,0BAA0B,IAD3B,IAGPztE,EAAWnH,EAAK2f,MAAhBxY,OAHOq+B,EAI4BxlC,EAAKukB,MAAxCuwD,EAJOtvC,EAIPsvC,iBAAkB2B,EAJXjxC,EAIWixC,aAEpBhyE,EAAUsJ,IAAa3K,IAAI+D,EAAQ2tE,GACzC,GAAKrwE,EAAL,CAPe,IASPm1D,EAA+Dn1D,EAA/Dm1D,6BAA8BrB,EAAiC9zD,EAAjC8zD,8BACjBqB,GAAgCrB,IAGrDv2D,IAAgBkJ,KAAK,CACjBjC,QAAS,iBACT1C,QAASY,EACT+E,YAAa,CAAC4oE,GACd3oE,OAAQosD,GAAgCke,MAxsB7Bz2E,EA4sBnB02E,yBAA2B,SAAA/qE,GACvB3L,EAAK6kB,SAAS,CAAE4xD,aAAc9qE,EAAMC,OAAOoX,WA7sB5BhjB,EAgtBnB22E,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuB52E,EAAKukB,MAApBiR,YAIJ,IAAK,uBACDohD,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB52E,EAAK6kB,SAAS,CACV2Q,WAAYohD,KApuBD52E,EAwuBnB62E,kBAAoB,WAChB,GAAK72E,EAAK82E,WAAV,CADsB,IAGd/oD,EAAY/tB,EAAK82E,WAAjB/oD,QACR,GAAKA,EAAL,CAJsB,IAOhBgpD,EADY/2E,EAAKukB,MAAf6tD,MACkB,EAAI,EAAI,GAElCpyE,EAAK6kB,SAAS,CAAEutD,MAAO2E,IAEvBhpD,EAAQokD,YAAY4E,MAnvBL/2E,EAsvBnB65D,eAAiB,SAAC1yD,EAAQC,GACtB,IAAM3C,EAAUsJ,IAAa3K,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFe,IAI5Bs/C,EAA8Bt/C,EAA9Bs/C,iBAAkBr/C,EAAYD,EAAZC,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOq/C,IA/vBf/jD,EAAK82E,WAAaz2D,IAAMqb,YACxB17B,EAAK8S,QAAU,GAJA,IAAA2xB,EAMezkC,EAAK2f,MAA3BxY,EANOs9B,EAMPt9B,OAAQC,EANDq9B,EAMCr9B,UAND,OAQfpH,EAAKukB,MAAQ,CACT6tD,MAAO,EACP58C,WAAY,uBACZyN,WAAY97B,EACZumE,cAAetmE,EACf0tE,iBAAkB1tE,EAClB8tE,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,EAC1B6B,cAAc,GAjBHz2E,qFAqBGklB,EAAWC,GAAW,IAAAkhB,EACVlmC,KAAKwf,MAA3BxY,EADgCk/B,EAChCl/B,OAAQC,EADwBi/B,EACxBj/B,UADwBq+B,EAWpCtlC,KAAKokB,MARLiR,EAHoCiQ,EAGpCjQ,WACAs/C,EAJoCrvC,EAIpCqvC,iBACAF,EALoCnvC,EAKpCmvC,yBACAG,EANoCtvC,EAMpCsvC,iBACAG,EAPoCzvC,EAOpCyvC,aACAC,EARoC1vC,EAQpC0vC,iBACA/C,EAToC3sC,EASpC2sC,MACA3/C,EAVoCgT,EAUpChT,WAGJ,OAAItN,EAAUqQ,aAAeA,IAIzBtQ,EAAU/d,SAAWA,IAIrB+d,EAAU9d,YAAcA,IAIxB+d,EAAU2vD,mBAAqBA,IAI/B3vD,EAAU6xD,kBAAoB7B,IAI9BhwD,EAAU+vD,eAAiBA,IAI3B/vD,EAAU4vD,mBAAqBA,IAI/B5vD,EAAUsN,aAAeA,IAIzBtN,EAAUyvD,2BAA6BA,GAIvCzvD,EAAUitD,QAAUA,sDAQxBjyE,KAAKs1E,cAELxwE,SAASgkE,iBAAiB,UAAW9oE,KAAK8tC,WAAW,GACrDlgC,IAAa8T,GAAG,uBAAwB1hB,KAAKsrE,wBAC7C19D,IAAa8T,GAAG,mBAAoB1hB,KAAKmrE,oBACzCv9D,IAAa8T,GAAG,uBAAwB1hB,KAAK2lE,uEAI7C7gE,SAASkkE,oBAAoB,UAAWhpE,KAAK8tC,WAAW,GACxDlgC,IAAa5L,eAAe,uBAAwBhC,KAAKsrE,wBACzD19D,IAAa5L,eAAe,mBAAoBhC,KAAKmrE,oBACrDv9D,IAAa5L,eAAe,uBAAwBhC,KAAK2lE,yDA6qBpD,IAAAI,EACiB/lE,KAAKwf,MAAnBxY,EADH++D,EACG/+D,OAAQwQ,EADXuuD,EACWvuD,EADXs/D,EAYD92E,KAAKokB,MATLiR,EAHCyhD,EAGDzhD,WACAs/C,EAJCmC,EAIDnC,iBACAF,EALCqC,EAKDrC,yBACA6B,EANCQ,EAMDR,aACA1B,EAPCkC,EAODlC,iBACAG,EARC+B,EAQD/B,aACAC,EATC8B,EASD9B,iBACA/C,EAVC6E,EAUD7E,MACA3/C,EAXCwkD,EAWDxkD,WAGA5f,GAAS,EACT4f,GAAcsiD,IACdliE,EAAQ1S,KAAK2S,QAAQif,UAAU,SAAAhmB,GAAC,OAAIA,EAAElJ,KAAOiyE,KAEjD,IAAMa,EAAW5wD,KAAKkC,IAAI9mB,KAAK2S,QAAQ3M,OAAQssB,GAEzChuB,EAAUsJ,IAAa3K,IAAI+D,EAAQ2tE,GACjCvc,EAA+D9zD,EAA/D8zD,6BAA8BqB,EAAiCn1D,EAAjCm1D,6BAEhCP,EAAed,GAAgCqB,EAC/CC,EAAiB15D,KAAK05D,eAAe1yD,EAAQ2tE,GAE/CoC,EAA4B,GAE5BA,EADA9oD,aAAejnB,EAAQ2tE,GACKn9D,EAAE,yBACvB6W,aAAmBrnB,EAAQ2tE,GACNn9D,EAAE,uBAEFA,EAAE,yBAElC,IAAMw/D,EAAqBvC,EACvB30D,EAAAtf,EAAAqM,cAACwd,EAAA7pB,EAAD,CACI8pB,mBAAoB,EACpBrgB,KAAMwqE,EACN9qD,QAAS3pB,KAAKq2E,kBACd9rD,kBAAgB,qBAChBzK,EAAAtf,EAAAqM,cAAC2d,EAAAhqB,EAAD,CAAakC,GAAG,qBAAqB8U,EAAE,YACvCsI,EAAAtf,EAAAqM,cAAC4d,GAAAjqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC6d,GAAAlqB,EAAD,KAAoBu2E,GACnB3e,GACGt4C,EAAAtf,EAAAqM,cAAC6iD,GAAAlvD,EAAD,CACIktD,MAAOl2C,EAAE,gBACTm4C,QACI7vC,EAAAtf,EAAAqM,cAACutD,GAAA55D,EAAD,CAAU2hB,MAAM,UAAU1M,MAAM,YAAY+M,SAAUxiB,KAAKu2E,2BAE/D1zD,QAASyzD,KAIrBx2D,EAAAtf,EAAAqM,cAAC8d,EAAAnqB,EAAD,KACIsf,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAKq2E,kBAAmBl0D,MAAM,WAC1C3K,EAAE,WAEPsI,EAAAtf,EAAAqM,cAAC+d,EAAApqB,EAAD,CAAQyf,QAASjgB,KAAK8xD,WAAY3vC,MAAM,WACnC3K,EAAE,SAIf,KA9DCs5D,EAgEyB3+D,YAAanL,EAAQ2tE,EAAkBxkE,KAhEhE4gE,EAAAjxE,OAAA4+C,EAAA,EAAA5+C,CAAAgxE,EAAA,GAgEiB5vE,GAhEjB6vE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkEChpE,EAAS7G,EAAOA,EAAKwB,GAAK,EAC5BqY,EAAQvD,EAAE,eASd,OARIyW,aAAejnB,EAAQ2tE,GACvB55D,EAAQvD,EAAE,eACH6W,aAAmBrnB,EAAQ2tE,GAClC55D,EAAQvD,EAAE,aACH0W,aAAgBlnB,EAAQ2tE,KAC/B55D,EAAQ,IAIR+E,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBuU,IACtC2hD,EACDl3D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBAAuBE,QAASjgB,KAAK00E,gBAChD50D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,4BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCACfD,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBjtC,UAAWgrC,EAAkBrB,MAAI,EAAC1zD,QAASjgB,KAAK00E,gBAC/D50D,EAAAtf,EAAAqM,cAACqqE,GAAA12E,EAAD,CAAoB0hB,SAAS,QAAQpV,MAAOynE,OAIpDz0D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BACXD,EAAAtf,EAAAqM,cAACsqE,GAAD,CACIr7C,IAAK97B,KAAK22E,WACV3vE,OAAQA,EACRC,UAAW0tE,EACXvoE,KAAM+D,IACN8P,QAASjgB,KAAK00E,kBAItB50D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BACXD,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBh3D,QAASjgB,KAAKywC,aAC7B3wB,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,CAAW0hB,SAAS,QAAQpV,MAAOynE,MAEvCz0D,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBjtC,UAAW+qC,EAAcpB,MAAI,EAAC1zD,QAASjgB,KAAKmgE,YAC3DrgD,EAAAtf,EAAAqM,cAACuqE,GAAA52E,EAAD,CAAkB0hB,SAAS,QAAQpV,MAAOynE,QAItDz0D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAACwqE,GAAD,CAAoBrwE,OAAQA,EAAQC,UAAW0tE,IAC/C70D,EAAAtf,EAAAqM,cAACyqE,GAAD,CACIv8D,MAAOA,EACPwnB,SAAUizC,GAAY9iE,GAAS,EAArB,GAAAxH,OAA4BsqE,EAAW9iE,EAAvC,QAAAxH,OAAmDsqE,GAAa,OAE7EtnD,aAAgBlnB,EAAQ2tE,IACrB70D,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAACsnE,GAAD,CACIp5D,MAAOvD,EAAE,eACTqL,QAASovD,EAAQ,EACjBhyD,QAASjgB,KAAK02E,mBACd52D,EAAAtf,EAAAqM,cAAC0qE,GAAA/2E,EAAD,CAAqBsM,MAAOinE,MAEhCj0D,EAAAtf,EAAAqM,cAACsnE,GAAD,CACIp5D,MAAOvD,EAAE,yBACTyI,QAASjgB,KAAKw2E,oBACd12D,EAAAtf,EAAAqM,cAAC2qE,GAAAh3E,EAAD,CAAkBsM,MAAOinE,OAIrCj0D,EAAAtf,EAAAqM,cAAC4qE,GAAD,CAA2B18D,MAAOvD,EAAE,QAASzP,OAAQA,EAAQkY,QAASjgB,KAAK+1E,aAC3Ej2D,EAAAtf,EAAAqM,cAACsnE,GAAD,CACIp5D,MAAOvD,EAAE,WACTwyB,UAAW0vB,EACXz5C,QAASjgB,KAAKy4D,eACd34C,EAAAtf,EAAAqM,cAACulC,GAAA5xC,EAAD,CAAWsM,MAAOunE,MAEtBv0D,EAAAtf,EAAAqM,cAACsnE,GAAD,CAAyBp5D,MAAOvD,EAAE,UAAWwyB,UAAWkvB,EAAcj5C,QAASjgB,KAAK8rC,cAChFhsB,EAAAtf,EAAAqM,cAAC6qE,GAAAl3E,EAAD,CAAYsM,MAAOinE,eA/4BjB7zD,IAAMC,WA45BjBqH,iBAAkBgtD,ICz3BlBmD,uBA9FX,SAAAA,EAAYn4D,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA23E,IACf93E,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA63E,GAAAx3E,KAAAH,KAAMwf,KA0CVqW,uBAAyB,SAAAl1B,GAAU,IAAA4e,EACL1f,EAAK2f,MAAvBxY,EADuBuY,EACvBvY,OAAQpC,EADe2a,EACf3a,MAEhB,GAAIoC,IAAWrG,EAAOqG,QAAUpC,EAAMwO,IAAI1Q,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKukB,MAAMljB,KACxDrB,EAAK6kB,SAAS,CACVxjB,KAAMA,MAjDCrB,EAsDnBy8B,uBAAyB,SAAA37B,GAAU,IAAA+f,EACL7gB,EAAK2f,MAAvBxY,EADuB0Z,EACvB1Z,OAAQpC,EADe8b,EACf9b,MAGhB,GAFeyO,YAAcrM,KAEdrG,EAAOsL,QAAUrH,EAAMwO,IAAI1Q,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKukB,MAAMljB,KACxDrB,EAAK6kB,SAAS,CACVxjB,KAAMA,MA7DCrB,EAkEnBkyE,mBAAqB,SAAAvmE,GACbA,GAAOA,EAAMqa,kBAEjBhmB,EAAK2f,MAAMS,QAAQzU,IArEJ,IAAA+c,EAGW1oB,EAAK2f,MAAvBxY,EAHOuhB,EAGPvhB,OAAQpC,EAHD2jB,EAGC3jB,MAEL1D,EAAS0D,EAAdwO,IALS,OAMflS,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAEjCrB,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZ4wE,UAAWhzE,EACX+K,MAAOmlB,IACPjlB,OAAQilB,IACR5zB,KAAMA,GAbKrB,mFAkCfD,IAAU8hB,GAAG,uBAAwB1hB,KAAK61B,wBAC1Cj2B,IAAU8hB,GAAG,uBAAwB1hB,KAAKs8B,uEAI1C18B,IAAUoC,eAAe,uBAAwBhC,KAAK61B,wBACtDj2B,IAAUoC,eAAe,uBAAwBhC,KAAKs8B,yDAgCjD,IAAAnY,EAC2BnkB,KAAKokB,MAAdljB,GADlBijB,EACGxU,MADHwU,EACUtU,OADVsU,EACkBjjB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CwZ,EAAM/hB,IAAU2I,WAAWJ,GAEjC,OACI2X,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAASjgB,KAAK+xE,qBAE3EjyD,EAAAtf,EAAAqM,cAACqsB,GAAA,EAAD,CAAch4B,KAAMA,wDAlEAse,EAAO4E,GAAO,IAClCpd,EAAkBwY,EAAlBxY,OAAQpC,EAAU4a,EAAV5a,MAEhB,OAAIoC,IAAWod,EAAM0e,YAAcl+B,IAAUwf,EAAMwzD,UACxC,CACH90C,WAAY97B,EACZ4wE,UAAWhzE,EACX+K,MAAOmlB,IACPjlB,OAAQilB,IACR5zB,KAAM0D,EAAMwO,KAIb,YA/ByB8M,IAAMC,YCsC/B03D,eAhCX,SAAAA,EAAYr4D,GAAQ,OAAA1f,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA63E,GAAA/3E,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAA+3E,GAAA13E,KAAAH,KACVwf,0EAGD,IAAAD,EACoBvf,KAAKwf,MAAtBxY,EADHuY,EACGvY,OAAQ2R,EADX4G,EACW5G,KAEhB,OACImH,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,wBACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAC8oB,EAAA,EAAD,CAAiB3uB,OAAQA,EAAQ2T,mBAAmB,IACpDmF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gCACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oBACXD,EAAAtf,EAAAqM,cAAC4wB,GAAA,EAAD,CAAez2B,OAAQA,KAE1B2R,GACGmH,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,iCACXD,EAAAtf,EAAAqM,cAAA,QAAMkT,UAAU,gBAAgBpH,cAlBxBuH,IAAMC,WCiBxCk0D,GAAmB,CACrB7wD,QAAS,GACTrB,MAAO,QACPmyD,UAAW,cAGTwD,GAAkB,CACpBt0D,QAAS,GACTrB,MAAO,SAGLoyD,GAAsB,CACxB/wD,QAAS,GACTrB,MAAO,SAGL41D,eACF,SAAAA,EAAYv4D,GAAO,IAAA3f,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAA+3E,IACfl4E,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAi4E,GAAA53E,KAAAH,KAAMwf,KA4EVsuB,UAAY,SAAAtiC,GACR,GAAsB,KAAlBA,EAAMigC,QAAgB,CAEtB,GADqC5rC,EAAKukB,MAAlCqwD,yBACsB,OAE9B50E,EAAK4wC,mBACoB,KAAlBjlC,EAAMigC,QACb5rC,EAAK60E,iBACoB,KAAlBlpE,EAAMigC,SACb5rC,EAAKsgE,cAtFMtgE,EA0FnBy1E,YA1FmBx1E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA0FL,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAAolB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFiG,EAAWnH,EAAK2f,MAAhBxY,OAEH6U,YAAc7U,GAHT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKWc,IAAgBkJ,KAAK,CACtCjC,QAAS,uBACTmG,QAASoE,YAAcrM,GACvBukB,OAAQ,EACRkH,MAAO,MATD,OAKJtoB,EALItJ,EAAAoK,KAYVpL,EAAK8S,QAAUxI,EAAO8I,OACtBpT,EAAK+0E,iBAA4C,IAAzBzqE,EAAO8I,OAAOjN,OAExB,EAEdnG,EAAK6kB,SAAS,CACVszD,aAHU,EAIVjD,aAAcl1E,EAAKk1E,aAJT,GAKVC,iBAAkBn1E,EAAKm1E,iBALb,GAMV1iD,WAAYnoB,EAAOioB,cAGvB3e,YAAiCzM,EATnB,EASkCnH,EAAK8S,SAxB3C,yBAAA9R,EAAAU,SAAAb,MA1FKb,EAqHnB4wC,YAAc,WACVl4B,IAAiB+yC,6BAA6B,OAtH/BzrD,EAyHnBk2E,WAAa,WAAM,IACP/uE,EAAWnH,EAAK2f,MAAhBxY,OADOmd,EAEsBtkB,EAAKukB,MAAlC4zD,EAFO7zD,EAEP6zD,aAAc1lD,EAFPnO,EAEOmO,WAEhBvuB,EAAOgP,KAAU9P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAI2O,GAAS,EACT4f,IACA5f,EAAQslE,GAGZ,IAAMpzE,EACF8N,EAAQ,GAAKA,EAAQ7S,EAAK8S,QAAQ3M,OAASuN,aAAgB1T,EAAK8S,QAAQD,IAAUoK,YAAiB9V,GACvG,GAAKpC,GACAA,EAAMwO,IAAX,CAEA,IAAMlS,EAAOtB,IAAUqD,IAAI2B,EAAMwO,IAAI1Q,KAAOkC,EAAMwO,IAC7ClS,GAEL0Q,YAAe1Q,EAAMA,EAAKwB,GAAK,OAAQqB,EAAM,kBAAMnE,IAAUqE,oBAAoB+C,EAAQ9F,EAAKwB,SA7I/E7C,EAgJnB44D,cAAgB,WAAM,IACVzxD,EAAWnH,EAAK2f,MAAhBxY,OACR,GAAK6U,YAAc7U,GAAnB,CAFkB,IAAA+7B,EAImBljC,EAAKukB,MAAlC4zD,EAJUj1C,EAIVi1C,aAEJtlE,GAAS,EAKb,GAXkBqwB,EAIIzQ,aAIlB5f,EAAQslE,KAGRtlE,EAAQ,GAAKA,GAAS7S,EAAK8S,QAAQ3M,QAAvC,CACA,IAAMpB,EAAQ2O,aAAgB1T,EAAK8S,QAAQD,IAC3C,GAAK9N,EAAL,CAbkB,IAeP1D,EAAS0D,EAAdwO,IAEN,GADAlS,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACjC,CAEA,IAAM+E,EAAY,CACd6C,QAAS,YACTiJ,KAAM,IACNnN,MAAO1D,EACPyO,MAAO,IACPE,OAAQ,KAGZhO,IAAgBgH,aAAa,CACzBC,QAAS,sBACTm6C,KAAM,CAAEh9C,oBA7KGpG,EAiLnBisC,aAAe,WAAM,IAAAvsB,EACa1f,EAAK2f,MAA3BxY,EADSuY,EACTvY,OADSg+B,GAAAzlB,EACDtY,UACqBpH,EAAKukB,OAAlC4zD,EAFShzC,EAETgzC,aAEJtlE,GAAS,EAJIsyB,EAEK1S,aAIlB5f,EAAQslE,GAGZ,IAAMpzE,EACF8N,EAAQ,GAAKA,EAAQ7S,EAAK8S,QAAQ3M,OAASuN,aAAgB1T,EAAK8S,QAAQD,IAAUoK,YAAiB9V,GAEvG,GAAIpC,EAAO,CACP,IAAI1D,EAAO0D,EAAMwO,IAEjB,GADAlS,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACvB,CACN,IAAMvB,EAAQC,IAAUq4E,oBAExBr4E,IAAUkI,gBAAgBnI,EAAOuB,MAnM1BrB,EAwMnBm1E,iBAAmB,SAAAtiE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP7S,EAAK8S,QAAQ3M,QA5MjBnG,EA+MnB60E,eAAiB,SAAAlpE,GACTA,GACAA,EAAMqa,kBAFY,IAMhBkM,EADmBlyB,EAAKukB,MAAtB4zD,aACyB,EAEjC,OAAOn4E,EAAKo2E,UAAUlkD,EAAW,WACzBA,IAAclyB,EAAK8S,QAAQ3M,OAAS,GACpCnG,EAAKq2E,kBAzNEr2E,EA8NnBq2E,aA9NmBp2E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA8NJ,SAAAyB,IAAA,OAAAqtB,EAAA/uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAd,OAAA,kCAAAc,EAAAZ,SAAAW,MA9NIrC,EAkOnBk1E,aAAe,SAAAriE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL7S,EAyOnBsgE,WAAa,SAAA30D,GACLA,GACAA,EAAMqa,kBAFQ,IAMZkM,EADmBlyB,EAAKukB,MAAtB4zD,aACyB,EAEjC,OAAOn4E,EAAKo2E,UAAUlkD,EAAW,WACX,IAAdA,GACAlyB,EAAKs2E,cAnPEt2E,EAwPnBs2E,SAxPmBr2E,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KAwPR,SAAAm+C,IAAA,OAAArvB,EAAA/uB,EAAAI,KAAA,SAAAi+C,GAAA,cAAAA,EAAA/9C,KAAA+9C,EAAA99C,MAAA,cAAA89C,EAAAx9C,OAAA,kCAAAw9C,EAAAt9C,SAAAq9C,MAxPQ/+C,EA4PnBo2E,UAAY,SAACvjE,EAAOrJ,GAChB,GAAIqJ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS7S,EAAK8S,QAAQ3M,OAAQ,OAAO,EAEzCnG,EAAK6kB,SACD,CACIszD,aAActlE,EACdqiE,aAAcl1E,EAAKk1E,aAAariE,GAChCsiE,iBAAkBn1E,EAAKm1E,iBAAiBtiE,IAE5CrJ,GAVyB,IAarBrC,EAAWnH,EAAK2f,MAAhBxY,OAGR,OADAyM,YAAiCzM,EAAQ0L,EAAO7S,EAAK8S,UAC9C,GAzQP9S,EAAK8S,QAAU,GAHA,IAAA+N,EAKY7gB,EAAK2f,MAAxBxY,EALO0Z,EAKP1Z,OAAQe,EALD2Y,EAKC3Y,OALD,OAOflI,EAAKukB,MAAQ,CACT0e,WAAY97B,EACZkxE,WAAYnwE,EACZiwE,aAAc,EACdjD,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,GAbf50E,qFAiBGklB,EAAWC,GAAW,IAAAuD,EACVvoB,KAAKwf,MAA3BxY,EADgCuhB,EAChCvhB,OAAQC,EADwBshB,EACxBthB,UADwBo+B,EASpCrlC,KAAKokB,MANL+zD,EAHoC9yC,EAGpC8yC,cACAnD,EAJoC3vC,EAIpC2vC,iBACAD,EALoC1vC,EAKpC0vC,aACAH,EANoCvvC,EAMpCuvC,iBACAtiD,EAPoC+S,EAOpC/S,WACAmiD,EARoCpvC,EAQpCovC,yBAGJ,OAAI1vD,EAAU/d,SAAWA,IAIrB+d,EAAU9d,YAAcA,IAIxB+d,EAAUmzD,gBAAkBA,IAI5BnzD,EAAU6xD,kBAAoB7B,IAI9BhwD,EAAU+vD,eAAiBA,IAI3B/vD,EAAU4vD,mBAAqBA,IAI/B5vD,EAAUsN,aAAeA,GAIzBtN,EAAUyvD,2BAA6BA,oDAO3B,IACRztE,EAAWhH,KAAKwf,MAAhBxY,OACFpC,EAAQkY,YAAiB9V,GAC/BgM,YAA8BhM,EAAQ,CAACpC,IAEvC5E,KAAKs1E,cAELxwE,SAASgkE,iBAAiB,UAAW9oE,KAAK8tC,WAAW,kDAIrDhpC,SAASkkE,oBAAoB,UAAWhpE,KAAK8tC,WAAW,oCAqMnD,IAAA/kB,EACiB/oB,KAAKwf,MAAnBxY,EADH+hB,EACG/hB,OAAQwQ,EADXuR,EACWvR,EADX8tB,EAUDtlC,KAAKokB,MAPL4zD,EAHC1yC,EAGD0yC,aACAjD,EAJCzvC,EAIDyvC,aACAC,EALC1vC,EAKD0vC,iBAEA1iD,GAPCgT,EAMDsvC,iBANCtvC,EAODhT,YAKA5f,GAZC4yB,EAQDmvC,yBARCnvC,EASDgxC,cAGS,GACThkD,IACA5f,EAAQslE,GAGZ,IACMI,EAAY1lE,GAAS,GAAKA,EAAQ1S,KAAK2S,QAAQ3M,OAC/CpB,EAAQwzE,EAAY7kE,aAAgBvT,KAAK2S,QAAQD,IAAUoK,YAAiB9V,GAC5E0tB,EAAmB0jD,EAAYp4E,KAAK2S,QAAQD,GAAS,KAC9CxR,EAAS0D,EAAdwO,IAER,OACI0M,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,gBAPQ,KASnBD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBAAuBE,QAASjgB,KAAK00E,gBAChD50D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,4BACXD,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,oCACfD,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBjtC,UAAW+qC,EAAcpB,MAAI,EAAC1zD,QAASjgB,KAAKmgE,YAC3DrgD,EAAAtf,EAAAqM,cAACqqE,GAAA12E,EAAD,CAAoB0hB,SAAS,QAAQpV,MAAOynE,OAIpDz0D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,+BACXD,EAAAtf,EAAAqM,cAACwrE,GAAD,CAA2BrxE,OAAQA,EAAQpC,MAAOA,EAAOqb,QAASjgB,KAAK00E,kBAG3E50D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,6BACXD,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBh3D,QAASjgB,KAAKywC,aAC7B3wB,EAAAtf,EAAAqM,cAACmhC,EAAAxtC,EAAD,CAAW0hB,SAAS,QAAQpV,MAAOynE,MAEvCz0D,EAAAtf,EAAAqM,cAACoqE,GAAD,CAAmBjtC,UAAWgrC,EAAkBrB,MAAI,EAAC1zD,QAASjgB,KAAK00E,gBAC/D50D,EAAAtf,EAAAqM,cAACuqE,GAAA52E,EAAD,CAAkB0hB,SAAS,QAAQpV,MAAOynE,QAItDz0D,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAU,uBACXD,EAAAtf,EAAAqM,cAACyrE,GAAD,CAA2BtxE,OAAQA,EAAQ2R,KAAM6a,aAAwBkB,KACzE5U,EAAAtf,EAAAqM,cAACyqE,GAAD,CACIv8D,MAAOvD,EAAE,eACT+qB,SAAUjQ,GAAc5f,GAAS,EAAvB,GAAAxH,OAA8BwH,EAAQ,EAAtC,QAAAxH,OAA8ConB,GAAe,OAE3ExS,EAAAtf,EAAAqM,cAAC4qE,GAAD,CAA2B18D,MAAOvD,EAAE,QAASzP,OAAQ7G,EAAKwB,GAAIud,QAASjgB,KAAK+1E,aAC3El6D,YAAc7U,IACX8Y,EAAAtf,EAAAqM,cAACsnE,GAAD,CACIp5D,MAAOvD,EAAE,WACTwyB,UAAWouC,EACXn4D,QAASjgB,KAAKy4D,eACd34C,EAAAtf,EAAAqM,cAACulC,GAAA5xC,EAAD,CAAWsM,MAAOunE,MAG1Bv0D,EAAAtf,EAAAqM,cAACsnE,GAAD,CAAyBp5D,MAAOvD,EAAE,UAAWwyB,UAAQ,EAAC/pB,QAASjgB,KAAK8rC,cAChEhsB,EAAAtf,EAAAqM,cAAC6qE,GAAAl3E,EAAD,CAAYsM,MAAOgrE,eA/UV53D,IAAMC,WA2VxBqH,iBAAkBuwD,ICtW3BQ,uBACF,SAAAA,EAAY/4D,GAAO,IAAA3f,EAAA,OAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAu4E,IACf14E,EAAAC,OAAA6jB,EAAA,EAAA7jB,CAAAE,KAAAF,OAAA8jB,EAAA,EAAA9jB,CAAAy4E,GAAAp4E,KAAAH,KAAMwf,KAyCVg5D,uBAAyB,SAAA73E,GAAU,IACvBqG,EAA6BrG,EAA7BqG,OAAQC,EAAqBtG,EAArBsG,UAAWmsB,EAAUzyB,EAAVyyB,MAE3BvzB,EAAK4qD,iBAAiBzjD,EAAQC,EAAWmsB,IA7C1BvzB,EAgDnB44E,uBAAyB,SAAA93E,GAAU,IACvBsL,EAAkBtL,EAAlBsL,OAAQmnB,EAAUzyB,EAAVyyB,MAEhBvzB,EAAKosD,iBAAiBhgD,EAAQmnB,IAnDfvzB,EAsDnB82D,oCAAsC,SAAAh2D,GAClCd,EAAK6kB,SAAS,CACVkyC,qBAAsBr+C,IAAiBq+C,wBAxD5B/2D,EA4DnBihC,iCAAmC,SAAAngC,GAC/Bd,EAAK6kB,SAAS,CAAEqc,mBAAoBxoB,IAAiBwoB,sBA7DtClhC,EAgEnB+gC,wCAA0C,SAAAjgC,GACtCd,EAAK6kB,SAAS,CACVmc,0BAA2BtoB,IAAiBsoB,6BAlEjChhC,EAsEnB64E,sBAAwB,SAAA/3E,GAAU,IACtBsiD,EAAStiD,EAATsiD,KAERpjD,EAAK6kB,SAAS,CAAEwI,YAAa+1B,KAzEdpjD,EA4EnB4qD,iBAAmB,SAACzjD,GAA4C,IAApCC,EAAoCvF,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,GAAAA,UAAA,GAAxB,KAAM0xB,EAAkB1xB,UAAAsE,OAAA,QAAAyI,IAAA/M,UAAA,IAAAA,UAAA,GACtDgyC,EAAgBn7B,IAAiBwT,YACjC4sD,EAAsBpgE,IAAiB+1C,aACvCqmB,EAAmBp8D,IAAiB+iC,eAE1C,GAAIloB,EACIulD,IAAwB3xE,GACxBnF,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,gBAOZ,GAAI0sC,IAAkB1sC,GAAUC,GAAa0tE,IAAqB1tE,EAC9DpH,EAAK+4E,iBAAiBhrD,QAAQm/C,kBAC1B9lE,GACAgsB,aAAiBjsB,EAAQC,QAE1B,GAAIysC,IAAkB1sC,GAAWC,EAQpCpF,IAAgB6nD,UAAU1iD,EAAQC,OARa,CAC/C,IAAMlD,EAAOgP,KAAU9P,IAAI+D,GACvBjD,GAAQA,EAAKgU,aAAe,EAC5BlY,EAAK+4E,iBAAiBhrD,QAAQu/C,gBAE9BttE,EAAK+4E,iBAAiBhrD,QAAQk/C,mBAtGvBjtE,EA6GnBosD,iBA7GmB,eAAA5rD,EAAAP,OAAAq4C,EAAA,EAAAr4C,CAAAyvB,EAAA/uB,EAAAC,KA6GA,SAAAC,EAAOuL,EAAQmnB,GAAf,IAAArvB,EAAA,OAAAwrB,EAAA/uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVkL,EADU,CAAApL,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGIc,IAAgBkJ,KAAK,CACpCjC,QAAS,oBACTmG,QAAShD,EACTwyC,OAAO,IANI,OAGT16C,EAHSlD,EAAAoK,KASfpL,EAAK4qD,iBAAiB1mD,EAAKrB,GAAI,KAAM0wB,GATtB,wBAAAvyB,EAAAU,SAAAb,MA7GA,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAK+4E,iBAAmB14D,IAAMqb,YAE9B17B,EAAKukB,MAAQ,CACTwyC,qBAAsBr+C,IAAiBq+C,qBACvC71B,mBAAoBxoB,IAAiBwoB,mBACrCF,0BAA2BtoB,IAAiBsoB,0BAC5C3T,YAAa,MATFrtB,mFAoBfqP,IAAUwS,GAAG,uBAAwB1hB,KAAKy4E,wBAC1C1lE,KAAU2O,GAAG,uBAAwB1hB,KAAKw4E,wBAE1CjgE,IAAiBmJ,GAAG,oCAAqC1hB,KAAK22D,qCAC9Dp+C,IAAiBmJ,GAAG,iCAAkC1hB,KAAK8gC,kCAC3DvoB,IAAiBmJ,GAAG,wCAAyC1hB,KAAK4gC,yCAClEroB,IAAiBmJ,GAAG,sBAAuB1hB,KAAK04E,sEAIhDxpE,IAAUlN,eAAe,uBAAwBhC,KAAKy4E,wBACtD1lE,KAAU/Q,eAAe,uBAAwBhC,KAAKw4E,wBAEtDjgE,IAAiBvW,eAAe,oCAAqChC,KAAK22D,qCAC1Ep+C,IAAiBvW,eAAe,iCAAkChC,KAAK8gC,kCACvEvoB,IAAiBvW,eACb,wCACAhC,KAAK4gC,yCAETroB,IAAiBvW,eAAe,sBAAuBhC,KAAK04E,wDAkFvD,IACG/3D,EAAY3gB,KAAKwf,MAAjBmB,QADHwD,EAEwFnkB,KAAKokB,MAA1FwyC,EAFHzyC,EAEGyyC,qBAAsB71B,EAFzB5c,EAEyB4c,mBAAoBF,EAF7C1c,EAE6C0c,0BAA2B3T,EAFxE/I,EAEwE+I,YAE7E,OACIpN,EAAAtf,EAAAqM,cAAAiT,EAAAtf,EAAA+kB,SAAA,KACIzF,EAAAtf,EAAAqM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQk4D,KAAM,OAAQ,CAAEC,oBAAqBliB,KACpE92C,EAAAtf,EAAAqM,cAACksE,GAAD,CAAS9hB,aAAcj3D,KAAKyqD,mBAC5B3qC,EAAAtf,EAAAqM,cAACmsE,GAAD,CAAel9C,IAAK97B,KAAK44E,mBACxBhiB,GAAwB92C,EAAAtf,EAAAqM,cAACirD,GAAD,OAE7Bh4C,EAAAtf,EAAAqM,cAACosE,GAAA,EAAD,MACCl4C,GAAsBjhB,EAAAtf,EAAAqM,cAACqsE,GAAgBn4C,GACvCF,GAA6B/gB,EAAAtf,EAAAqM,cAACssE,GAAuBt4C,GACrD3T,GAAepN,EAAAtf,EAAAqM,cAACusE,GAAkBlsD,WAxI5BhN,IAAMC,YAgJvB4G,GAAUC,YACZqyD,IACA9xD,IACApG,IA1JW,SAAAC,GAAK,MAAK,CACrBy3D,KAAM,CACFxjD,WAAmC,SAAvBjU,EAAMkU,QAAQvjB,KAAkBqP,EAAMkU,QAAQD,WAAWE,QAAU,UAC/EpT,MAAOf,EAAMkU,QAAQzX,KAAKqiB,YAwJ9BuhB,GAGW16B,aAAQwxD","file":"static/js/3.c4338518.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback, middle) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                if (middle) {\n                    let result_blob = await new Promise((resolve, reject) => {\n                        middle(response.data, resolve);\n                    });\n                    this.setBlob(file.id, result_blob);\n                } else {\n                    this.setBlob(file.id, response.data);\n                }\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            let blob = new Blob([arr]),\n                fs = this;\n            if (middle) {\n                console.log('{TVOROG} running middle 1');\n                middle(blob, function(result_blob) {\n                    file.blob = result_blob;\n                    fs.setBlob(file.id, file.blob);\n                    callback();\n                });\n            } else {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            }\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                let fs = this;\n                if (middle) {\n                    console.log('{TVOROG} running middle 2');\n                    middle(blob, function(result_blob) {\n                        file.blob = result_blob;\n                        fs.setBlob(file.id, file.blob);\n                        callback();\n                    });\n                } else {\n                    file.blob = blob;\n                    this.setBlob(file.id, file.blob);\n                    callback();\n                }\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => {\n            FileStore.updateStickerBlob(chatId, messageId, id);\n        },\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => {\n            FileStore.updateStickerThumbnailBlob(chatId, messageId, id);\n        },\n        () => {\n            FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker);\n        }\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport Search from '../Components/ColumnLeft/Search/Search';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../Actions/Client';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n            case 'textEntityTypeMentionName':\n                function openMention(event) {\n                    stopPropagation(event);\n\n                    if (text.entities[i].type.user_id) {\n                        openChatCommand(text.entities[i].type.user_id, null, true);\n                    } else {\n                        let searchText = (entityText[0] != '@' ? '@' : '') + entityText;\n                        TdLibController.send({\n                            '@type': 'searchPublicChat',\n                            username: searchText\n                        }).then(function(result) {\n                            if (result) openChatCommand(result.id, null, true);\n                        });\n                    }\n                }\n                result.push(\n                    <a key={text.entities[i].offset} onClick={openMention}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                function searchHashtag(e) {\n                    stopPropagation(e);\n                    const chatId = ApplicationStore.getChatId();\n                    const chat = ChatStore.get(chatId);\n                    if (!chat) return;\n                    ApplicationStore.emit('clientUpdateSearchHashtag', { chatId: chatId, text: '#' + hashtag });\n                }\n                result.push(\n                    <a key={text.entities[i].offset} onClick={searchHashtag}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.img = React.createRef();\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n        // let T = this;\n        // setTimeout(function () {\n        //     console.log('polyfillImage');\n        //     const webpMachine = new WebpMachine();\n        //     webpMachine.polyfillImage(T.img.current).then(console.log).catch(console.log)\n        // }, 1000);\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img ref={this.img} className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        ref={this.img}\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n        \n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: this.formatText(text),\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    formatText = (text) => {\n        let entities = this.parseEntities(text);\n        text = this.parseMarkdown(text, entities);\n        console.log(entities);\n        return {\n            '@type': 'formattedText',\n            text: text,\n            entities: entities\n        }\n    };\n\n    textEntity = (type, offset, length, options) => {\n        return {\n            '@type': 'textEntity',\n            length: length,\n            offset: offset,\n            type: Object.assign({\n                '@type': type\n            }, options || {})\n        }\n    };\n\n    // this code has been taken from https://github.com/zhukov/webogram/blob/c5fc5107cad2a476a03d7ce8427f1def41c20568/app/js/lib/ng_utils.js\n    parseEntities = (text, options) => {\n        const domainAddChars = '\\u00b7';\n        const TLD = [\"abogado\",\"ac\",\"academy\",\"accountants\",\"active\",\"actor\",\"ad\",\"adult\",\"ae\",\"aero\",\"af\",\"ag\",\"agency\",\"ai\",\"airforce\",\"al\",\"allfinanz\",\"alsace\",\"am\",\"amsterdam\",\"an\",\"android\",\"ao\",\"apartments\",\"aq\",\"aquarelle\",\"ar\",\"archi\",\"army\",\"arpa\",\"as\",\"asia\",\"associates\",\"at\",\"attorney\",\"au\",\"auction\",\"audio\",\"autos\",\"aw\",\"ax\",\"axa\",\"az\",\"ba\",\"band\",\"bank\",\"bar\",\"barclaycard\",\"barclays\",\"bargains\",\"bayern\",\"bb\",\"bd\",\"be\",\"beer\",\"berlin\",\"best\",\"bf\",\"bg\",\"bh\",\"bi\",\"bid\",\"bike\",\"bingo\",\"bio\",\"biz\",\"bj\",\"black\",\"blackfriday\",\"bloomberg\",\"blue\",\"bm\",\"bmw\",\"bn\",\"bnpparibas\",\"bo\",\"boo\",\"boutique\",\"br\",\"brussels\",\"bs\",\"bt\",\"budapest\",\"build\",\"builders\",\"business\",\"buzz\",\"bv\",\"bw\",\"by\",\"bz\",\"bzh\",\"ca\",\"cab\",\"cal\",\"camera\",\"camp\",\"cancerresearch\",\"canon\",\"capetown\",\"capital\",\"caravan\",\"cards\",\"care\",\"career\",\"careers\",\"cartier\",\"casa\",\"cash\",\"cat\",\"catering\",\"cc\",\"cd\",\"center\",\"ceo\",\"cern\",\"cf\",\"cg\",\"ch\",\"channel\",\"chat\",\"cheap\",\"christmas\",\"chrome\",\"church\",\"ci\",\"citic\",\"city\",\"ck\",\"cl\",\"claims\",\"cleaning\",\"click\",\"clinic\",\"clothing\",\"club\",\"cm\",\"cn\",\"co\",\"coach\",\"codes\",\"coffee\",\"college\",\"cologne\",\"com\",\"community\",\"company\",\"computer\",\"condos\",\"construction\",\"consulting\",\"contractors\",\"cooking\",\"cool\",\"coop\",\"country\",\"cr\",\"credit\",\"creditcard\",\"cricket\",\"crs\",\"cruises\",\"cu\",\"cuisinella\",\"cv\",\"cw\",\"cx\",\"cy\",\"cymru\",\"cz\",\"dabur\",\"dad\",\"dance\",\"dating\",\"day\",\"dclk\",\"de\",\"deals\",\"degree\",\"delivery\",\"democrat\",\"dental\",\"dentist\",\"desi\",\"design\",\"dev\",\"diamonds\",\"diet\",\"digital\",\"direct\",\"directory\",\"discount\",\"dj\",\"dk\",\"dm\",\"dnp\",\"do\",\"docs\",\"domains\",\"doosan\",\"durban\",\"dvag\",\"dz\",\"eat\",\"ec\",\"edu\",\"education\",\"ee\",\"eg\",\"email\",\"emerck\",\"energy\",\"engineer\",\"engineering\",\"enterprises\",\"equipment\",\"er\",\"es\",\"esq\",\"estate\",\"et\",\"eu\",\"eurovision\",\"eus\",\"events\",\"everbank\",\"exchange\",\"expert\",\"exposed\",\"fail\",\"farm\",\"fashion\",\"feedback\",\"fi\",\"finance\",\"financial\",\"firmdale\",\"fish\",\"fishing\",\"fit\",\"fitness\",\"fj\",\"fk\",\"flights\",\"florist\",\"flowers\",\"flsmidth\",\"fly\",\"fm\",\"fo\",\"foo\",\"forsale\",\"foundation\",\"fr\",\"frl\",\"frogans\",\"fund\",\"furniture\",\"futbol\",\"ga\",\"gal\",\"gallery\",\"garden\",\"gb\",\"gbiz\",\"gd\",\"ge\",\"gent\",\"gf\",\"gg\",\"ggee\",\"gh\",\"gi\",\"gift\",\"gifts\",\"gives\",\"gl\",\"glass\",\"gle\",\"global\",\"globo\",\"gm\",\"gmail\",\"gmo\",\"gmx\",\"gn\",\"goog\",\"google\",\"gop\",\"gov\",\"gp\",\"gq\",\"gr\",\"graphics\",\"gratis\",\"green\",\"gripe\",\"gs\",\"gt\",\"gu\",\"guide\",\"guitars\",\"guru\",\"gw\",\"gy\",\"hamburg\",\"hangout\",\"haus\",\"healthcare\",\"help\",\"here\",\"hermes\",\"hiphop\",\"hiv\",\"hk\",\"hm\",\"hn\",\"holdings\",\"holiday\",\"homes\",\"horse\",\"host\",\"hosting\",\"house\",\"how\",\"hr\",\"ht\",\"hu\",\"ibm\",\"id\",\"ie\",\"ifm\",\"il\",\"im\",\"immo\",\"immobilien\",\"in\",\"industries\",\"info\",\"ing\",\"ink\",\"institute\",\"insure\",\"int\",\"international\",\"investments\",\"io\",\"iq\",\"ir\",\"irish\",\"is\",\"it\",\"iwc\",\"jcb\",\"je\",\"jetzt\",\"jm\",\"jo\",\"jobs\",\"joburg\",\"jp\",\"juegos\",\"kaufen\",\"kddi\",\"ke\",\"kg\",\"kh\",\"ki\",\"kim\",\"kitchen\",\"kiwi\",\"km\",\"kn\",\"koeln\",\"kp\",\"kr\",\"krd\",\"kred\",\"kw\",\"ky\",\"kyoto\",\"kz\",\"la\",\"lacaixa\",\"land\",\"lat\",\"latrobe\",\"lawyer\",\"lb\",\"lc\",\"lds\",\"lease\",\"legal\",\"lgbt\",\"li\",\"lidl\",\"life\",\"lighting\",\"limited\",\"limo\",\"link\",\"lk\",\"loans\",\"london\",\"lotte\",\"lotto\",\"lr\",\"ls\",\"lt\",\"ltda\",\"lu\",\"luxe\",\"luxury\",\"lv\",\"ly\",\"ma\",\"madrid\",\"maison\",\"management\",\"mango\",\"market\",\"marketing\",\"marriott\",\"mc\",\"md\",\"me\",\"media\",\"meet\",\"melbourne\",\"meme\",\"memorial\",\"menu\",\"mg\",\"mh\",\"miami\",\"mil\",\"mini\",\"mk\",\"ml\",\"mm\",\"mn\",\"mo\",\"mobi\",\"moda\",\"moe\",\"monash\",\"money\",\"mormon\",\"mortgage\",\"moscow\",\"motorcycles\",\"mov\",\"mp\",\"mq\",\"mr\",\"ms\",\"mt\",\"mu\",\"museum\",\"mv\",\"mw\",\"mx\",\"my\",\"mz\",\"na\",\"nagoya\",\"name\",\"navy\",\"nc\",\"ne\",\"net\",\"network\",\"neustar\",\"new\",\"nexus\",\"nf\",\"ng\",\"ngo\",\"nhk\",\"ni\",\"nico\",\"ninja\",\"nl\",\"no\",\"np\",\"nr\",\"nra\",\"nrw\",\"ntt\",\"nu\",\"nyc\",\"nz\",\"okinawa\",\"om\",\"one\",\"ong\",\"onl\",\"ooo\",\"org\",\"organic\",\"osaka\",\"otsuka\",\"ovh\",\"pa\",\"paris\",\"partners\",\"parts\",\"party\",\"pe\",\"pf\",\"pg\",\"ph\",\"pharmacy\",\"photo\",\"photography\",\"photos\",\"physio\",\"pics\",\"pictures\",\"pink\",\"pizza\",\"pk\",\"pl\",\"place\",\"plumbing\",\"pm\",\"pn\",\"pohl\",\"poker\",\"porn\",\"post\",\"pr\",\"praxi\",\"press\",\"pro\",\"prod\",\"productions\",\"prof\",\"properties\",\"property\",\"ps\",\"pt\",\"pub\",\"pw\",\"py\",\"qa\",\"qpon\",\"quebec\",\"re\",\"realtor\",\"recipes\",\"red\",\"rehab\",\"reise\",\"reisen\",\"reit\",\"ren\",\"rentals\",\"repair\",\"report\",\"republican\",\"rest\",\"restaurant\",\"reviews\",\"rich\",\"rio\",\"rip\",\"ro\",\"rocks\",\"rodeo\",\"rs\",\"rsvp\",\"ru\",\"ruhr\",\"rw\",\"ryukyu\",\"sa\",\"saarland\",\"sale\",\"samsung\",\"sarl\",\"saxo\",\"sb\",\"sc\",\"sca\",\"scb\",\"schmidt\",\"schule\",\"schwarz\",\"science\",\"scot\",\"sd\",\"se\",\"services\",\"sew\",\"sexy\",\"sg\",\"sh\",\"shiksha\",\"shoes\",\"shriram\",\"si\",\"singles\",\"sj\",\"sk\",\"sky\",\"sl\",\"sm\",\"sn\",\"so\",\"social\",\"software\",\"sohu\",\"solar\",\"solutions\",\"soy\",\"space\",\"spiegel\",\"sr\",\"st\",\"style\",\"su\",\"supplies\",\"supply\",\"support\",\"surf\",\"surgery\",\"suzuki\",\"sv\",\"sx\",\"sy\",\"sydney\",\"systems\",\"sz\",\"taipei\",\"tatar\",\"tattoo\",\"tax\",\"tc\",\"td\",\"technology\",\"tel\",\"temasek\",\"tennis\",\"tf\",\"tg\",\"th\",\"tienda\",\"tips\",\"tires\",\"tirol\",\"tj\",\"tk\",\"tl\",\"tm\",\"tn\",\"to\",\"today\",\"tokyo\",\"tools\",\"top\",\"toshiba\",\"town\",\"toys\",\"tp\",\"tr\",\"trade\",\"training\",\"travel\",\"trust\",\"tt\",\"tui\",\"tv\",\"tw\",\"tz\",\"ua\",\"ug\",\"uk\",\"university\",\"uno\",\"uol\",\"us\",\"uy\",\"uz\",\"va\",\"vacations\",\"vc\",\"ve\",\"vegas\",\"ventures\",\"versicherung\",\"vet\",\"vg\",\"vi\",\"viajes\",\"video\",\"villas\",\"vision\",\"vlaanderen\",\"vn\",\"vodka\",\"vote\",\"voting\",\"voto\",\"voyage\",\"vu\",\"wales\",\"wang\",\"watch\",\"webcam\",\"website\",\"wed\",\"wedding\",\"wf\",\"whoswho\",\"wien\",\"wiki\",\"williamhill\",\"wme\",\"work\",\"works\",\"world\",\"ws\",\"wtc\",\"wtf\",\"佛山\",\"集团\",\"在线\",\"한국\",\"ভারত\",\"八卦\",\"موقع\",\"公益\",\"公司\",\"移动\",\"我爱你\",\"москва\",\"қаз\",\"онлайн\",\"сайт\",\"срб\",\"淡马锡\",\"орг\",\"삼성\",\"சிங்கப்பூர்\",\"商标\",\"商店\",\"商城\",\"дети\",\"мкд\",\"中文网\",\"中信\",\"中国\",\"中國\",\"谷歌\",\"భారత్\",\"ලංකා\",\"ભારત\",\"भारत\",\"网店\",\"संगठन\",\"网络\",\"укр\",\"香港\",\"台湾\",\"台灣\",\"手机\",\"мон\",\"الجزائر\",\"عمان\",\"ایران\",\"امارات\",\"بازار\",\"الاردن\",\"بھارت\",\"المغرب\",\"السعودية\",\"مليسيا\",\"شبكة\",\"გე\",\"机构\",\"组织机构\",\"ไทย\",\"سورية\",\"рус\",\"рф\",\"تونس\",\"みんな\",\"グーグル\",\"世界\",\"ਭਾਰਤ\",\"网址\",\"游戏\",\"vermögensberater\",\"vermögensberatung\",\"企业\",\"مصر\",\"قطر\",\"广东\",\"இலங்கை\",\"இந்தியா\",\"新加坡\",\"فلسطين\",\"政务\",\"xxx\",\"xyz\",\"yachts\",\"yandex\",\"ye\",\"yoga\",\"yokohama\",\"youtube\",\"yt\",\"za\",\"zip\",\"zm\",\"zone\",\"zuerich\",\"zw\"];\n        const alphaCharsRegExp = 'a-z' +\n          '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n          '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n          '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n          '\\\\u02bb' + // Hawaiian\n          '\\\\u0300-\\\\u036f' + // Combining diacritics\n          '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n          '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n          '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n          '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n          '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n          '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n          '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n          '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n          '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n          '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n          '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n          '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n          '\\\\u200c' + // Zero-Width Non-Joiner\n          '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n          '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n          '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n          '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n          '\\\\uff66-\\\\uff9f' + // half width Katakana\n          '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\n        const alphaNumericRegExp = '0-9\\_' + alphaCharsRegExp;\n        const emojiRegExp = '\\\\u0023\\\\u20E3|\\\\u00a9|\\\\u00ae|\\\\u203c|\\\\u2049|\\\\u2139|[\\\\u2194-\\\\u2199]|\\\\u21a9|\\\\u21aa|\\\\u231a|\\\\u231b|\\\\u23e9|[\\\\u23ea-\\\\u23ec]|\\\\u23f0|\\\\u24c2|\\\\u25aa|\\\\u25ab|\\\\u25b6|\\\\u2611|\\\\u2614|\\\\u26fd|\\\\u2705|\\\\u2709|[\\\\u2795-\\\\u2797]|\\\\u27a1|\\\\u27b0|\\\\u27bf|\\\\u2934|\\\\u2935|[\\\\u2b05-\\\\u2b07]|\\\\u2b1b|\\\\u2b1c|\\\\u2b50|\\\\u2b55|\\\\u3030|\\\\u303d|\\\\u3297|\\\\u3299|[\\\\uE000-\\\\uF8FF\\\\u270A-\\\\u2764\\\\u2122\\\\u25C0\\\\u25FB-\\\\u25FE\\\\u2615\\\\u263a\\\\u2648-\\\\u2653\\\\u2660-\\\\u2668\\\\u267B\\\\u267F\\\\u2693\\\\u261d\\\\u26A0-\\\\u26FA\\\\u2708\\\\u2702\\\\u2601\\\\u260E]|[\\\\u2600\\\\u26C4\\\\u26BE\\\\u23F3\\\\u2764]|\\\\uD83D[\\\\uDC00-\\\\uDFFF]|\\\\uD83C[\\\\uDDE8-\\\\uDDFA\\uDDEC]\\\\uD83C[\\\\uDDEA-\\\\uDDFA\\uDDE7]|[0-9]\\\\u20e3|\\\\uD83C[\\\\uDC00-\\\\uDFFF]';\n        const urlRegExp = '((?:https?|ftp)://|mailto:)?' +\n        // user:pass authentication\n        '(?:\\\\S{1,64}(?::\\\\S{0,64})?@)?' +\n        '(?:' +\n        // sindresorhus/ip-regexp\n        '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n        '|' +\n        // host name\n        '[' + alphaCharsRegExp + '0-9][' + alphaCharsRegExp + domainAddChars + '0-9\\-]{0,64}' +\n        // domain name\n        '(?:\\\\.[' + alphaCharsRegExp + '0-9][' + alphaCharsRegExp + domainAddChars + '0-9\\-]{0,64}){0,10}' +\n\n        // TLD identifier\n        '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + alphaCharsRegExp + ']{2,24}))' +\n        ')' +\n        // port number\n        '(?::\\\\d{2,5})?' +\n        // resource path\n        '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?'\n        const usernameRegExp = '[a-zA-Z\\\\d_]{5,32}';\n        const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const botCommandRegExp = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + usernameRegExp + '))?(\\\\b|$)';\n        const fullRegExp = new RegExp('(^| )(@)(' + usernameRegExp + ')|(' + urlRegExp + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + alphaNumericRegExp + ']{2,64})|(^|\\\\s)' + botCommandRegExp, 'i');\n    \n        options = options || {}\n\n        var match\n        var raw = text, url;\n        var entities = [],\n        emojiCode,\n        emojiCoords,\n        matchIndex\n        var rawOffset = 0;\n\n        while ((match = raw.match(fullRegExp))) {\n            matchIndex = rawOffset + match.index;\n\n            if (match[3]) { // mentions\n                entities.push(this.textEntity(\n                    'textEntityTypeMention', \n                    matchIndex + match[1].length,\n                    match[2].length + match[3].length\n                ));\n            } else if (match[4]) {\n                if (emailRegExp.test(match[4])) { // email\n                    entities.push(this.textEntity(\n                        'textEntityTypeEmailAddress', \n                        matchIndex,\n                        match[4].length\n                    ));\n                } else {\n                    var url = false\n                    var protocol = match[5]\n                    var tld = match[6]\n                    var excluded = ''\n\n                    if (tld) { // URL\n                        if (!protocol && (tld.substr(0, 4) === 'xn--' || TLD.indexOf(tld.toLowerCase()) !== -1)) {\n                            protocol = 'http://'\n                        }\n\n                        if (protocol) {\n                            function checkBrackets (url) {\n                                var urlLength = url.length\n                                var urlOpenBrackets = url.split('(').length - 1\n                                var urlCloseBrackets = url.split(')').length - 1\n\n                                while (urlCloseBrackets > urlOpenBrackets &&\n                                    url.charAt(urlLength - 1) === ')') {\n                                    url = url.substr(0, urlLength - 1);\n                                    urlCloseBrackets--;\n                                    urlLength--;\n                                }\n                                if (urlOpenBrackets > urlCloseBrackets) {\n                                    url = url.replace(/\\)+$/, '');\n                                }\n                                return url;\n                            }\n                            var balanced = checkBrackets(match[4])\n\n                            if (balanced.length !== match[4].length) {\n                                excluded = match[4].substring(balanced.length)\n                                match[4] = balanced\n                            }\n\n                            url = (match[5] ? '' : protocol) + match[4]\n                        }\n                    } else { // IP address\n                        url = (match[5] ? '' : 'http://') + match[4]\n                    }\n\n                    if (url) {\n                        entities.push(this.textEntity(\n                            'textEntityTypeUrl', \n                            matchIndex,\n                            match[4].length\n                        ));\n                    }\n                }\n            } else if (match[7]) { // New line\n                // entities.push(this.textEntity(\n                //     'textEntityTypeLinebreak', \n                //     matchIndex,\n                //     1\n                // ));\n            } else if (match[8]) { // Emoji\n                // if ((emojiCode = EmojiHelper.emojiMap[match[8]]) &&\n                //   (emojiCoords = getEmojiSpritesheetCoords(emojiCode))) {\n                //     entities.push({\n                //         _: 'messageEntityEmoji',\n                //         offset: matchIndex,\n                //         length: match[0].length,\n                //         coords: emojiCoords,\n                //         title: emojiData[emojiCode][1][0]\n                //     })\n                // }\n            } else if (match[10]) { // Hashtag\n                entities.push(this.textEntity(\n                    'textEntityTypeHashtag', \n                    matchIndex + match[9].length,\n                    match[10].length\n                ));\n            } else if (match[12]) { // Bot command\n                entities.push(this.textEntity(\n                    'textEntityTypeBotCommand', \n                    matchIndex + match[11].length,\n                    1 + match[12].length + (match[13] ? 1 + match[13].length : 0)\n                ));\n            }\n            raw = raw.substr(match.index + match[0].length)\n            rawOffset += match.index + match[0].length\n        }\n\n        return entities;\n    };\n    parseMarkdown = (text, entities, noTrim) => {\n        const markdownEntities = {\n            '`': 'textEntityTypeCode',\n            '**': 'textEntityTypeBold',\n            '__': 'textEntityTypeItalic'\n        }\n        const markdownTestRegExp = /[`_*@]/;\n        const markdownRegExp = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s)(`|\\*\\*|__)([^\\n]+?)\\7([\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)/m;\n\n        if (!markdownTestRegExp.test(text)) {\n            return noTrim ? text : text.trim()\n        }\n        var raw = text\n        var match\n        var newText = []\n        var rawOffset = 0\n        var matchIndex\n        while (match = raw.match(markdownRegExp)) {\n            matchIndex = rawOffset + match.index\n            newText.push(raw.substr(0, match.index))\n\n            var text = (match[3] || match[8] || match[11])\n            rawOffset -= text.length\n            text = text.replace(/^\\s+|\\s+$/g, '')\n            rawOffset += text.length\n\n            if (text.match(/^`*$/)) {\n                newText.push(match[0])\n            } else if (match[3]) { // pre\n                if (match[5] == '\\n') {\n                    match[5] = ''\n                    rawOffset -= 1\n                }\n                newText.push(match[1] + text + match[5])\n\n                entities.push(this.textEntity(\n                    'textEntityTypePre', \n                    matchIndex + match[1].length,\n                    text.length,\n                    {language: ''}\n                ));\n                rawOffset -= match[2].length + match[4].length\n            } else if (match[7]) { // code|italic|bold\n                newText.push(match[6] + text + match[9])\n\n                entities.push(this.textEntity(\n                    markdownEntities[match[7]], \n                    matchIndex + match[6].length,\n                    text.length\n                ));\n                rawOffset -= match[7].length * 2\n            } else if (match[11]) { // custom mention\n                newText.push(text)\n                entities.push(this.textEntity(\n                    'textEntityTypeMentionName', \n                    matchIndex,\n                    text.length,\n                    {user_id: match[10]}\n                ));\n                rawOffset -= match[0].length - text.length\n            }\n            raw = raw.substr(match.index + match[0].length)\n            rawOffset += match.index + match[0].length\n        }\n        newText.push(raw)\n        newText = newText.join('')\n\n        if (!newText.replace(/\\s+/g, '').length) {\n            newText = text\n            entities.splice(0, entities.length)\n        }\n        if (!entities.length && !noTrim) {\n            newText = newText.trim()\n        }\n        return newText\n    };\n\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n\n        if (text != null && text.length > 0) {\n            const trimmedText = text.trim();\n\n            if (!trimmedText) {\n                this.loadContent();\n            } else {\n                this.searchText(trimmedText);\n            }\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            if (results[i] == null) continue;\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n        setTimeout(window.location.reload, 100);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master' ref={this.props.headerMaster}>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}>\n                                {this.props.searchText}\n                            </div>\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        this.props.onScrollChange(list.scrollTop);\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    onScrollChange: PropTypes.func.isRequired\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsHeader = React.createRef();\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        ApplicationStore.on('clientUpdateSearchHashtag', this.onClientUpdateSearchHashtag);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        ApplicationStore.removeListener('clientUpdateSearchHashtag', this.onClientUpdateSearchHashtag);\n    }\n\n    onClientUpdateSearchHashtag = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: update.text\n        });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    handleScroll = y => {\n        if (this.dialogsHeader.current)\n            this.dialogsHeader.current.className = 'header-master ' + (y < 5 ? '' : 'with-shadow');\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    headerMaster={this.dialogsHeader}\n                    openSearch={openSearch}\n                    searchText={searchText}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} onScrollChange={this.handleScroll} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            //console.log('PinnedMessage.getDerivedStateFromProps', chat, chat.pinned_message_id);\n            return {\n                prevPropsChatId: chatId,\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        //console.log('PinnedMessage.message', chatId, messageId, message);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div\n                className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                onClick={this.handleClick}>\n                <div className='pinned-message-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='pinned-message-content'>\n                        <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                            {t('PinnedMessage')}\n                        </div>\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                    <div className='pinned-message-delete-button'>\n                        <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport './ArrowDown.css';\r\n\r\nclass ArrowDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.div = React.createRef();\r\n    }\r\n\r\n    setStatus = status => {\r\n        if (this.div.current) {\r\n            let shouldBe = 'arrow-down ' + this.props.class + (status ? '' : ' hidden');\r\n            if (this.div.current.className != shouldBe) this.div.current.className = shouldBe;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.div} className={'arrow-down ' + this.props.class + ' hidden'} onClick={this.props.onClick}>\r\n                <svg width='30' height='30' xmlns='http://www.w3.org/2000/svg'>\r\n                    <line y2='20' x2='15' y1='12' x1='7' strokeLinecap='round' strokeWidth='3' stroke='#777' />\r\n                    <line y2='20' x2='15' y1='12' x1='23' strokeLinecap='round' strokeWidth='3' stroke='#777' />\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nArrowDown.propTypes = {\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ArrowDown;\r\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ArrowDown from '../../Components/ColumnMiddle/ArrowDown';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => {\n    let dark = theme.palette.type === 'dark';\n    return {\n        background: {\n            background: dark ? theme.palette.grey[900] : 'transparent'\n        },\n        'arrow-down': {\n            background: (dark ? '#303030' : '#FFFFFF') + ' !important',\n            '&:hover': {\n                background: (dark ? '#202020' : '#EEEEEE') + ' !important'\n            },\n            '&:active': {\n                background: (dark ? '#111111' : '#DDDDDD') + ' !important'\n            }\n        }\n    };\n};\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.arrowDown = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadLast = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: 0,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId || this.props.chatId !== chatId) {\n            return;\n        }\n\n        var messages = result.messages;\n        result.messages.reverse();\n        this.setState({ history: result.messages });\n\n        MessageStore.setItems(result.messages);\n        // this.insertBefore(this.filterMessages(result.messages), () => {\n        //     if (!result.messages.length) {\n        //         this.onLoadMigratedHistory();\n        //     }\n        // });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        // MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.arrowDown.current) {\n            this.arrowDown.current.setStatus(list.scrollTop + list.offsetHeight < list.scrollHeight - 10);\n        }\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n                <ArrowDown\n                    class={classes['arrow-down']}\n                    ref={this.arrowDown}\n                    onClick={() => {\n                        this.onLoadLast();\n                        this.scrollToBottom();\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}